{
	"id": "29d453674448a307a4e00c5b7af7704c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/base/Proxy.sol": {
				"content": "// SPDX-License-Identifier: SimPL-2.0\npragma solidity >=0.8.x <0.9.0;\n\nimport \"../base/Base.sol\";\n\ncontract Proxy is Base\n{\n    event Upgraded(address indexed implementation);\n\n    bytes32 internal constant K_SLOT = 0xd5f7436adc48afaf7bd9d058121474d0b68958267edd0b25260c99ad5fb8f7e0;\n\n    constructor() Base()\n    {\n        _owner = msg.sender;\n    }\n\n    function _implementation() internal view returns (address impl) {\n        bytes32 slot = K_SLOT;\n\n        assembly {\n            impl := sload(slot)\n        }\n    }\n\n    function isContract(address _addr) private view returns (bool){\n        uint32 size;\n        assembly {\n            size := extcodesize(_addr)\n        }\n\n        return (size > 0);\n    }\n\n    function _upgradeTo(address newImpl) public isOwner {\n        require(newImpl != address(0), \"Cannot upgrade to invalid address\");\n        require(isContract(newImpl), \"Not a contract\");\n        require(newImpl != _implementation(), \"Cannot upgrade to the same implementation\");\n        bytes32 slot = K_SLOT;\n\n        assembly {\n            sstore(slot, newImpl)\n        }\n        emit Upgraded(newImpl);\n    }\n\n    function _delegate(address implementation) internal {\n        assembly {\n            calldatacopy(0, 0, calldatasize())\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n            returndatacopy(0, 0, returndatasize())\n            switch result\n            case 0 {revert(0, returndatasize())}\n            default {return (0, returndatasize())}\n        }\n    }\n\n    fallback() external override payable {\n        address _impl = _implementation();\n        require(_impl != address(0), \"implementation contract not set\");\n        _delegate(_impl);\n    }\n}\n"
			},
			"contracts/base/Base.sol": {
				"content": "// SPDX-License-Identifier: SimPL-2.0\npragma solidity >=0.8.x <0.9.0;\n\ncontract Base\n{\n    address internal  _owner;\n    address payable internal  _coinbase;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    modifier isOwner() {\n        assert(msg.sender == _owner);\n        _;\n    }\n\n    constructor()\n    {\n        _owner = msg.sender;\n    }\n\n    fallback() external virtual payable {\n        revert();\n    }\n\n    receive() external payable {\n        revert();\n    }\n\n    function setCoinBase(address payable cb) internal isOwner {\n        _coinbase = cb;\n    }\n\n    function transferOwnership(address newOwner) public virtual isOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    function suicide0(address payable receiver)\n    public\n    isOwner {\n        selfdestruct(receiver);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/base/Base.sol": {
				"Base": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "suicide0",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/base/Base.sol\":71:1117  contract Base... */\n  mstore(0x40, 0x80)\n    /* \"contracts/base/Base.sol\":334:388  constructor()... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/base/Base.sol\":362:368  _owner */\n  0x00\n    /* \"contracts/base/Base.sol\":362:381  _owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/base/Base.sol\":371:381  msg.sender */\n  caller\n    /* \"contracts/base/Base.sol\":362:381  _owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/base/Base.sol\":71:1117  contract Base... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/base/Base.sol\":71:1117  contract Base... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x14da447f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_4\n      jumpi\n        /* \"contracts/base/Base.sol\":440:448  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/base/Base.sol\":71:1117  contract Base... */\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/base/Base.sol\":498:506  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/base/Base.sol\":71:1117  contract Base... */\n    tag_2:\n        /* \"contracts/base/Base.sol\":440:448  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/base/Base.sol\":1009:1115  function suicide0(address payable receiver)... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      pop\n      tag_10\n      tag_11\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contracts/base/Base.sol\":614:810  function transferOwnership(address newOwner) public virtual isOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_10\n      tag_16\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n        /* \"contracts/base/Base.sol\":1009:1115  function suicide0(address payable receiver)... */\n    tag_13:\n        /* \"contracts/base/Base.sol\":303:309  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/base/Base.sol\":289:299  msg.sender */\n      caller\n        /* \"contracts/base/Base.sol\":289:309  msg.sender == _owner */\n      eq\n        /* \"contracts/base/Base.sol\":282:310  assert(msg.sender == _owner) */\n      tag_21\n      jumpi\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"contracts/base/Base.sol\":1099:1107  receiver */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/base/Base.sol\":1086:1108  selfdestruct(receiver) */\n      and\n      selfdestruct\n        /* \"contracts/base/Base.sol\":614:810  function transferOwnership(address newOwner) public virtual isOwner {... */\n    tag_18:\n        /* \"contracts/base/Base.sol\":303:309  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/base/Base.sol\":289:299  msg.sender */\n      caller\n        /* \"contracts/base/Base.sol\":289:309  msg.sender == _owner */\n      eq\n        /* \"contracts/base/Base.sol\":282:310  assert(msg.sender == _owner) */\n      tag_26\n      jumpi\n      tag_26\n      tag_22\n      jump\t// in\n    tag_26:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/base/Base.sol\":700:722  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/base/Base.sol\":692:765  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_28\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":728:730   */\n      0x20\n        /* \"contracts/base/Base.sol\":692:765  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":710:731   */\n      mstore\n        /* \"#utility.yul\":767:769   */\n      0x26\n        /* \"#utility.yul\":747:765   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":740:770   */\n      mstore\n        /* \"#utility.yul\":806:840   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":786:804   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":779:841   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":857:875   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":850:886   */\n      mstore\n        /* \"#utility.yul\":903:922   */\n      0x84\n      add\n        /* \"contracts/base/Base.sol\":692:765  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_28:\n        /* \"contracts/base/Base.sol\":775:803  _transferOwnership(newOwner) */\n      tag_31\n        /* \"contracts/base/Base.sol\":794:802  newOwner */\n      dup2\n        /* \"contracts/base/Base.sol\":775:793  _transferOwnership */\n      tag_32\n        /* \"contracts/base/Base.sol\":775:803  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_31:\n        /* \"contracts/base/Base.sol\":614:810  function transferOwnership(address newOwner) public virtual isOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/base/Base.sol\":816:1003  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_32:\n        /* \"contracts/base/Base.sol\":889:905  address oldOwner */\n      0x00\n        /* \"contracts/base/Base.sol\":908:914  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/base/Base.sol\":924:941  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"contracts/base/Base.sol\":956:996  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/base/Base.sol\":908:914  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"contracts/base/Base.sol\":956:996  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"contracts/base/Base.sol\":889:905  address oldOwner */\n      swap1\n        /* \"contracts/base/Base.sol\":956:996  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/base/Base.sol\":879:1003  {... */\n      pop\n        /* \"contracts/base/Base.sol\":816:1003  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:261   */\n    tag_17:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_36\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_36:\n        /* \"#utility.yul\":181:190   */\n      dup2\n        /* \"#utility.yul\":168:191   */\n      calldataload\n        /* \"#utility.yul\":200:231   */\n      tag_37\n        /* \"#utility.yul\":225:230   */\n      dup2\n        /* \"#utility.yul\":200:231   */\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":250:255   */\n      swap4\n        /* \"#utility.yul\":14:261   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":933:1060   */\n    tag_22:\n        /* \"#utility.yul\":994:1004   */\n      0x4e487b71\n        /* \"#utility.yul\":989:992   */\n      0xe0\n        /* \"#utility.yul\":985:1005   */\n      shl\n        /* \"#utility.yul\":982:983   */\n      0x00\n        /* \"#utility.yul\":975:1006   */\n      mstore\n        /* \"#utility.yul\":1025:1029   */\n      0x01\n        /* \"#utility.yul\":1022:1023   */\n      0x04\n        /* \"#utility.yul\":1015:1030   */\n      mstore\n        /* \"#utility.yul\":1049:1053   */\n      0x24\n        /* \"#utility.yul\":1046:1047   */\n      0x00\n        /* \"#utility.yul\":1039:1054   */\n      revert\n        /* \"#utility.yul\":1065:1196   */\n    tag_38:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1140:1171   */\n      dup2\n      and\n        /* \"#utility.yul\":1130:1172   */\n      dup2\n      eq\n        /* \"#utility.yul\":1120:1190   */\n      tag_31\n      jumpi\n        /* \"#utility.yul\":1186:1187   */\n      0x00\n        /* \"#utility.yul\":1183:1184   */\n      dup1\n        /* \"#utility.yul\":1176:1188   */\n      revert\n\n    auxdata: 0xa2646970667358221220ce2fcc8e404564ad965fa715aa4349158bb9b8de109878d68e19adfde3e6090f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_31": {
									"entryPoint": null,
									"id": 31,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610208806100326000396000f3fe60806040526004361061002d5760003560e01c806314da447f1461003c578063f2fde38b1461005e57600080fd5b3661003757600080fd5b600080fd5b34801561004857600080fd5b5061005c610057366004610183565b61007e565b005b34801561006a57600080fd5b5061005c610079366004610183565b6100a4565b6000546001600160a01b03163314610098576100986101a7565b806001600160a01b0316ff5b6000546001600160a01b031633146100be576100be6101a7565b6001600160a01b0381166101275760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840160405180910390fd5b61013081610133565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561019557600080fd5b81356101a0816101bd565b9392505050565b634e487b7160e01b600052600160045260246000fd5b6001600160a01b038116811461013057600080fdfea2646970667358221220ce2fcc8e404564ad965fa715aa4349158bb9b8de109878d68e19adfde3e6090f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x208 DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x14DA447F EQ PUSH2 0x3C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C PUSH2 0x57 CALLDATASIZE PUSH1 0x4 PUSH2 0x183 JUMP JUMPDEST PUSH2 0x7E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C PUSH2 0x79 CALLDATASIZE PUSH1 0x4 PUSH2 0x183 JUMP JUMPDEST PUSH2 0xA4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x98 JUMPI PUSH2 0x98 PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBE JUMPI PUSH2 0xBE PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x127 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x130 DUP2 PUSH2 0x133 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A0 DUP2 PUSH2 0x1BD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0x2F 0xCC DUP15 BLOCKHASH GASLIMIT PUSH5 0xAD965FA715 0xAA NUMBER 0x49 ISZERO DUP12 0xB9 0xB8 0xDE LT SWAP9 PUSH25 0xD68E19ADFDE3E6090F64736F6C634300080700330000000000 ",
							"sourceMap": "71:1046:0:-:0;;;334:54;;;;;;;;;-1:-1:-1;362:6:0;:19;;-1:-1:-1;;;;;;362:19:0;371:10;362:19;;;71:1046;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_38": {
									"entryPoint": null,
									"id": 38,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_45": {
									"entryPoint": null,
									"id": 45,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_98": {
									"entryPoint": 307,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@suicide0_110": {
									"entryPoint": 126,
									"id": 110,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_79": {
									"entryPoint": 164,
									"id": 79,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 423,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1198:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:177:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:2"
															},
															"nodeType": "YulIf",
															"src": "94:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "225:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "200:24:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "200:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "200:31:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "240:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "250:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "240:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:2",
														"type": ""
													}
												],
												"src": "14:247:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "344:177:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "399:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "402:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "392:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "392:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "392:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "365:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "374:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "361:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "357:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "357:32:2"
															},
															"nodeType": "YulIf",
															"src": "354:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "415:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "441:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "428:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "428:23:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "419:5:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "485:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "460:24:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "460:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "460:31:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "500:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "510:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "310:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "321:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "333:6:2",
														"type": ""
													}
												],
												"src": "266:255:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "700:228:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "717:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "728:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "710:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "710:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "710:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "751:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "762:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "747:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "747:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "767:2:2",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "740:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "740:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "740:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "790:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "801:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "786:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "786:18:2"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "806:34:2",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "779:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "779:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "779:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "861:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "872:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "857:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "857:18:2"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "877:8:2",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "850:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "850:36:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "850:36:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "895:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "907:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "918:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "903:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "903:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "895:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "691:4:2",
														"type": ""
													}
												],
												"src": "526:402:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "965:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "982:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "994:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "985:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "985:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "975:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "975:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "975:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1022:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1025:4:2",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1015:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1015:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1015:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1046:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1049:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1039:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1039:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1039:15:2"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "933:127:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1110:86:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1133:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1144:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1159:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1164:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1155:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1155:11:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1168:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1151:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1151:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1140:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1140:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1130:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1130:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1123:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:50:2"
															},
															"nodeType": "YulIf",
															"src": "1120:70:2"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1099:5:2",
														"type": ""
													}
												],
												"src": "1065:131:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x01()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061002d5760003560e01c806314da447f1461003c578063f2fde38b1461005e57600080fd5b3661003757600080fd5b600080fd5b34801561004857600080fd5b5061005c610057366004610183565b61007e565b005b34801561006a57600080fd5b5061005c610079366004610183565b6100a4565b6000546001600160a01b03163314610098576100986101a7565b806001600160a01b0316ff5b6000546001600160a01b031633146100be576100be6101a7565b6001600160a01b0381166101275760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840160405180910390fd5b61013081610133565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561019557600080fd5b81356101a0816101bd565b9392505050565b634e487b7160e01b600052600160045260246000fd5b6001600160a01b038116811461013057600080fdfea2646970667358221220ce2fcc8e404564ad965fa715aa4349158bb9b8de109878d68e19adfde3e6090f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x14DA447F EQ PUSH2 0x3C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C PUSH2 0x57 CALLDATASIZE PUSH1 0x4 PUSH2 0x183 JUMP JUMPDEST PUSH2 0x7E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C PUSH2 0x79 CALLDATASIZE PUSH1 0x4 PUSH2 0x183 JUMP JUMPDEST PUSH2 0xA4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x98 JUMPI PUSH2 0x98 PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBE JUMPI PUSH2 0xBE PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x127 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x130 DUP2 PUSH2 0x133 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A0 DUP2 PUSH2 0x1BD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0x2F 0xCC DUP15 BLOCKHASH GASLIMIT PUSH5 0xAD965FA715 0xAA NUMBER 0x49 ISZERO DUP12 0xB9 0xB8 0xDE LT SWAP9 PUSH25 0xD68E19ADFDE3E6090F64736F6C634300080700330000000000 ",
							"sourceMap": "71:1046:0:-:0;;;;;;;;;;;;;;;;;;;;;;440:8;;;71:1046;;;;498:8;;;71:1046;440:8;;;1009:106;;;;;;;;;;-1:-1:-1;1009:106:0;;;;;:::i;:::-;;:::i;:::-;;614:196;;;;;;;;;;-1:-1:-1;614:196:0;;;;;:::i;:::-;;:::i;1009:106::-;303:6;;-1:-1:-1;;;;;303:6:0;289:10;:20;282:28;;;;:::i;:::-;1099:8:::1;-1:-1:-1::0;;;;;1086:22:0::1;;614:196:::0;303:6;;-1:-1:-1;;;;;303:6:0;289:10;:20;282:28;;;;:::i;:::-;-1:-1:-1;;;;;700:22:0;::::1;692:73;;;::::0;-1:-1:-1;;;692:73:0;;728:2:2;692:73:0::1;::::0;::::1;710:21:2::0;767:2;747:18;;;740:30;806:34;786:18;;;779:62;-1:-1:-1;;;857:18:2;;;850:36;903:19;;692:73:0::1;;;;;;;;775:28;794:8;775:18;:28::i;:::-;614:196:::0;:::o;816:187::-;889:16;908:6;;-1:-1:-1;;;;;924:17:0;;;-1:-1:-1;;;;;;924:17:0;;;;;;956:40;;908:6;;;;;;;956:40;;889:16;956:40;879:124;816:187;:::o;14:247:2:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;200:31;225:5;200:31;:::i;:::-;250:5;14:247;-1:-1:-1;;;14:247:2:o;933:127::-;994:10;989:3;985:20;982:1;975:31;1025:4;1022:1;1015:15;1049:4;1046:1;1039:15;1065:131;-1:-1:-1;;;;;1140:31:2;;1130:42;;1120:70;;1186:1;1183;1176:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "104000",
								"executionCost": "24388",
								"totalCost": "128388"
							},
							"external": {
								"": "101",
								"suicide0(address)": "30026",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_transferOwnership(address)": "25821",
								"setCoinBase(address payable)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 71,
									"end": 1117,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 71,
									"end": 1117,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 71,
									"end": 1117,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 334,
									"end": 388,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 334,
									"end": 388,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 334,
									"end": 388,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 334,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 334,
									"end": 388,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 334,
									"end": 388,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 388,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 334,
									"end": 388,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 334,
									"end": 388,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 334,
									"end": 388,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 362,
									"end": 368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 381,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 362,
									"end": 381,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 381,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 371,
									"end": 381,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 362,
									"end": 381,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 362,
									"end": 381,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 362,
									"end": 381,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 71,
									"end": 1117,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 71,
									"end": 1117,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 71,
									"end": 1117,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 71,
									"end": 1117,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 71,
									"end": 1117,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 71,
									"end": 1117,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 71,
									"end": 1117,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ce2fcc8e404564ad965fa715aa4349158bb9b8de109878d68e19adfde3e6090f64736f6c63430008070033",
									".code": [
										{
											"begin": 71,
											"end": 1117,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "PUSH",
											"source": 0,
											"value": "14DA447F"
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 440,
											"end": 448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 440,
											"end": 448,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 498,
											"end": 506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 498,
											"end": 506,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 71,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 440,
											"end": 448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 440,
											"end": 448,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 614,
											"end": 810,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 614,
											"end": 810,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 614,
											"end": 810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 614,
											"end": 810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 614,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 614,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 614,
											"end": 810,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 614,
											"end": 810,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 614,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 614,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 614,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 303,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 303,
											"end": 309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 289,
											"end": 299,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 289,
											"end": 309,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 282,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 282,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "SELFDESTRUCT",
											"source": 0
										},
										{
											"begin": 614,
											"end": 810,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 303,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 303,
											"end": 309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 289,
											"end": 299,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 289,
											"end": 309,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 282,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 282,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 700,
											"end": 722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 700,
											"end": 722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 692,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 692,
											"end": 765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 692,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 692,
											"end": 765,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 692,
											"end": 765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 692,
											"end": 765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 728,
											"end": 730,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 692,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 692,
											"end": 765,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 692,
											"end": 765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 710,
											"end": 731,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 767,
											"end": 769,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 747,
											"end": 765,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 747,
											"end": 765,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 747,
											"end": 765,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 740,
											"end": 770,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 806,
											"end": 840,
											"name": "PUSH",
											"source": 2,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 786,
											"end": 804,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 786,
											"end": 804,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 786,
											"end": 804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 779,
											"end": 841,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 857,
											"end": 875,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 857,
											"end": 875,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 857,
											"end": 875,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 850,
											"end": 886,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 903,
											"end": 922,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 903,
											"end": 922,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 692,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 692,
											"end": 765,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 692,
											"end": 765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 692,
											"end": 765,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 692,
											"end": 765,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 692,
											"end": 765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 692,
											"end": 765,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 692,
											"end": 765,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 692,
											"end": 765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 775,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 794,
											"end": 802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 775,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 775,
											"end": 803,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 775,
											"end": 803,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 775,
											"end": 803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 614,
											"end": 810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 614,
											"end": 810,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 816,
											"end": 1003,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 816,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 889,
											"end": 905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 908,
											"end": 914,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 924,
											"end": 941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 924,
											"end": 941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 924,
											"end": 941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 924,
											"end": 941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 924,
											"end": 941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 924,
											"end": 941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 924,
											"end": 941,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 924,
											"end": 941,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 924,
											"end": 941,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 956,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 956,
											"end": 996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 908,
											"end": 914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 908,
											"end": 914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 908,
											"end": 914,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 908,
											"end": 914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 908,
											"end": 914,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 908,
											"end": 914,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 908,
											"end": 914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 956,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 956,
											"end": 996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 889,
											"end": 905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 956,
											"end": 996,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 879,
											"end": 1003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 816,
											"end": 1003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 816,
											"end": 1003,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 261,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 14,
											"end": 261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 181,
											"end": 190,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 200,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 225,
											"end": 230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 200,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 250,
											"end": 255,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14,
											"end": 261,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 261,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 933,
											"end": 1060,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 933,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1004,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 989,
											"end": 992,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 985,
											"end": 1005,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 982,
											"end": 983,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 1006,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1029,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1022,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1015,
											"end": 1030,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1053,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1046,
											"end": 1047,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1039,
											"end": 1054,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1196,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1065,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1140,
											"end": 1171,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1171,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1130,
											"end": 1172,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1130,
											"end": 1172,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1120,
											"end": 1190,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1188,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"suicide0(address)": "14da447f",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"suicide0\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/Base.sol\":\"Base\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/base/Base.sol\":{\"keccak256\":\"0xb8c8839491cb4120d5d37e7997703d885350f1b953dab0a7962ea41336c63b6e\",\"license\":\"SimPL-2.0\",\"urls\":[\"bzz-raw://9c6ef29412526a3c7c460da13095463547376384e47e7ed9d15778e27a5bd319\",\"dweb:/ipfs/QmTnJNKmo1LWfbkectMpV4XPXwLBzUajzrVyvnmqXbNGV5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/base/Base.sol:Base",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "contracts/base/Base.sol:Base",
								"label": "_coinbase",
								"offset": 0,
								"slot": "1",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/base/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImpl",
									"type": "address"
								}
							],
							"name": "_upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "suicide0",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/base/Proxy.sol\":99:1728  contract Proxy is Base... */\n  mstore(0x40, 0x80)\n    /* \"contracts/base/Proxy.sol\":289:350  constructor() Base()... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/base/Base.sol\":362:368  _owner */\n  0x00\n    /* \"contracts/base/Base.sol\":362:381  _owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"contracts/base/Base.sol\":371:381  msg.sender */\n  caller\n    /* \"contracts/base/Proxy.sol\":324:343  _owner = msg.sender */\n  dup2\n  dup2\n  and\n    /* \"contracts/base/Base.sol\":362:381  _owner = msg.sender */\n  swap2\n  swap1\n  swap3\n  and\n    /* \"contracts/base/Proxy.sol\":324:343  _owner = msg.sender */\n  or\n  or\n  swap1\n  sstore\n    /* \"contracts/base/Proxy.sol\":99:1728  contract Proxy is Base... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/base/Proxy.sol\":99:1728  contract Proxy is Base... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x14da447f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x34140748\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/base/Base.sol\":498:506  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/base/Proxy.sol\":99:1728  contract Proxy is Base... */\n    tag_2:\n        /* \"contracts/base/Proxy.sol\":1587:1600  address _impl */\n      0x00\n        /* \"contracts/base/Proxy.sol\":1603:1620  _implementation() */\n      tag_10\n        /* \"contracts/base/Proxy.sol\":216:282  0xd5f7436adc48afaf7bd9d058121474d0b68958267edd0b25260c99ad5fb8f7e0 */\n      0xd5f7436adc48afaf7bd9d058121474d0b68958267edd0b25260c99ad5fb8f7e0\n        /* \"contracts/base/Proxy.sol\":493:504  sload(slot) */\n      sload\n      swap1\n        /* \"contracts/base/Proxy.sol\":356:520  function _implementation() internal view returns (address impl) {... */\n      jump\n        /* \"contracts/base/Proxy.sol\":1603:1620  _implementation() */\n    tag_10:\n        /* \"contracts/base/Proxy.sol\":1587:1620  address _impl = _implementation() */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/base/Proxy.sol\":1638:1657  _impl != address(0) */\n      dup2\n      and\n        /* \"contracts/base/Proxy.sol\":1630:1693  require(_impl != address(0), \"implementation contract not set\") */\n      tag_12\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1537:1539   */\n      0x20\n        /* \"contracts/base/Proxy.sol\":1630:1693  require(_impl != address(0), \"implementation contract not set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1519:1540   */\n      mstore\n        /* \"#utility.yul\":1576:1578   */\n      0x1f\n        /* \"#utility.yul\":1556:1574   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1549:1579   */\n      mstore\n        /* \"#utility.yul\":1615:1648   */\n      0x696d706c656d656e746174696f6e20636f6e7472616374206e6f742073657400\n        /* \"#utility.yul\":1595:1613   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1588:1649   */\n      mstore\n        /* \"#utility.yul\":1666:1684   */\n      0x64\n      add\n        /* \"contracts/base/Proxy.sol\":1630:1693  require(_impl != address(0), \"implementation contract not set\") */\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_12:\n        /* \"contracts/base/Proxy.sol\":1703:1719  _delegate(_impl) */\n      tag_15\n        /* \"contracts/base/Proxy.sol\":1713:1718  _impl */\n      dup2\n        /* \"contracts/base/Proxy.sol\":1703:1712  _delegate */\n      tag_16\n        /* \"contracts/base/Proxy.sol\":1703:1719  _delegate(_impl) */\n      jump\t// in\n    tag_15:\n        /* \"contracts/base/Proxy.sol\":1577:1726  {... */\n      pop\n        /* \"contracts/base/Proxy.sol\":99:1728  contract Proxy is Base... */\n      stop\n        /* \"contracts/base/Base.sol\":1009:1115  function suicide0(address payable receiver)... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/base/Proxy.sol\":718:1129  function _upgradeTo(address newImpl) public isOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_18\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n        /* \"contracts/base/Base.sol\":614:810  function transferOwnership(address newOwner) public virtual isOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_18\n      tag_29\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n        /* \"contracts/base/Proxy.sol\":1135:1534  function _delegate(address implementation) internal {... */\n    tag_16:\n        /* \"contracts/base/Proxy.sol\":1239:1253  calldatasize() */\n      calldatasize\n        /* \"contracts/base/Proxy.sol\":1236:1237  0 */\n      0x00\n        /* \"contracts/base/Proxy.sol\":1233:1234  0 */\n      dup1\n        /* \"contracts/base/Proxy.sol\":1220:1254  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"contracts/base/Proxy.sol\":1339:1340  0 */\n      0x00\n        /* \"contracts/base/Proxy.sol\":1336:1337  0 */\n      dup1\n        /* \"contracts/base/Proxy.sol\":1320:1334  calldatasize() */\n      calldatasize\n        /* \"contracts/base/Proxy.sol\":1317:1318  0 */\n      0x00\n        /* \"contracts/base/Proxy.sol\":1301:1315  implementation */\n      dup5\n        /* \"contracts/base/Proxy.sol\":1294:1299  gas() */\n      gas\n        /* \"contracts/base/Proxy.sol\":1281:1341  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"contracts/base/Proxy.sol\":1375:1391  returndatasize() */\n      returndatasize\n        /* \"contracts/base/Proxy.sol\":1372:1373  0 */\n      0x00\n        /* \"contracts/base/Proxy.sol\":1369:1370  0 */\n      dup1\n        /* \"contracts/base/Proxy.sol\":1354:1392  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"contracts/base/Proxy.sol\":1412:1418  result */\n      dup1\n        /* \"contracts/base/Proxy.sol\":1431:1467  case 0 {revert(0, returndatasize())} */\n      dup1\n      iszero\n      tag_34\n      jumpi\n        /* \"contracts/base/Proxy.sol\":1500:1516  returndatasize() */\n      returndatasize\n        /* \"contracts/base/Proxy.sol\":1497:1498  0 */\n      0x00\n        /* \"contracts/base/Proxy.sol\":1489:1517  return (0, returndatasize()) */\n      return\n        /* \"contracts/base/Proxy.sol\":1431:1467  case 0 {revert(0, returndatasize())} */\n    tag_34:\n        /* \"contracts/base/Proxy.sol\":1449:1465  returndatasize() */\n      returndatasize\n        /* \"contracts/base/Proxy.sol\":1446:1447  0 */\n      0x00\n        /* \"contracts/base/Proxy.sol\":1439:1466  revert(0, returndatasize()) */\n      revert\n        /* \"contracts/base/Base.sol\":1009:1115  function suicide0(address payable receiver)... */\n    tag_21:\n        /* \"contracts/base/Base.sol\":303:309  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/base/Base.sol\":289:299  msg.sender */\n      caller\n        /* \"contracts/base/Base.sol\":289:309  msg.sender == _owner */\n      eq\n        /* \"contracts/base/Base.sol\":282:310  assert(msg.sender == _owner) */\n      tag_37\n      jumpi\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"contracts/base/Base.sol\":1099:1107  receiver */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/base/Base.sol\":1086:1108  selfdestruct(receiver) */\n      and\n      selfdestruct\n        /* \"contracts/base/Proxy.sol\":718:1129  function _upgradeTo(address newImpl) public isOwner {... */\n    tag_26:\n        /* \"contracts/base/Base.sol\":303:309  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/base/Base.sol\":289:299  msg.sender */\n      caller\n        /* \"contracts/base/Base.sol\":289:309  msg.sender == _owner */\n      eq\n        /* \"contracts/base/Base.sol\":282:310  assert(msg.sender == _owner) */\n      tag_42\n      jumpi\n      tag_42\n      tag_38\n      jump\t// in\n    tag_42:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/base/Proxy.sol\":788:809  newImpl != address(0) */\n      dup2\n      and\n        /* \"contracts/base/Proxy.sol\":780:847  require(newImpl != address(0), \"Cannot upgrade to invalid address\") */\n      tag_44\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1135:1137   */\n      0x20\n        /* \"contracts/base/Proxy.sol\":780:847  require(newImpl != address(0), \"Cannot upgrade to invalid address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1117:1138   */\n      mstore\n        /* \"#utility.yul\":1174:1176   */\n      0x21\n        /* \"#utility.yul\":1154:1172   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1147:1177   */\n      mstore\n        /* \"#utility.yul\":1213:1247   */\n      0x43616e6e6f74207570677261646520746f20696e76616c696420616464726573\n        /* \"#utility.yul\":1193:1211   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1186:1248   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":1264:1282   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1257:1288   */\n      mstore\n        /* \"#utility.yul\":1305:1324   */\n      0x84\n      add\n        /* \"contracts/base/Proxy.sol\":780:847  require(newImpl != address(0), \"Cannot upgrade to invalid address\") */\n      tag_13\n        /* \"#utility.yul\":933:1330   */\n      jump\n        /* \"contracts/base/Proxy.sol\":780:847  require(newImpl != address(0), \"Cannot upgrade to invalid address\") */\n    tag_44:\n        /* \"contracts/base/Proxy.sol\":650:668  extcodesize(_addr) */\n      dup1\n      extcodesize\n        /* \"contracts/base/Proxy.sol\":696:704  size > 0 */\n      0xffffffff\n      and\n        /* \"contracts/base/Proxy.sol\":857:903  require(isContract(newImpl), \"Not a contract\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1897:1899   */\n      0x20\n        /* \"contracts/base/Proxy.sol\":857:903  require(isContract(newImpl), \"Not a contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1879:1900   */\n      mstore\n        /* \"#utility.yul\":1936:1938   */\n      0x0e\n        /* \"#utility.yul\":1916:1934   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1909:1939   */\n      mstore\n      shl(0x92, 0x139bdd08184818dbdb9d1c9858dd)\n        /* \"#utility.yul\":1955:1973   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1948:1992   */\n      mstore\n        /* \"#utility.yul\":2009:2027   */\n      0x64\n      add\n        /* \"contracts/base/Proxy.sol\":857:903  require(isContract(newImpl), \"Not a contract\") */\n      tag_13\n        /* \"#utility.yul\":1695:2033   */\n      jump\n        /* \"contracts/base/Proxy.sol\":857:903  require(isContract(newImpl), \"Not a contract\") */\n    tag_49:\n        /* \"contracts/base/Proxy.sol\":216:282  0xd5f7436adc48afaf7bd9d058121474d0b68958267edd0b25260c99ad5fb8f7e0 */\n      0xd5f7436adc48afaf7bd9d058121474d0b68958267edd0b25260c99ad5fb8f7e0\n        /* \"contracts/base/Proxy.sol\":493:504  sload(slot) */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/base/Proxy.sol\":921:949  newImpl != _implementation() */\n      and\n        /* \"contracts/base/Proxy.sol\":921:928  newImpl */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/base/Proxy.sol\":921:949  newImpl != _implementation() */\n      and\n      eq\n      iszero\n        /* \"contracts/base/Proxy.sol\":913:995  require(newImpl != _implementation(), \"Cannot upgrade to the same implementation\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2240:2242   */\n      0x20\n        /* \"contracts/base/Proxy.sol\":913:995  require(newImpl != _implementation(), \"Cannot upgrade to the same implementation\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2222:2243   */\n      mstore\n        /* \"#utility.yul\":2279:2281   */\n      0x29\n        /* \"#utility.yul\":2259:2277   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2252:2282   */\n      mstore\n        /* \"#utility.yul\":2318:2352   */\n      0x43616e6e6f74207570677261646520746f207468652073616d6520696d706c65\n        /* \"#utility.yul\":2298:2316   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2291:2353   */\n      mstore\n      shl(0xb9, 0x36b2b73a30ba34b7b7)\n        /* \"#utility.yul\":2369:2387   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2362:2401   */\n      mstore\n        /* \"#utility.yul\":2418:2437   */\n      0x84\n      add\n        /* \"contracts/base/Proxy.sol\":913:995  require(newImpl != _implementation(), \"Cannot upgrade to the same implementation\") */\n      tag_13\n        /* \"#utility.yul\":2038:2443   */\n      jump\n        /* \"contracts/base/Proxy.sol\":913:995  require(newImpl != _implementation(), \"Cannot upgrade to the same implementation\") */\n    tag_53:\n        /* \"contracts/base/Proxy.sol\":216:282  0xd5f7436adc48afaf7bd9d058121474d0b68958267edd0b25260c99ad5fb8f7e0 */\n      0xd5f7436adc48afaf7bd9d058121474d0b68958267edd0b25260c99ad5fb8f7e0\n        /* \"contracts/base/Proxy.sol\":1060:1081  sstore(slot, newImpl) */\n      dup2\n      dup2\n      sstore\n        /* \"contracts/base/Proxy.sol\":1105:1122  Upgraded(newImpl) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n        /* \"contracts/base/Proxy.sol\":1005:1017  bytes32 slot */\n      0x00\n      swap1\n        /* \"contracts/base/Proxy.sol\":1105:1122  Upgraded(newImpl) */\n      log2\n        /* \"contracts/base/Proxy.sol\":770:1129  {... */\n      pop\n        /* \"contracts/base/Proxy.sol\":718:1129  function _upgradeTo(address newImpl) public isOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/base/Base.sol\":614:810  function transferOwnership(address newOwner) public virtual isOwner {... */\n    tag_30:\n        /* \"contracts/base/Base.sol\":303:309  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/base/Base.sol\":289:299  msg.sender */\n      caller\n        /* \"contracts/base/Base.sol\":289:309  msg.sender == _owner */\n      eq\n        /* \"contracts/base/Base.sol\":282:310  assert(msg.sender == _owner) */\n      tag_58\n      jumpi\n      tag_58\n      tag_38\n      jump\t// in\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/base/Base.sol\":700:722  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/base/Base.sol\":692:765  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":728:730   */\n      0x20\n        /* \"contracts/base/Base.sol\":692:765  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":710:731   */\n      mstore\n        /* \"#utility.yul\":767:769   */\n      0x26\n        /* \"#utility.yul\":747:765   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":740:770   */\n      mstore\n        /* \"#utility.yul\":806:840   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":786:804   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":779:841   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":857:875   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":850:886   */\n      mstore\n        /* \"#utility.yul\":903:922   */\n      0x84\n      add\n        /* \"contracts/base/Base.sol\":692:765  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_13\n        /* \"#utility.yul\":526:928   */\n      jump\n        /* \"contracts/base/Base.sol\":692:765  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_60:\n        /* \"contracts/base/Base.sol\":775:803  _transferOwnership(newOwner) */\n      tag_63\n        /* \"contracts/base/Base.sol\":794:802  newOwner */\n      dup2\n        /* \"contracts/base/Base.sol\":775:793  _transferOwnership */\n      tag_64\n        /* \"contracts/base/Base.sol\":775:803  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_63:\n        /* \"contracts/base/Base.sol\":614:810  function transferOwnership(address newOwner) public virtual isOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/base/Base.sol\":816:1003  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_64:\n        /* \"contracts/base/Base.sol\":889:905  address oldOwner */\n      0x00\n        /* \"contracts/base/Base.sol\":908:914  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/base/Base.sol\":924:941  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"contracts/base/Base.sol\":956:996  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/base/Base.sol\":908:914  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"contracts/base/Base.sol\":956:996  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"contracts/base/Base.sol\":889:905  address oldOwner */\n      swap1\n        /* \"contracts/base/Base.sol\":956:996  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/base/Base.sol\":879:1003  {... */\n      pop\n        /* \"contracts/base/Base.sol\":816:1003  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:261   */\n    tag_25:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_69:\n        /* \"#utility.yul\":181:190   */\n      dup2\n        /* \"#utility.yul\":168:191   */\n      calldataload\n        /* \"#utility.yul\":200:231   */\n      tag_70\n        /* \"#utility.yul\":225:230   */\n      dup2\n        /* \"#utility.yul\":200:231   */\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":250:255   */\n      swap4\n        /* \"#utility.yul\":14:261   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2448:2575   */\n    tag_38:\n        /* \"#utility.yul\":2509:2519   */\n      0x4e487b71\n        /* \"#utility.yul\":2504:2507   */\n      0xe0\n        /* \"#utility.yul\":2500:2520   */\n      shl\n        /* \"#utility.yul\":2497:2498   */\n      0x00\n        /* \"#utility.yul\":2490:2521   */\n      mstore\n        /* \"#utility.yul\":2540:2544   */\n      0x01\n        /* \"#utility.yul\":2537:2538   */\n      0x04\n        /* \"#utility.yul\":2530:2545   */\n      mstore\n        /* \"#utility.yul\":2564:2568   */\n      0x24\n        /* \"#utility.yul\":2561:2562   */\n      0x00\n        /* \"#utility.yul\":2554:2569   */\n      revert\n        /* \"#utility.yul\":2580:2711   */\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2655:2686   */\n      dup2\n      and\n        /* \"#utility.yul\":2645:2687   */\n      dup2\n      eq\n        /* \"#utility.yul\":2635:2705   */\n      tag_63\n      jumpi\n        /* \"#utility.yul\":2701:2702   */\n      0x00\n        /* \"#utility.yul\":2698:2699   */\n      dup1\n        /* \"#utility.yul\":2691:2703   */\n      revert\n\n    auxdata: 0xa2646970667358221220a7bf9640bd75c38465b99c8fed49e22ea1aa5b4181b2f4cd93d1d7caac43876964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_134": {
									"entryPoint": null,
									"id": 134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_31": {
									"entryPoint": null,
									"id": 31,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600080546001600160a01b0319338181169190921617179055610491806100396000396000f3fe6080604052600436106100385760003560e01c806314da447f146100d557806334140748146100f7578063f2fde38b1461011757610042565b3661004257600080fd5b600061006c7fd5f7436adc48afaf7bd9d058121474d0b68958267edd0b25260c99ad5fb8f7e05490565b90506001600160a01b0381166100c95760405162461bcd60e51b815260206004820152601f60248201527f696d706c656d656e746174696f6e20636f6e7472616374206e6f74207365740060448201526064015b60405180910390fd5b6100d281610137565b50005b3480156100e157600080fd5b506100f56100f036600461040c565b61015b565b005b34801561010357600080fd5b506100f561011236600461040c565b610181565b34801561012357600080fd5b506100f561013236600461040c565b610331565b3660008037600080366000845af43d6000803e808015610156573d6000f35b3d6000fd5b6000546001600160a01b0316331461017557610175610430565b806001600160a01b0316ff5b6000546001600160a01b0316331461019b5761019b610430565b6001600160a01b0381166101fb5760405162461bcd60e51b815260206004820152602160248201527f43616e6e6f74207570677261646520746f20696e76616c6964206164647265736044820152607360f81b60648201526084016100c0565b803b63ffffffff166102405760405162461bcd60e51b815260206004820152600e60248201526d139bdd08184818dbdb9d1c9858dd60921b60448201526064016100c0565b7fd5f7436adc48afaf7bd9d058121474d0b68958267edd0b25260c99ad5fb8f7e0546001600160a01b0316816001600160a01b031614156102d55760405162461bcd60e51b815260206004820152602960248201527f43616e6e6f74207570677261646520746f207468652073616d6520696d706c6560448201526836b2b73a30ba34b7b760b91b60648201526084016100c0565b7fd5f7436adc48afaf7bd9d058121474d0b68958267edd0b25260c99ad5fb8f7e08181556040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a25050565b6000546001600160a01b0316331461034b5761034b610430565b6001600160a01b0381166103b05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100c0565b6103b9816103bc565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561041e57600080fd5b813561042981610446565b9392505050565b634e487b7160e01b600052600160045260246000fd5b6001600160a01b03811681146103b957600080fdfea2646970667358221220a7bf9640bd75c38465b99c8fed49e22ea1aa5b4181b2f4cd93d1d7caac43876964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT CALLER DUP2 DUP2 AND SWAP2 SWAP1 SWAP3 AND OR OR SWAP1 SSTORE PUSH2 0x491 DUP1 PUSH2 0x39 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x14DA447F EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x34140748 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x117 JUMPI PUSH2 0x42 JUMP JUMPDEST CALLDATASIZE PUSH2 0x42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6C PUSH32 0xD5F7436ADC48AFAF7BD9D058121474D0B68958267EDD0B25260C99AD5FB8F7E0 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696D706C656D656E746174696F6E20636F6E7472616374206E6F742073657400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD2 DUP2 PUSH2 0x137 JUMP JUMPDEST POP STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0xF0 CALLDATASIZE PUSH1 0x4 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x15B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x331 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x156 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x175 JUMPI PUSH2 0x175 PUSH2 0x430 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x19B JUMPI PUSH2 0x19B PUSH2 0x430 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207570677261646520746F20696E76616C696420616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH4 0xFFFFFFFF AND PUSH2 0x240 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08184818DBDB9D1C9858DD PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0 JUMP JUMPDEST PUSH32 0xD5F7436ADC48AFAF7BD9D058121474D0B68958267EDD0B25260C99AD5FB8F7E0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207570677261646520746F207468652073616D6520696D706C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x36B2B73A30BA34B7B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0 JUMP JUMPDEST PUSH32 0xD5F7436ADC48AFAF7BD9D058121474D0B68958267EDD0B25260C99AD5FB8F7E0 DUP2 DUP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x34B JUMPI PUSH2 0x34B PUSH2 0x430 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x3B9 DUP2 PUSH2 0x3BC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x429 DUP2 PUSH2 0x446 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 0xBF SWAP7 BLOCKHASH 0xBD PUSH22 0xC38465B99C8FED49E22EA1AA5B4181B2F4CD93D1D7CA 0xAC NUMBER DUP8 PUSH10 0x64736F6C634300080700 CALLER ",
							"sourceMap": "99:1629:1:-:0;;;289:61;;;;;;;;;-1:-1:-1;362:6:0;:19;;-1:-1:-1;;;;;;371:10:0;324:19:1;;;362::0;;;;324::1;::::1;::::0;;99:1629;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_235": {
									"entryPoint": null,
									"id": 235,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_45": {
									"entryPoint": null,
									"id": 45,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_211": {
									"entryPoint": 311,
									"id": 211,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_implementation_145": {
									"entryPoint": null,
									"id": 145,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_98": {
									"entryPoint": 956,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeTo_204": {
									"entryPoint": 385,
									"id": 204,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isContract_162": {
									"entryPoint": null,
									"id": 162,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@suicide0_110": {
									"entryPoint": 347,
									"id": 110,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_79": {
									"entryPoint": 817,
									"id": 79,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_40fd158ccb4d730ef918126ee4e5fec6a1060af40d7fd53a6ad16f84e0b2db51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5a060aff13d6864b47c6236c6882666ad9e2a52ff2759d6ffe86b83c08369e03__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a7125e02b15b9624893e22fc887adf7b442cd1c1f4fc92da8a28be0486c1faa3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e8bdeb1d90ce7cb8f42305bc43011f7ba4278ddc3807debdfae45edccb4cb9d6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 1072,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 1094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2713:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:177:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:2"
															},
															"nodeType": "YulIf",
															"src": "94:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "225:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "200:24:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "200:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "200:31:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "240:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "250:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "240:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:2",
														"type": ""
													}
												],
												"src": "14:247:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "344:177:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "399:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "402:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "392:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "392:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "392:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "365:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "374:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "361:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "357:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "357:32:2"
															},
															"nodeType": "YulIf",
															"src": "354:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "415:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "441:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "428:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "428:23:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "419:5:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "485:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "460:24:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "460:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "460:31:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "500:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "510:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "310:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "321:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "333:6:2",
														"type": ""
													}
												],
												"src": "266:255:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "700:228:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "717:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "728:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "710:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "710:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "710:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "751:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "762:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "747:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "747:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "767:2:2",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "740:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "740:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "740:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "790:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "801:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "786:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "786:18:2"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "806:34:2",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "779:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "779:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "779:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "861:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "872:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "857:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "857:18:2"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "877:8:2",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "850:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "850:36:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "850:36:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "895:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "907:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "918:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "903:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "903:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "895:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "691:4:2",
														"type": ""
													}
												],
												"src": "526:402:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1107:223:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1124:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1135:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1117:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1117:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1158:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1169:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1154:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1154:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1174:2:2",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1147:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1147:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1147:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1197:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1208:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1193:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1193:18:2"
																	},
																	{
																		"hexValue": "43616e6e6f74207570677261646520746f20696e76616c696420616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1213:34:2",
																		"type": "",
																		"value": "Cannot upgrade to invalid addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1186:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1186:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1186:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1268:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1279:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1264:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1264:18:2"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1284:3:2",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1257:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1257:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1257:31:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1297:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1309:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1320:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1305:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1305:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1297:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_40fd158ccb4d730ef918126ee4e5fec6a1060af40d7fd53a6ad16f84e0b2db51__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1084:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1098:4:2",
														"type": ""
													}
												],
												"src": "933:397:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1509:181:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1526:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1537:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1519:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1519:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1560:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1571:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1556:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1556:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1576:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1549:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1549:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1549:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1599:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1610:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1595:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1595:18:2"
																	},
																	{
																		"hexValue": "696d706c656d656e746174696f6e20636f6e7472616374206e6f7420736574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1615:33:2",
																		"type": "",
																		"value": "implementation contract not set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1588:61:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1588:61:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1670:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1681:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1666:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1666:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1658:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5a060aff13d6864b47c6236c6882666ad9e2a52ff2759d6ffe86b83c08369e03__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1486:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1500:4:2",
														"type": ""
													}
												],
												"src": "1335:355:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1869:164:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1886:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1897:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1879:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1879:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1879:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1920:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1931:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1916:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1916:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1936:2:2",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1909:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1909:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1909:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1959:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1970:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1955:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1955:18:2"
																	},
																	{
																		"hexValue": "4e6f74206120636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1975:16:2",
																		"type": "",
																		"value": "Not a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1948:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1948:44:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1948:44:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2001:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2013:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2024:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2009:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2001:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a7125e02b15b9624893e22fc887adf7b442cd1c1f4fc92da8a28be0486c1faa3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1846:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1860:4:2",
														"type": ""
													}
												],
												"src": "1695:338:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2212:231:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2229:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2240:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2222:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2222:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2222:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2274:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2259:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2259:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2279:2:2",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2252:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2252:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2252:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2302:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2313:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2298:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2298:18:2"
																	},
																	{
																		"hexValue": "43616e6e6f74207570677261646520746f207468652073616d6520696d706c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2318:34:2",
																		"type": "",
																		"value": "Cannot upgrade to the same imple"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2291:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2291:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2291:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2373:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2384:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2369:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2369:18:2"
																	},
																	{
																		"hexValue": "6d656e746174696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2389:11:2",
																		"type": "",
																		"value": "mentation"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2362:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2362:39:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2362:39:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2410:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2422:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2433:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2418:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2410:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e8bdeb1d90ce7cb8f42305bc43011f7ba4278ddc3807debdfae45edccb4cb9d6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2189:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2203:4:2",
														"type": ""
													}
												],
												"src": "2038:405:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2480:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2497:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2504:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2509:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2500:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2500:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2490:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2490:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2540:4:2",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2530:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2530:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2530:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2561:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2564:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2554:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2554:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2554:15:2"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "2448:127:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2625:86:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2689:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2698:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2701:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2691:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2691:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2691:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2648:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2659:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2674:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2679:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2670:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2670:11:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2683:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "2666:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2666:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2655:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2655:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2645:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2645:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2638:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2638:50:2"
															},
															"nodeType": "YulIf",
															"src": "2635:70:2"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2614:5:2",
														"type": ""
													}
												],
												"src": "2580:131:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_40fd158ccb4d730ef918126ee4e5fec6a1060af40d7fd53a6ad16f84e0b2db51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Cannot upgrade to invalid addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5a060aff13d6864b47c6236c6882666ad9e2a52ff2759d6ffe86b83c08369e03__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"implementation contract not set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a7125e02b15b9624893e22fc887adf7b442cd1c1f4fc92da8a28be0486c1faa3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not a contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e8bdeb1d90ce7cb8f42305bc43011f7ba4278ddc3807debdfae45edccb4cb9d6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Cannot upgrade to the same imple\")\n        mstore(add(headStart, 96), \"mentation\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x01()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100385760003560e01c806314da447f146100d557806334140748146100f7578063f2fde38b1461011757610042565b3661004257600080fd5b600061006c7fd5f7436adc48afaf7bd9d058121474d0b68958267edd0b25260c99ad5fb8f7e05490565b90506001600160a01b0381166100c95760405162461bcd60e51b815260206004820152601f60248201527f696d706c656d656e746174696f6e20636f6e7472616374206e6f74207365740060448201526064015b60405180910390fd5b6100d281610137565b50005b3480156100e157600080fd5b506100f56100f036600461040c565b61015b565b005b34801561010357600080fd5b506100f561011236600461040c565b610181565b34801561012357600080fd5b506100f561013236600461040c565b610331565b3660008037600080366000845af43d6000803e808015610156573d6000f35b3d6000fd5b6000546001600160a01b0316331461017557610175610430565b806001600160a01b0316ff5b6000546001600160a01b0316331461019b5761019b610430565b6001600160a01b0381166101fb5760405162461bcd60e51b815260206004820152602160248201527f43616e6e6f74207570677261646520746f20696e76616c6964206164647265736044820152607360f81b60648201526084016100c0565b803b63ffffffff166102405760405162461bcd60e51b815260206004820152600e60248201526d139bdd08184818dbdb9d1c9858dd60921b60448201526064016100c0565b7fd5f7436adc48afaf7bd9d058121474d0b68958267edd0b25260c99ad5fb8f7e0546001600160a01b0316816001600160a01b031614156102d55760405162461bcd60e51b815260206004820152602960248201527f43616e6e6f74207570677261646520746f207468652073616d6520696d706c6560448201526836b2b73a30ba34b7b760b91b60648201526084016100c0565b7fd5f7436adc48afaf7bd9d058121474d0b68958267edd0b25260c99ad5fb8f7e08181556040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a25050565b6000546001600160a01b0316331461034b5761034b610430565b6001600160a01b0381166103b05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100c0565b6103b9816103bc565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561041e57600080fd5b813561042981610446565b9392505050565b634e487b7160e01b600052600160045260246000fd5b6001600160a01b03811681146103b957600080fdfea2646970667358221220a7bf9640bd75c38465b99c8fed49e22ea1aa5b4181b2f4cd93d1d7caac43876964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x14DA447F EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x34140748 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x117 JUMPI PUSH2 0x42 JUMP JUMPDEST CALLDATASIZE PUSH2 0x42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6C PUSH32 0xD5F7436ADC48AFAF7BD9D058121474D0B68958267EDD0B25260C99AD5FB8F7E0 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696D706C656D656E746174696F6E20636F6E7472616374206E6F742073657400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD2 DUP2 PUSH2 0x137 JUMP JUMPDEST POP STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0xF0 CALLDATASIZE PUSH1 0x4 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x15B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0x40C JUMP JUMPDEST PUSH2 0x331 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x156 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x175 JUMPI PUSH2 0x175 PUSH2 0x430 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x19B JUMPI PUSH2 0x19B PUSH2 0x430 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207570677261646520746F20696E76616C696420616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH4 0xFFFFFFFF AND PUSH2 0x240 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08184818DBDB9D1C9858DD PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC0 JUMP JUMPDEST PUSH32 0xD5F7436ADC48AFAF7BD9D058121474D0B68958267EDD0B25260C99AD5FB8F7E0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207570677261646520746F207468652073616D6520696D706C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x36B2B73A30BA34B7B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0 JUMP JUMPDEST PUSH32 0xD5F7436ADC48AFAF7BD9D058121474D0B68958267EDD0B25260C99AD5FB8F7E0 DUP2 DUP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x34B JUMPI PUSH2 0x34B PUSH2 0x430 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x3B9 DUP2 PUSH2 0x3BC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x429 DUP2 PUSH2 0x446 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 0xBF SWAP7 BLOCKHASH 0xBD PUSH22 0xC38465B99C8FED49E22EA1AA5B4181B2F4CD93D1D7CA 0xAC NUMBER DUP8 PUSH10 0x64736F6C634300080700 CALLER ",
							"sourceMap": "99:1629:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;498:8:0;;;99:1629:1;1587:13;1603:17;216:66;493:11;;356:164;1603:17;1587:33;-1:-1:-1;;;;;;1638:19:1;;1630:63;;;;-1:-1:-1;;;1630:63:1;;1537:2:2;1630:63:1;;;1519:21:2;1576:2;1556:18;;;1549:30;1615:33;1595:18;;;1588:61;1666:18;;1630:63:1;;;;;;;;;1703:16;1713:5;1703:9;:16::i;:::-;1577:149;99:1629;1009:106:0;;;;;;;;;;-1:-1:-1;1009:106:0;;;;;:::i;:::-;;:::i;:::-;;718:411:1;;;;;;;;;;-1:-1:-1;718:411:1;;;;;:::i;:::-;;:::i;614:196:0:-;;;;;;;;;;-1:-1:-1;614:196:0;;;;;:::i;:::-;;:::i;1135:399:1:-;1239:14;1236:1;1233;1220:34;1339:1;1336;1320:14;1317:1;1301:14;1294:5;1281:60;1375:16;1372:1;1369;1354:38;1412:6;1431:36;;;;1500:16;1497:1;1489:28;1431:36;1449:16;1446:1;1439:27;1009:106:0;303:6;;-1:-1:-1;;;;;303:6:0;289:10;:20;282:28;;;;:::i;:::-;1099:8:::1;-1:-1:-1::0;;;;;1086:22:0::1;;718:411:1::0;303:6:0;;-1:-1:-1;;;;;303:6:0;289:10;:20;282:28;;;;:::i;:::-;-1:-1:-1;;;;;788:21:1;::::1;780:67;;;::::0;-1:-1:-1;;;780:67:1;;1135:2:2;780:67:1::1;::::0;::::1;1117:21:2::0;1174:2;1154:18;;;1147:30;1213:34;1193:18;;;1186:62;-1:-1:-1;;;1264:18:2;;;1257:31;1305:19;;780:67:1::1;933:397:2::0;780:67:1::1;650:18:::0;;696:8;;857:46:::1;;;::::0;-1:-1:-1;;;857:46:1;;1897:2:2;857:46:1::1;::::0;::::1;1879:21:2::0;1936:2;1916:18;;;1909:30;-1:-1:-1;;;1955:18:2;;;1948:44;2009:18;;857:46:1::1;1695:338:2::0;857:46:1::1;216:66:::0;493:11;-1:-1:-1;;;;;921:28:1::1;:7;-1:-1:-1::0;;;;;921:28:1::1;;;913:82;;;::::0;-1:-1:-1;;;913:82:1;;2240:2:2;913:82:1::1;::::0;::::1;2222:21:2::0;2279:2;2259:18;;;2252:30;2318:34;2298:18;;;2291:62;-1:-1:-1;;;2369:18:2;;;2362:39;2418:19;;913:82:1::1;2038:405:2::0;913:82:1::1;216:66;1060:21:::0;;;1105:17:::1;::::0;-1:-1:-1;;;;;1105:17:1;::::1;::::0;::::1;::::0;1005:12:::1;::::0;1105:17:::1;770:359;718:411:::0;:::o;614:196:0:-;303:6;;-1:-1:-1;;;;;303:6:0;289:10;:20;282:28;;;;:::i;:::-;-1:-1:-1;;;;;700:22:0;::::1;692:73;;;::::0;-1:-1:-1;;;692:73:0;;728:2:2;692:73:0::1;::::0;::::1;710:21:2::0;767:2;747:18;;;740:30;806:34;786:18;;;779:62;-1:-1:-1;;;857:18:2;;;850:36;903:19;;692:73:0::1;526:402:2::0;692:73:0::1;775:28;794:8;775:18;:28::i;:::-;614:196:::0;:::o;816:187::-;889:16;908:6;;-1:-1:-1;;;;;924:17:0;;;-1:-1:-1;;;;;;924:17:0;;;;;;956:40;;908:6;;;;;;;956:40;;889:16;956:40;879:124;816:187;:::o;14:247:2:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;200:31;225:5;200:31;:::i;:::-;250:5;14:247;-1:-1:-1;;;14:247:2:o;2448:127::-;2509:10;2504:3;2500:20;2497:1;2490:31;2540:4;2537:1;2530:15;2564:4;2561:1;2554:15;2580:131;-1:-1:-1;;;;;2655:31:2;;2645:42;;2635:70;;2701:1;2698;2691:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "233800",
								"executionCost": "24531",
								"totalCost": "258331"
							},
							"external": {
								"": "infinite",
								"_upgradeTo(address)": "30536",
								"suicide0(address)": "30026",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_delegate(address)": "infinite",
								"_implementation()": "infinite",
								"isContract(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 99,
									"end": 1728,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 99,
									"end": 1728,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 99,
									"end": 1728,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 362,
									"end": 368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 381,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 362,
									"end": 381,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 371,
									"end": 381,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 324,
									"end": 343,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 324,
									"end": 343,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 324,
									"end": 343,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 362,
									"end": 381,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 362,
									"end": 381,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 362,
									"end": 381,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 362,
									"end": 381,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 324,
									"end": 343,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 324,
									"end": 343,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 324,
									"end": 343,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 324,
									"end": 343,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 99,
									"end": 1728,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 99,
									"end": 1728,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 99,
									"end": 1728,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 99,
									"end": 1728,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 99,
									"end": 1728,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 99,
									"end": 1728,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 99,
									"end": 1728,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a7bf9640bd75c38465b99c8fed49e22ea1aa5b4181b2f4cd93d1d7caac43876964736f6c63430008070033",
									".code": [
										{
											"begin": 99,
											"end": 1728,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "PUSH",
											"source": 1,
											"value": "14DA447F"
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "PUSH",
											"source": 1,
											"value": "34140748"
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 498,
											"end": 506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 498,
											"end": 506,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1587,
											"end": 1600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1603,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 216,
											"end": 282,
											"name": "PUSH",
											"source": 1,
											"value": "D5F7436ADC48AFAF7BD9D058121474D0B68958267EDD0B25260C99AD5FB8F7E0"
										},
										{
											"begin": 493,
											"end": 504,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 493,
											"end": 504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 356,
											"end": 520,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1620,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1603,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1638,
											"end": 1657,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1657,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1630,
											"end": 1693,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1693,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1693,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1630,
											"end": 1693,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1693,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1539,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1630,
											"end": 1693,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1630,
											"end": 1693,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1540,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1578,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1556,
											"end": 1574,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1556,
											"end": 1574,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1574,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1648,
											"name": "PUSH",
											"source": 2,
											"value": "696D706C656D656E746174696F6E20636F6E7472616374206E6F742073657400"
										},
										{
											"begin": 1595,
											"end": 1613,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1595,
											"end": 1613,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1613,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1649,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1684,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1666,
											"end": 1684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1693,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1630,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1693,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1693,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1693,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1693,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1693,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1693,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1693,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1630,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1713,
											"end": 1718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1703,
											"end": 1719,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1703,
											"end": 1719,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1703,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 99,
											"end": 1728,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 614,
											"end": 810,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 614,
											"end": 810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 614,
											"end": 810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 614,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 614,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 614,
											"end": 810,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 614,
											"end": 810,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 614,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 614,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 614,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1135,
											"end": 1534,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1135,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1253,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1334,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1318,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1315,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1299,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1341,
											"name": "DELEGATECALL",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1391,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1369,
											"end": 1370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1467,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1467,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1431,
											"end": 1467,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1516,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1489,
											"end": 1517,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1467,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1431,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1465,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1446,
											"end": 1447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1466,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1009,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 303,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 303,
											"end": 309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 289,
											"end": 299,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 289,
											"end": 309,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 282,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 282,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "SELFDESTRUCT",
											"source": 0
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 303,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 303,
											"end": 309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 289,
											"end": 299,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 289,
											"end": 309,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 282,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 282,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 788,
											"end": 809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 788,
											"end": 809,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 780,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 780,
											"end": 847,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 780,
											"end": 847,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 780,
											"end": 847,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 780,
											"end": 847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 780,
											"end": 847,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1137,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 780,
											"end": 847,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 780,
											"end": 847,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 780,
											"end": 847,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1138,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1174,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1154,
											"end": 1172,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1154,
											"end": 1172,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1172,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1147,
											"end": 1177,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1247,
											"name": "PUSH",
											"source": 2,
											"value": "43616E6E6F74207570677261646520746F20696E76616C696420616464726573"
										},
										{
											"begin": 1193,
											"end": 1211,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1193,
											"end": 1211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1211,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1248,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1288,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1324,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1305,
											"end": 1324,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 780,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 933,
											"end": 1330,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 780,
											"end": 847,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 780,
											"end": 847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 650,
											"end": 668,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 650,
											"end": 668,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 696,
											"end": 704,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 696,
											"end": 704,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 857,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 857,
											"end": 903,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 857,
											"end": 903,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 857,
											"end": 903,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 857,
											"end": 903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 857,
											"end": 903,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1899,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 857,
											"end": 903,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 857,
											"end": 903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 857,
											"end": 903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1900,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1938,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 1916,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1916,
											"end": 1934,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 1934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1939,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD08184818DBDB9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1955,
											"end": 1973,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1955,
											"end": 1973,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1955,
											"end": 1973,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1948,
											"end": 1992,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2027,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2009,
											"end": 2027,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 857,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1695,
											"end": 2033,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 857,
											"end": 903,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 857,
											"end": 903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 216,
											"end": 282,
											"name": "PUSH",
											"source": 1,
											"value": "D5F7436ADC48AFAF7BD9D058121474D0B68958267EDD0B25260C99AD5FB8F7E0"
										},
										{
											"begin": 493,
											"end": 504,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 921,
											"end": 949,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 921,
											"end": 928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 921,
											"end": 949,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 921,
											"end": 949,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 921,
											"end": 949,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 913,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 913,
											"end": 995,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 913,
											"end": 995,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 913,
											"end": 995,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 913,
											"end": 995,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 913,
											"end": 995,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2242,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 913,
											"end": 995,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 913,
											"end": 995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 913,
											"end": 995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2243,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2281,
											"name": "PUSH",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2259,
											"end": 2277,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2259,
											"end": 2277,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2277,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2252,
											"end": 2282,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2352,
											"name": "PUSH",
											"source": 2,
											"value": "43616E6E6F74207570677261646520746F207468652073616D6520696D706C65"
										},
										{
											"begin": 2298,
											"end": 2316,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2298,
											"end": 2316,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2316,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2291,
											"end": 2353,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "36B2B73A30BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2369,
											"end": 2387,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2369,
											"end": 2387,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2387,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2401,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2418,
											"end": 2437,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2418,
											"end": 2437,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 913,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2038,
											"end": 2443,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 913,
											"end": 995,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 913,
											"end": 995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 216,
											"end": 282,
											"name": "PUSH",
											"source": 1,
											"value": "D5F7436ADC48AFAF7BD9D058121474D0B68958267EDD0B25260C99AD5FB8F7E0"
										},
										{
											"begin": 1060,
											"end": 1081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1081,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1105,
											"end": 1122,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1105,
											"end": 1122,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1122,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 1105,
											"end": 1122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1122,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 770,
											"end": 1129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 718,
											"end": 1129,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 614,
											"end": 810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 303,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 303,
											"end": 309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 289,
											"end": 299,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 289,
											"end": 309,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 282,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 282,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 282,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 700,
											"end": 722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 700,
											"end": 722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 692,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 692,
											"end": 765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 692,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 692,
											"end": 765,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 692,
											"end": 765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 692,
											"end": 765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 728,
											"end": 730,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 692,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 692,
											"end": 765,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 692,
											"end": 765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 710,
											"end": 731,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 767,
											"end": 769,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 747,
											"end": 765,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 747,
											"end": 765,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 747,
											"end": 765,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 740,
											"end": 770,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 806,
											"end": 840,
											"name": "PUSH",
											"source": 2,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 786,
											"end": 804,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 786,
											"end": 804,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 786,
											"end": 804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 779,
											"end": 841,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 857,
											"end": 875,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 857,
											"end": 875,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 857,
											"end": 875,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 850,
											"end": 886,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 903,
											"end": 922,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 903,
											"end": 922,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 692,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 526,
											"end": 928,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 692,
											"end": 765,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 692,
											"end": 765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 775,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 794,
											"end": 802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 775,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 775,
											"end": 803,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 775,
											"end": 803,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 775,
											"end": 803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 614,
											"end": 810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 614,
											"end": 810,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 816,
											"end": 1003,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 816,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 889,
											"end": 905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 908,
											"end": 914,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 924,
											"end": 941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 924,
											"end": 941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 924,
											"end": 941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 924,
											"end": 941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 924,
											"end": 941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 924,
											"end": 941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 924,
											"end": 941,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 924,
											"end": 941,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 924,
											"end": 941,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 956,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 956,
											"end": 996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 908,
											"end": 914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 908,
											"end": 914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 908,
											"end": 914,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 908,
											"end": 914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 908,
											"end": 914,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 908,
											"end": 914,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 908,
											"end": 914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 956,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 956,
											"end": 996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 889,
											"end": 905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 956,
											"end": 996,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 879,
											"end": 1003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 816,
											"end": 1003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 816,
											"end": 1003,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 261,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 14,
											"end": 261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 181,
											"end": 190,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 200,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 225,
											"end": 230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 200,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 250,
											"end": 255,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14,
											"end": 261,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 261,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2448,
											"end": 2575,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2448,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2519,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 2504,
											"end": 2507,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2500,
											"end": 2520,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2498,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2521,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2540,
											"end": 2544,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2537,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2530,
											"end": 2545,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2564,
											"end": 2568,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2561,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2554,
											"end": 2569,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2580,
											"end": 2711,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2580,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2687,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2687,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2635,
											"end": 2705,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2702,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2691,
											"end": 2703,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_upgradeTo(address)": "34140748",
							"suicide0(address)": "14da447f",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImpl\",\"type\":\"address\"}],\"name\":\"_upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"suicide0\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/base/Base.sol\":{\"keccak256\":\"0xb8c8839491cb4120d5d37e7997703d885350f1b953dab0a7962ea41336c63b6e\",\"license\":\"SimPL-2.0\",\"urls\":[\"bzz-raw://9c6ef29412526a3c7c460da13095463547376384e47e7ed9d15778e27a5bd319\",\"dweb:/ipfs/QmTnJNKmo1LWfbkectMpV4XPXwLBzUajzrVyvnmqXbNGV5\"]},\"contracts/base/Proxy.sol\":{\"keccak256\":\"0x92023d30cd6c05b91d8881da06c9d66fd520f876ef5269688f30f8ef9b8a793a\",\"license\":\"SimPL-2.0\",\"urls\":[\"bzz-raw://3f59e94e34ef3406a7a6499c766a5b7dc924ad57750826c188d849554db77906\",\"dweb:/ipfs/QmQ7vW6ADrR9vpvK5qn74GnBeQVEX2s9SAGrp4GnrN5V8e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/base/Proxy.sol:Proxy",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "contracts/base/Proxy.sol:Proxy",
								"label": "_coinbase",
								"offset": 0,
								"slot": "1",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/base/Base.sol": {
				"ast": {
					"absolutePath": "contracts/base/Base.sol",
					"exportedSymbols": {
						"Base": [
							111
						]
					},
					"id": 112,
					"license": "SimPL-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".",
								"x",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 111,
							"linearizedBaseContracts": [
								111
							],
							"name": "Base",
							"nameLocation": "80:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "109:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 111,
									"src": "91:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "91:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "_coinbase",
									"nameLocation": "147:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 111,
									"src": "121:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "121:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 11,
									"name": "OwnershipTransferred",
									"nameLocation": "169:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "206:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "190:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "190:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "237:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "221:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "189:57:0"
									},
									"src": "163:84:0"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "272:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 14,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "289:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "289:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 16,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "303:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "289:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 13,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "282:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "282:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "282:28:0"
											},
											{
												"id": 20,
												"nodeType": "PlaceholderStatement",
												"src": "320:1:0"
											}
										]
									},
									"id": 22,
									"name": "isOwner",
									"nameLocation": "262:7:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "269:2:0"
									},
									"src": "253:75:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "352:36:0",
										"statements": [
											{
												"expression": {
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 25,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "362:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 26,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "371:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "371:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "362:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "362:19:0"
											}
										]
									},
									"id": 31,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "345:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "352:0:0"
									},
									"scope": 111,
									"src": "334:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "430:25:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 34,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "440:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "440:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "440:8:0"
											}
										]
									},
									"id": 38,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "402:2:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "430:0:0"
									},
									"scope": 111,
									"src": "394:61:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "488:25:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 41,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "498:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "498:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "498:8:0"
											}
										]
									},
									"id": 45,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "468:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "488:0:0"
									},
									"scope": 111,
									"src": "461:52:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "577:31:0",
										"statements": [
											{
												"expression": {
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 52,
														"name": "_coinbase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "587:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 53,
														"name": "cb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "599:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "587:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "587:14:0"
											}
										]
									},
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "isOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 22,
												"src": "569:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "569:7:0"
										}
									],
									"name": "setCoinBase",
									"nameLocation": "528:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "cb",
												"nameLocation": "556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "540:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "540:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:20:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "577:0:0"
									},
									"scope": 111,
									"src": "519:89:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "682:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 65,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "700:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 68,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "720:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 67,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "712:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 66,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "712:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "712:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "700:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "724:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 64,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "692:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "692:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "692:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 75,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "794:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 74,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "775:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "775:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "775:28:0"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 62,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 61,
												"name": "isOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 22,
												"src": "674:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "674:7:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "623:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "649:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "641:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "640:18:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "682:0:0"
									},
									"scope": 111,
									"src": "614:196:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "879:124:0",
										"statements": [
											{
												"assignments": [
													85
												],
												"declarations": [
													{
														"constant": false,
														"id": 85,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "897:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 97,
														"src": "889:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 84,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "889:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 87,
												"initialValue": {
													"id": 86,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "908:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "889:25:0"
											},
											{
												"expression": {
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 88,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "924:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 89,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "933:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "924:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "924:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 93,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "977:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 94,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "987:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 92,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "956:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "956:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "EmitStatement",
												"src": "951:45:0"
											}
										]
									},
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "825:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "852:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "844:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:18:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "879:0:0"
									},
									"scope": 111,
									"src": "816:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "1076:39:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 106,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "1099:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 105,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "1086:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1086:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "1086:22:0"
											}
										]
									},
									"functionSelector": "14da447f",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 103,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 102,
												"name": "isOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 22,
												"src": "1068:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1068:7:0"
										}
									],
									"name": "suicide0",
									"nameLocation": "1018:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1043:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1027:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1027:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:26:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1076:0:0"
									},
									"scope": 111,
									"src": "1009:106:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 112,
							"src": "71:1046:0",
							"usedErrors": []
						}
					],
					"src": "38:1080:0"
				},
				"id": 0
			},
			"contracts/base/Proxy.sol": {
				"ast": {
					"absolutePath": "contracts/base/Proxy.sol",
					"exportedSymbols": {
						"Base": [
							111
						],
						"Proxy": [
							236
						]
					},
					"id": 237,
					"license": "SimPL-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 113,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".",
								"x",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:31:1"
						},
						{
							"absolutePath": "contracts/base/Base.sol",
							"file": "../base/Base.sol",
							"id": 114,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 237,
							"sourceUnit": 112,
							"src": "71:26:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 115,
										"name": "Base",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 111,
										"src": "117:4:1"
									},
									"id": 116,
									"nodeType": "InheritanceSpecifier",
									"src": "117:4:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 236,
							"linearizedBaseContracts": [
								236,
								111
							],
							"name": "Proxy",
							"nameLocation": "108:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 120,
									"name": "Upgraded",
									"nameLocation": "134:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "159:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "143:30:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "142:32:1"
									},
									"src": "128:47:1"
								},
								{
									"constant": true,
									"id": 123,
									"mutability": "constant",
									"name": "K_SLOT",
									"nameLocation": "207:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 236,
									"src": "181:101:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 121,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "181:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307864356637343336616463343861666166376264396430353831323134373464306236383935383236376564643062323532363063393961643566623866376530",
										"id": 122,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "216:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_96779513271194188903468422410759452136313522363413209677322474200740434343904_by_1",
											"typeString": "int_const 9677...(69 digits omitted)...3904"
										},
										"value": "0xd5f7436adc48afaf7bd9d058121474d0b68958267edd0b25260c99ad5fb8f7e0"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "314:36:1",
										"statements": [
											{
												"expression": {
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 128,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "324:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 129,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "333:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "333:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "324:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "324:19:1"
											}
										]
									},
									"id": 134,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [],
											"id": 126,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 125,
												"name": "Base",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 111,
												"src": "303:4:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "303:6:1"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "300:2:1"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "314:0:1"
									},
									"scope": 236,
									"src": "289:61:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "420:100:1",
										"statements": [
											{
												"assignments": [
													140
												],
												"declarations": [
													{
														"constant": false,
														"id": 140,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "438:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 144,
														"src": "430:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 139,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "430:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 142,
												"initialValue": {
													"id": 141,
													"name": "K_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 123,
													"src": "445:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "430:21:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "471:43:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "499:4:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "493:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:11:1"
															},
															"variableNames": [
																{
																	"name": "impl",
																	"nodeType": "YulIdentifier",
																	"src": "485:4:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 137,
														"isOffset": false,
														"isSlot": false,
														"src": "485:4:1",
														"valueSize": 1
													},
													{
														"declaration": 140,
														"isOffset": false,
														"isSlot": false,
														"src": "499:4:1",
														"valueSize": 1
													}
												],
												"id": 143,
												"nodeType": "InlineAssembly",
												"src": "462:52:1"
											}
										]
									},
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "365:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "380:2:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "impl",
												"nameLocation": "414:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "406:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:14:1"
									},
									"scope": 236,
									"src": "356:164:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "588:124:1",
										"statements": [
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "605:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 161,
														"src": "598:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 152,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "598:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 154,
												"nodeType": "VariableDeclarationStatement",
												"src": "598:11:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "628:50:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "642:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_addr",
																		"nodeType": "YulIdentifier",
																		"src": "662:5:1"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "650:11:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "650:18:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "642:4:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 147,
														"isOffset": false,
														"isSlot": false,
														"src": "662:5:1",
														"valueSize": 1
													},
													{
														"declaration": 153,
														"isOffset": false,
														"isSlot": false,
														"src": "642:4:1",
														"valueSize": 1
													}
												],
												"id": 155,
												"nodeType": "InlineAssembly",
												"src": "619:59:1"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 156,
																"name": "size",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 153,
																"src": "696:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "703:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "696:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 159,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "695:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 151,
												"id": 160,
												"nodeType": "Return",
												"src": "688:17:1"
											}
										]
									},
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "535:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "554:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "546:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:15:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "583:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "583:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "582:6:1"
									},
									"scope": 236,
									"src": "526:186:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "770:359:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 170,
																"name": "newImpl",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "788:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "807:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "799:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 171,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "799:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "799:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "788:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207570677261646520746f20696e76616c69642061646472657373",
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "811:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_40fd158ccb4d730ef918126ee4e5fec6a1060af40d7fd53a6ad16f84e0b2db51",
																"typeString": "literal_string \"Cannot upgrade to invalid address\""
															},
															"value": "Cannot upgrade to invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_40fd158ccb4d730ef918126ee4e5fec6a1060af40d7fd53a6ad16f84e0b2db51",
																"typeString": "literal_string \"Cannot upgrade to invalid address\""
															}
														],
														"id": 169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "780:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "780:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "780:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 181,
																	"name": "newImpl",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "876:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 180,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 162,
																"src": "865:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "865:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206120636f6e7472616374",
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "886:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a7125e02b15b9624893e22fc887adf7b442cd1c1f4fc92da8a28be0486c1faa3",
																"typeString": "literal_string \"Not a contract\""
															},
															"value": "Not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a7125e02b15b9624893e22fc887adf7b442cd1c1f4fc92da8a28be0486c1faa3",
																"typeString": "literal_string \"Not a contract\""
															}
														],
														"id": 179,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "857:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "857:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "857:46:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 187,
																"name": "newImpl",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "921:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 188,
																	"name": "_implementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "932:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "932:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "921:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207570677261646520746f207468652073616d6520696d706c656d656e746174696f6e",
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "951:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e8bdeb1d90ce7cb8f42305bc43011f7ba4278ddc3807debdfae45edccb4cb9d6",
																"typeString": "literal_string \"Cannot upgrade to the same implementation\""
															},
															"value": "Cannot upgrade to the same implementation"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e8bdeb1d90ce7cb8f42305bc43011f7ba4278ddc3807debdfae45edccb4cb9d6",
																"typeString": "literal_string \"Cannot upgrade to the same implementation\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "913:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "913:82:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "913:82:1"
											},
											{
												"assignments": [
													195
												],
												"declarations": [
													{
														"constant": false,
														"id": 195,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "1013:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 203,
														"src": "1005:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 194,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1005:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 197,
												"initialValue": {
													"id": 196,
													"name": "K_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 123,
													"src": "1020:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1005:21:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1046:45:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1067:4:1"
																	},
																	{
																		"name": "newImpl",
																		"nodeType": "YulIdentifier",
																		"src": "1073:7:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1060:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1060:21:1"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 164,
														"isOffset": false,
														"isSlot": false,
														"src": "1073:7:1",
														"valueSize": 1
													},
													{
														"declaration": 195,
														"isOffset": false,
														"isSlot": false,
														"src": "1067:4:1",
														"valueSize": 1
													}
												],
												"id": 198,
												"nodeType": "InlineAssembly",
												"src": "1037:54:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 200,
															"name": "newImpl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "1114:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 199,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1105:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1105:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "EmitStatement",
												"src": "1100:22:1"
											}
										]
									},
									"functionSelector": "34140748",
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 167,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 166,
												"name": "isOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 22,
												"src": "762:7:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "762:7:1"
										}
									],
									"name": "_upgradeTo",
									"nameLocation": "727:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "newImpl",
												"nameLocation": "746:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "738:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "770:0:1"
									},
									"scope": 236,
									"src": "718:411:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "1187:347:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1206:322:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1233:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1236:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1239:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1239:14:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1220:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1220:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1220:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1267:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "1294:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1294:5:1"
																	},
																	{
																		"name": "implementation",
																		"nodeType": "YulIdentifier",
																		"src": "1301:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1320:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1320:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1336:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1339:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "1281:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1281:60:1"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "1271:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1369:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1372:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1375:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1375:16:1"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1354:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1354:38:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1438:29:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1446:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1449:14:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1449:16:1"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1439:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1439:27:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1439:27:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1431:36:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1436:1:1",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1488:30:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1497:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1500:14:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1500:16:1"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "1489:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1489:28:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1489:28:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1480:38:1",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "1412:6:1"
															},
															"nodeType": "YulSwitch",
															"src": "1405:113:1"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 206,
														"isOffset": false,
														"isSlot": false,
														"src": "1301:14:1",
														"valueSize": 1
													}
												],
												"id": 209,
												"nodeType": "InlineAssembly",
												"src": "1197:331:1"
											}
										]
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "1144:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1162:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1154:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1153:24:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1187:0:1"
									},
									"scope": 236,
									"src": "1135:399:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										38
									],
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "1577:149:1",
										"statements": [
											{
												"assignments": [
													216
												],
												"declarations": [
													{
														"constant": false,
														"id": 216,
														"mutability": "mutable",
														"name": "_impl",
														"nameLocation": "1595:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 234,
														"src": "1587:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 215,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1587:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 219,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 217,
														"name": "_implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "1603:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1603:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1587:33:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 221,
																"name": "_impl",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "1638:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1655:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1647:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 222,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1647:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1647:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1638:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696d706c656d656e746174696f6e20636f6e7472616374206e6f7420736574",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1659:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5a060aff13d6864b47c6236c6882666ad9e2a52ff2759d6ffe86b83c08369e03",
																"typeString": "literal_string \"implementation contract not set\""
															},
															"value": "implementation contract not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5a060aff13d6864b47c6236c6882666ad9e2a52ff2759d6ffe86b83c08369e03",
																"typeString": "literal_string \"implementation contract not set\""
															}
														],
														"id": 220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1630:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1630:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "1630:63:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 231,
															"name": "_impl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "1713:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 230,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "1703:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1703:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "1703:16:1"
											}
										]
									},
									"id": 235,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 213,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1560:8:1"
									},
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1548:2:1"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1577:0:1"
									},
									"scope": 236,
									"src": "1540:186:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 237,
							"src": "99:1629:1",
							"usedErrors": []
						}
					],
					"src": "38:1691:1"
				},
				"id": 1
			}
		}
	}
}