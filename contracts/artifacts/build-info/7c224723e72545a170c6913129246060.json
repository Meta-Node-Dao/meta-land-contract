{
	"id": "7c224723e72545a170c6913129246060",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/powerful-erc20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account)\n        public\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount)\n        public\n        virtual\n        override\n        returns (bool)\n    {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender)\n        public\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount)\n        public\n        virtual\n        override\n        returns (bool)\n    {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(\n            currentAllowance >= amount,\n            \"ERC20: transfer amount exceeds allowance\"\n        );\n        unchecked {\n            _approve(sender, _msgSender(), currentAllowance - amount);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue)\n        public\n        virtual\n        returns (bool)\n    {\n        _approve(\n            _msgSender(),\n            spender,\n            _allowances[_msgSender()][spender] + addedValue\n        );\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue)\n        public\n        virtual\n        returns (bool)\n    {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(\n            currentAllowance >= subtractedValue,\n            \"ERC20: decreased allowance below zero\"\n        );\n        unchecked {\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(\n            senderBalance >= amount,\n            \"ERC20: transfer amount exceeds balance\"\n        );\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        uint256 currentAllowance = allowance(account, _msgSender());\n        require(\n            currentAllowance >= amount,\n            \"ERC20: burn amount exceeds allowance\"\n        );\n        unchecked {\n            _approve(account, _msgSender(), currentAllowance - amount);\n        }\n        _burn(account, amount);\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Extension of {ERC20} that adds a cap to the supply of tokens.\n */\nabstract contract ERC20Capped is ERC20 {\n    uint256 private immutable _cap;\n\n    /**\n     * @dev Sets the value of the `cap`. This value is immutable, it can only be\n     * set once during construction.\n     */\n    constructor(uint256 cap_) {\n        require(cap_ > 0, \"ERC20Capped: cap is 0\");\n        _cap = cap_;\n    }\n\n    /**\n     * @dev Returns the cap on the token's total supply.\n     */\n    function cap() public view virtual returns (uint256) {\n        return _cap;\n    }\n\n    /**\n     * @dev See {ERC20-_mint}.\n     */\n    function _mint(address account, uint256 amount) internal virtual override {\n        require(\n            ERC20.totalSupply() + amount <= cap(),\n            \"ERC20Capped: cap exceeded\"\n        );\n        super._mint(account, amount);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Address.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(\n            address(this).balance >= amount,\n            \"Address: insufficient balance\"\n        );\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(\n            success,\n            \"Address: unable to send value, recipient may have reverted\"\n        );\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data)\n        internal\n        returns (bytes memory)\n    {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return\n            functionCallWithValue(\n                target,\n                data,\n                value,\n                \"Address: low-level call with value failed\"\n            );\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(\n            address(this).balance >= value,\n            \"Address: insufficient balance for call\"\n        );\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(\n            data\n        );\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data)\n        internal\n        view\n        returns (bytes memory)\n    {\n        return\n            functionStaticCall(\n                target,\n                data,\n                \"Address: low-level static call failed\"\n            );\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data)\n        internal\n        returns (bytes memory)\n    {\n        return\n            functionDelegateCall(\n                target,\n                data,\n                \"Address: low-level delegate call failed\"\n            );\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override\n        returns (bool)\n    {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: erc-payable-token/contracts/token/ERC1363/IERC1363.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @title IERC1363 Interface\n * @dev Interface for a Payable Token contract as defined in\n *  https://eips.ethereum.org/EIPS/eip-1363\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /**\n     * @notice Transfer tokens from `msg.sender` to another address and then call `onTransferReceived` on receiver\n     * @param recipient address The address which you want to transfer to\n     * @param amount uint256 The amount of tokens to be transferred\n     * @return true unless throwing\n     */\n    function transferAndCall(address recipient, uint256 amount)\n        external\n        returns (bool);\n\n    /**\n     * @notice Transfer tokens from `msg.sender` to another address and then call `onTransferReceived` on receiver\n     * @param recipient address The address which you want to transfer to\n     * @param amount uint256 The amount of tokens to be transferred\n     * @param data bytes Additional data with no specified format, sent in call to `recipient`\n     * @return true unless throwing\n     */\n    function transferAndCall(\n        address recipient,\n        uint256 amount,\n        bytes calldata data\n    ) external returns (bool);\n\n    /**\n     * @notice Transfer tokens from one address to another and then call `onTransferReceived` on receiver\n     * @param sender address The address which you want to send tokens from\n     * @param recipient address The address which you want to transfer to\n     * @param amount uint256 The amount of tokens to be transferred\n     * @return true unless throwing\n     */\n    function transferFromAndCall(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @notice Transfer tokens from one address to another and then call `onTransferReceived` on receiver\n     * @param sender address The address which you want to send tokens from\n     * @param recipient address The address which you want to transfer to\n     * @param amount uint256 The amount of tokens to be transferred\n     * @param data bytes Additional data with no specified format, sent in call to `recipient`\n     * @return true unless throwing\n     */\n    function transferFromAndCall(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes calldata data\n    ) external returns (bool);\n\n    /**\n     * @notice Approve the passed address to spend the specified amount of tokens on behalf of msg.sender\n     * and then call `onApprovalReceived` on spender.\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * @param spender address The address which will spend the funds\n     * @param amount uint256 The amount of tokens to be spent\n     */\n    function approveAndCall(address spender, uint256 amount)\n        external\n        returns (bool);\n\n    /**\n     * @notice Approve the passed address to spend the specified amount of tokens on behalf of msg.sender\n     * and then call `onApprovalReceived` on spender.\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * @param spender address The address which will spend the funds\n     * @param amount uint256 The amount of tokens to be spent\n     * @param data bytes Additional data with no specified format, sent in call to `spender`\n     */\n    function approveAndCall(\n        address spender,\n        uint256 amount,\n        bytes calldata data\n    ) external returns (bool);\n}\n\n// File: erc-payable-token/contracts/token/ERC1363/IERC1363Receiver.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @title IERC1363Receiver Interface\n * @dev Interface for any contract that wants to support transferAndCall or transferFromAndCall\n *  from ERC1363 token contracts as defined in\n *  https://eips.ethereum.org/EIPS/eip-1363\n */\ninterface IERC1363Receiver {\n    /**\n     * @notice Handle the receipt of ERC1363 tokens\n     * @dev Any ERC1363 smart contract calls this function on the recipient\n     * after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the\n     * transfer. Return of other than the magic value MUST result in the\n     * transaction being reverted.\n     * Note: the token contract address is always the message sender.\n     * @param operator address The address which called `transferAndCall` or `transferFromAndCall` function\n     * @param sender address The address which are token transferred from\n     * @param amount uint256 The amount of tokens transferred\n     * @param data bytes Additional data with no specified format\n     * @return `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` unless throwing\n     */\n    function onTransferReceived(\n        address operator,\n        address sender,\n        uint256 amount,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: erc-payable-token/contracts/token/ERC1363/IERC1363Spender.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @title IERC1363Spender Interface\n * @dev Interface for any contract that wants to support approveAndCall\n *  from ERC1363 token contracts as defined in\n *  https://eips.ethereum.org/EIPS/eip-1363\n */\ninterface IERC1363Spender {\n    /**\n     * @notice Handle the approval of ERC1363 tokens\n     * @dev Any ERC1363 smart contract calls this function on the recipient\n     * after an `approve`. This function MAY throw to revert and reject the\n     * approval. Return of other than the magic value MUST result in the\n     * transaction being reverted.\n     * Note: the token contract address is always the message sender.\n     * @param sender address The address which called `approveAndCall` function\n     * @param amount uint256 The amount of tokens to be spent\n     * @param data bytes Additional data with no specified format\n     * @return `bytes4(keccak256(\"onApprovalReceived(address,uint256,bytes)\"))` unless throwing\n     */\n    function onApprovalReceived(\n        address sender,\n        uint256 amount,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: erc-payable-token/contracts/token/ERC1363/ERC1363.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC1363\n * @dev Implementation of an ERC1363 interface\n */\nabstract contract ERC1363 is ERC20, IERC1363, ERC165 {\n    using Address for address;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(ERC165, IERC165)\n        returns (bool)\n    {\n        return\n            interfaceId == type(IERC1363).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Transfer tokens to a specified address and then execute a callback on recipient.\n     * @param recipient The address to transfer to.\n     * @param amount The amount to be transferred.\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function transferAndCall(address recipient, uint256 amount)\n        public\n        virtual\n        override\n        returns (bool)\n    {\n        return transferAndCall(recipient, amount, \"\");\n    }\n\n    /**\n     * @dev Transfer tokens to a specified address and then execute a callback on recipient.\n     * @param recipient The address to transfer to\n     * @param amount The amount to be transferred\n     * @param data Additional data with no specified format\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function transferAndCall(\n        address recipient,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override returns (bool) {\n        transfer(recipient, amount);\n        require(\n            _checkAndCallTransfer(_msgSender(), recipient, amount, data),\n            \"ERC1363: _checkAndCallTransfer reverts\"\n        );\n        return true;\n    }\n\n    /**\n     * @dev Transfer tokens from one address to another and then execute a callback on recipient.\n     * @param sender The address which you want to send tokens from\n     * @param recipient The address which you want to transfer to\n     * @param amount The amount of tokens to be transferred\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function transferFromAndCall(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        return transferFromAndCall(sender, recipient, amount, \"\");\n    }\n\n    /**\n     * @dev Transfer tokens from one address to another and then execute a callback on recipient.\n     * @param sender The address which you want to send tokens from\n     * @param recipient The address which you want to transfer to\n     * @param amount The amount of tokens to be transferred\n     * @param data Additional data with no specified format\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function transferFromAndCall(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override returns (bool) {\n        transferFrom(sender, recipient, amount);\n        require(\n            _checkAndCallTransfer(sender, recipient, amount, data),\n            \"ERC1363: _checkAndCallTransfer reverts\"\n        );\n        return true;\n    }\n\n    /**\n     * @dev Approve spender to transfer tokens and then execute a callback on recipient.\n     * @param spender The address allowed to transfer to\n     * @param amount The amount allowed to be transferred\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function approveAndCall(address spender, uint256 amount)\n        public\n        virtual\n        override\n        returns (bool)\n    {\n        return approveAndCall(spender, amount, \"\");\n    }\n\n    /**\n     * @dev Approve spender to transfer tokens and then execute a callback on recipient.\n     * @param spender The address allowed to transfer to.\n     * @param amount The amount allowed to be transferred.\n     * @param data Additional data with no specified format.\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function approveAndCall(\n        address spender,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override returns (bool) {\n        approve(spender, amount);\n        require(\n            _checkAndCallApprove(spender, amount, data),\n            \"ERC1363: _checkAndCallApprove reverts\"\n        );\n        return true;\n    }\n\n    /**\n     * @dev Internal function to invoke `onTransferReceived` on a target address\n     *  The call is not executed if the target address is not a contract\n     * @param sender address Representing the previous owner of the given token value\n     * @param recipient address Target address that will receive the tokens\n     * @param amount uint256 The amount mount of tokens to be transferred\n     * @param data bytes Optional data to send along with the call\n     * @return whether the call correctly returned the expected magic value\n     */\n    function _checkAndCallTransfer(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual returns (bool) {\n        if (!recipient.isContract()) {\n            return false;\n        }\n        bytes4 retval = IERC1363Receiver(recipient).onTransferReceived(\n            _msgSender(),\n            sender,\n            amount,\n            data\n        );\n        return (retval ==\n            IERC1363Receiver(recipient).onTransferReceived.selector);\n    }\n\n    /**\n     * @dev Internal function to invoke `onApprovalReceived` on a target address\n     *  The call is not executed if the target address is not a contract\n     * @param spender address The address which will spend the funds\n     * @param amount uint256 The amount of tokens to be spent\n     * @param data bytes Optional data to send along with the call\n     * @return whether the call correctly returned the expected magic value\n     */\n    function _checkAndCallApprove(\n        address spender,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual returns (bool) {\n        if (!spender.isContract()) {\n            return false;\n        }\n        bytes4 retval = IERC1363Spender(spender).onApprovalReceived(\n            _msgSender(),\n            amount,\n            data\n        );\n        return (retval == IERC1363Spender(spender).onApprovalReceived.selector);\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _setOwner(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _setOwner(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(\n            newOwner != address(0),\n            \"Ownable: new owner is the zero address\"\n        );\n        _setOwner(newOwner);\n    }\n\n    function _setOwner(address newOwner) private {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: eth-token-recover/contracts/TokenRecover.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @title TokenRecover\n * @dev Allows owner to recover any ERC20 sent into the contract\n */\ncontract TokenRecover is Ownable {\n    /**\n     * @dev Remember that only owner can call so be careful when use on contracts generated from other contracts.\n     * @param tokenAddress The token contract address\n     * @param tokenAmount Number of tokens to be sent\n     */\n    function recoverERC20(address tokenAddress, uint256 tokenAmount)\n        public\n        virtual\n        onlyOwner\n    {\n        IERC20(tokenAddress).transfer(owner(), tokenAmount);\n    }\n}\n\n// File: contracts/token/ERC20/behaviours/ERC20Decimals.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC20Decimals\n * @dev Implementation of the ERC20Decimals. Extension of {ERC20} that adds decimals storage slot.\n */\nabstract contract ERC20Decimals is ERC20 {\n    uint8 private immutable _decimals;\n\n    /**\n     * @dev Sets the value of the `decimals`. This value is immutable, it can only be\n     * set once during construction.\n     */\n    constructor(uint8 decimals_) {\n        _decimals = decimals_;\n    }\n\n    function decimals() public view virtual override returns (uint8) {\n        return _decimals;\n    }\n}\n\n// File: contracts/token/ERC20/behaviours/ERC20Mintable.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC20Mintable\n * @dev Implementation of the ERC20Mintable. Extension of {ERC20} that adds a minting behaviour.\n */\nabstract contract ERC20Mintable is ERC20 {\n    // indicates if minting is finished\n    bool private _mintingFinished = false;\n\n    /**\n     * @dev Emitted during finish minting\n     */\n    event MintFinished();\n\n    /**\n     * @dev Tokens can be minted only before minting finished.\n     */\n    modifier canMint() {\n        require(!_mintingFinished, \"ERC20Mintable: minting is finished\");\n        _;\n    }\n\n    /**\n     * @return if minting is finished or not.\n     */\n    function mintingFinished() external view returns (bool) {\n        return _mintingFinished;\n    }\n\n    /**\n     * @dev Function to mint tokens.\n     *\n     * WARNING: it allows everyone to mint new tokens. Access controls MUST be defined in derived contracts.\n     *\n     * @param account The address that will receive the minted tokens\n     * @param amount The amount of tokens to mint\n     */\n    function mint(address account, uint256 amount) external canMint {\n        _mint(account, amount);\n    }\n\n    /**\n     * @dev Function to stop minting new tokens.\n     *\n     * WARNING: it allows everyone to finish minting. Access controls MUST be defined in derived contracts.\n     */\n    function finishMinting() external canMint {\n        _finishMinting();\n    }\n\n    /**\n     * @dev Function to stop minting new tokens.\n     */\n    function _finishMinting() internal virtual {\n        _mintingFinished = true;\n\n        emit MintFinished();\n    }\n}\n\n// File: @openzeppelin/contracts/access/IAccessControl.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(\n        bytes32 indexed role,\n        bytes32 indexed previousAdminRole,\n        bytes32 indexed newAdminRole\n    );\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(\n        bytes32 indexed role,\n        address indexed account,\n        address indexed sender\n    );\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(\n        bytes32 indexed role,\n        address indexed account,\n        address indexed sender\n    );\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account)\n        external\n        view\n        returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n\n// File: @openzeppelin/contracts/utils/Strings.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length)\n        internal\n        pure\n        returns (string memory)\n    {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n\n// File: @openzeppelin/contracts/access/AccessControl.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role, _msgSender());\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override\n        returns (bool)\n    {\n        return\n            interfaceId == type(IAccessControl).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account)\n        public\n        view\n        override\n        returns (bool)\n    {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(uint160(account), 20),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account)\n        public\n        virtual\n        override\n        onlyRole(getRoleAdmin(role))\n    {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account)\n        public\n        virtual\n        override\n        onlyRole(getRoleAdmin(role))\n    {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account)\n        public\n        virtual\n        override\n    {\n        require(\n            account == _msgSender(),\n            \"AccessControl: can only renounce roles for self\"\n        );\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    function _grantRole(bytes32 role, address account) private {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    function _revokeRole(bytes32 role, address account) private {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n\n// File: contracts/access/Roles.sol\n\npragma solidity ^0.8.0;\n\ncontract Roles is AccessControl {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER\");\n\n    constructor() {\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n        _setupRole(MINTER_ROLE, _msgSender());\n    }\n\n    modifier onlyMinter() {\n        require(\n            hasRole(MINTER_ROLE, _msgSender()),\n            \"Roles: caller does not have the MINTER role\"\n        );\n        _;\n    }\n}\n\n// File: contracts/token/ERC20/PowerfulERC20.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @title PowerfulERC20\n * @dev Implementation of the PowerfulERC20\n */\ncontract PowerfulERC20 is\n    ERC20Decimals,\n    ERC20Capped,\n    ERC20Mintable,\n    ERC20Burnable,\n    ERC1363,\n    TokenRecover,\n    Roles\n{\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        uint8 decimals_,\n        uint256 cap_,\n        uint256 initialBalance_\n    ) payable ERC20(name_, symbol_) ERC20Decimals(decimals_) ERC20Capped(cap_) {\n        // Immutable variables cannot be read during contract creation time\n        // https://github.com/ethereum/solidity/issues/10463\n        require(initialBalance_ <= cap_, \"ERC20Capped: cap exceeded\");\n        ERC20._mint(_msgSender(), initialBalance_);\n    }\n\n    function decimals()\n        public\n        view\n        virtual\n        override(ERC20, ERC20Decimals)\n        returns (uint8)\n    {\n        return super.decimals();\n    }\n\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(AccessControl, ERC1363)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Function to mint tokens.\n     *\n     * NOTE: restricting access to addresses with MINTER role. See {ERC20Mintable-mint}.\n     *\n     * @param account The address that will receive the minted tokens\n     * @param amount The amount of tokens to mint\n     */\n    function _mint(address account, uint256 amount)\n        internal\n        override(ERC20, ERC20Capped)\n        onlyMinter\n    {\n        super._mint(account, amount);\n    }\n\n    /**\n     * @dev Function to stop minting new tokens.\n     *\n     * NOTE: restricting access to owner only. See {ERC20Mintable-finishMinting}.\n     */\n    function _finishMinting() internal override onlyOwner {\n        super._finishMinting();\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/powerful-erc20.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/powerful-erc20.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/powerful-erc20.sol\":{\"keccak256\":\"0x9570db30440d0d877f8e4b5076cb1328db2af6d84f27ae1a4cffc56db63172d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58817e6239d1d81a70605d4bbfc1ea495aadcb3b46647a2575aeb4484b0d60a3\",\"dweb:/ipfs/QmcWsNLsEniffCVQRHwMTN6Hf8VZmPLbCpdn8krRrrQn1M\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/powerful-erc20.sol\":18686:26845  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/powerful-erc20.sol\":18686:26845  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c44912ba5cfe3b25f5848cab2bd53c92d74aa0927621bb495c04420f131a4dd364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c44912ba5cfe3b25f5848cab2bd53c92d74aa0927621bb495c04420f131a4dd364736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 0x49 SLT 0xBA 0x5C INVALID EXTCODESIZE 0x25 CREATE2 DUP5 DUP13 0xAB 0x2B 0xD5 EXTCODECOPY SWAP3 0xD7 0x4A LOG0 SWAP3 PUSH23 0x21BB495C04420F131A4DD364736F6C6343000807003300 ",
							"sourceMap": "18686:8159:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;18686:8159:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c44912ba5cfe3b25f5848cab2bd53c92d74aa0927621bb495c04420f131a4dd364736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 0x49 SLT 0xBA 0x5C INVALID EXTCODESIZE 0x25 CREATE2 DUP5 DUP13 0xAB 0x2B 0xD5 EXTCODECOPY SWAP3 0xD7 0x4A LOG0 SWAP3 PUSH23 0x21BB495C04420F131A4DD364736F6C6343000807003300 ",
							"sourceMap": "18686:8159:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 18686,
									"end": 26845,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18686,
									"end": 26845,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c44912ba5cfe3b25f5848cab2bd53c92d74aa0927621bb495c04420f131a4dd364736f6c63430008070033",
									".code": [
										{
											"begin": 18686,
											"end": 26845,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 26845,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 26845,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 26845,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18686,
											"end": 26845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18686,
											"end": 26845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 26845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18686,
											"end": 26845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 26845,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/powerful-erc20.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/powerful-erc20.sol\":{\"keccak256\":\"0x9570db30440d0d877f8e4b5076cb1328db2af6d84f27ae1a4cffc56db63172d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58817e6239d1d81a70605d4bbfc1ea495aadcb3b46647a2575aeb4484b0d60a3\",\"dweb:/ipfs/QmcWsNLsEniffCVQRHwMTN6Hf8VZmPLbCpdn8krRrrQn1M\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/powerful-erc20.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/powerful-erc20.sol\":{\"keccak256\":\"0x9570db30440d0d877f8e4b5076cb1328db2af6d84f27ae1a4cffc56db63172d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58817e6239d1d81a70605d4bbfc1ea495aadcb3b46647a2575aeb4484b0d60a3\",\"dweb:/ipfs/QmcWsNLsEniffCVQRHwMTN6Hf8VZmPLbCpdn8krRrrQn1M\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of an ERC1363 interface",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"approveAndCall(address,uint256)": {
								"details": "Approve spender to transfer tokens and then execute a callback on recipient.",
								"params": {
									"amount": "The amount allowed to be transferred",
									"spender": "The address allowed to transfer to"
								},
								"returns": {
									"_0": "A boolean that indicates if the operation was successful."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Approve spender to transfer tokens and then execute a callback on recipient.",
								"params": {
									"amount": "The amount allowed to be transferred.",
									"data": "Additional data with no specified format.",
									"spender": "The address allowed to transfer to."
								},
								"returns": {
									"_0": "A boolean that indicates if the operation was successful."
								}
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferAndCall(address,uint256)": {
								"details": "Transfer tokens to a specified address and then execute a callback on recipient.",
								"params": {
									"amount": "The amount to be transferred.",
									"recipient": "The address to transfer to."
								},
								"returns": {
									"_0": "A boolean that indicates if the operation was successful."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Transfer tokens to a specified address and then execute a callback on recipient.",
								"params": {
									"amount": "The amount to be transferred",
									"data": "Additional data with no specified format",
									"recipient": "The address to transfer to"
								},
								"returns": {
									"_0": "A boolean that indicates if the operation was successful."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Transfer tokens from one address to another and then execute a callback on recipient.",
								"params": {
									"amount": "The amount of tokens to be transferred",
									"recipient": "The address which you want to transfer to",
									"sender": "The address which you want to send tokens from"
								},
								"returns": {
									"_0": "A boolean that indicates if the operation was successful."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Transfer tokens from one address to another and then execute a callback on recipient.",
								"params": {
									"amount": "The amount of tokens to be transferred",
									"data": "Additional data with no specified format",
									"recipient": "The address which you want to transfer to",
									"sender": "The address which you want to send tokens from"
								},
								"returns": {
									"_0": "A boolean that indicates if the operation was successful."
								}
							}
						},
						"title": "ERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of an ERC1363 interface\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Approve spender to transfer tokens and then execute a callback on recipient.\",\"params\":{\"amount\":\"The amount allowed to be transferred\",\"spender\":\"The address allowed to transfer to\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Approve spender to transfer tokens and then execute a callback on recipient.\",\"params\":{\"amount\":\"The amount allowed to be transferred.\",\"data\":\"Additional data with no specified format.\",\"spender\":\"The address allowed to transfer to.\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Transfer tokens to a specified address and then execute a callback on recipient.\",\"params\":{\"amount\":\"The amount to be transferred.\",\"recipient\":\"The address to transfer to.\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Transfer tokens to a specified address and then execute a callback on recipient.\",\"params\":{\"amount\":\"The amount to be transferred\",\"data\":\"Additional data with no specified format\",\"recipient\":\"The address to transfer to\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another and then execute a callback on recipient.\",\"params\":{\"amount\":\"The amount of tokens to be transferred\",\"recipient\":\"The address which you want to transfer to\",\"sender\":\"The address which you want to send tokens from\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Transfer tokens from one address to another and then execute a callback on recipient.\",\"params\":{\"amount\":\"The amount of tokens to be transferred\",\"data\":\"Additional data with no specified format\",\"recipient\":\"The address which you want to transfer to\",\"sender\":\"The address which you want to send tokens from\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}}},\"title\":\"ERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/powerful-erc20.sol\":\"ERC1363\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/powerful-erc20.sol\":{\"keccak256\":\"0x9570db30440d0d877f8e4b5076cb1328db2af6d84f27ae1a4cffc56db63172d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58817e6239d1d81a70605d4bbfc1ea495aadcb3b46647a2575aeb4484b0d60a3\",\"dweb:/ipfs/QmcWsNLsEniffCVQRHwMTN6Hf8VZmPLbCpdn8krRrrQn1M\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/powerful-erc20.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/powerful-erc20.sol\":{\"keccak256\":\"0x9570db30440d0d877f8e4b5076cb1328db2af6d84f27ae1a4cffc56db63172d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58817e6239d1d81a70605d4bbfc1ea495aadcb3b46647a2575aeb4484b0d60a3\",\"dweb:/ipfs/QmcWsNLsEniffCVQRHwMTN6Hf8VZmPLbCpdn8krRrrQn1M\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/powerful-erc20.sol\":5544:16324  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/powerful-erc20.sol\":6119:6232  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/powerful-erc20.sol\":6185:6198  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"contracts/powerful-erc20.sol\":6185:6190  _name */\n  0x03\n  swap1\n    /* \"contracts/powerful-erc20.sol\":6185:6198  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/powerful-erc20.sol\":6208:6225  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"contracts/powerful-erc20.sol\":6208:6215  _symbol */\n  0x04\n  swap1\n    /* \"contracts/powerful-erc20.sol\":6208:6225  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/powerful-erc20.sol\":6119:6232  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/powerful-erc20.sol\":5544:16324  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:899   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_24:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_30:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_31:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_34:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1084   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1084   */\ntag_36:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1203   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1203   */\ntag_37:\n    /* \"#utility.yul\":1222:1283   */\n  tag_38\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1378   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1378   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_40\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":904:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_11:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1675   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1675   */\ntag_42:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1845   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1845   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1471:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_27:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1856:1983   */\ntag_21:\n    /* \"contracts/powerful-erc20.sol\":5544:16324  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/powerful-erc20.sol\":5544:16324  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/powerful-erc20.sol\":6297:6395  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/powerful-erc20.sol\":8518:8720  function approve(address spender, uint256 amount)... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1405:1419   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1398:1420   */\n      iszero\n        /* \"#utility.yul\":1380:1421   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1368:1370   */\n      0x20\n        /* \"#utility.yul\":1353:1371   */\n      add\n        /* \"contracts/powerful-erc20.sol\":8518:8720  function approve(address spender, uint256 amount)... */\n      tag_17\n        /* \"#utility.yul\":1240:1427   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":7385:7491  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"contracts/powerful-erc20.sol\":7472:7484  _totalSupply */\n      sload(0x02)\n        /* \"contracts/powerful-erc20.sol\":7385:7491  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":5020:5045   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5008:5010   */\n      0x20\n        /* \"#utility.yul\":4993:5011   */\n      add\n        /* \"contracts/powerful-erc20.sol\":7385:7491  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":4874:5051   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":9187:9699  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":7234:7325  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"contracts/powerful-erc20.sol\":7316:7318  18 */\n      0x12\n        /* \"#utility.yul\":5198:5234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5186:5188   */\n      0x20\n        /* \"#utility.yul\":5171:5189   */\n      add\n        /* \"contracts/powerful-erc20.sol\":7234:7325  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":5056:5240   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":10094:10380  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":7549:7718  function balanceOf(address account)... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":7693:7711  _balances[account] */\n      and\n        /* \"contracts/powerful-erc20.sol\":7663:7670  uint256 */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":7693:7711  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/powerful-erc20.sol\":7549:7718  function balanceOf(address account)... */\n      jump\n        /* \"contracts/powerful-erc20.sol\":6508:6610  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":10867:11334  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":7921:8129  function transfer(address recipient, uint256 amount)... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":8187:8380  function allowance(address owner, address spender)... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":8346:8364  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/powerful-erc20.sol\":8316:8323  uint256 */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":8346:8364  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/powerful-erc20.sol\":8346:8357  _allowances */\n      0x01\n        /* \"contracts/powerful-erc20.sol\":8346:8364  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/powerful-erc20.sol\":8346:8373  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/powerful-erc20.sol\":8187:8380  function allowance(address owner, address spender)... */\n      jump\n        /* \"contracts/powerful-erc20.sol\":6297:6395  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"contracts/powerful-erc20.sol\":6351:6364  string memory */\n      0x60\n        /* \"contracts/powerful-erc20.sol\":6383:6388  _name */\n      0x03\n        /* \"contracts/powerful-erc20.sol\":6376:6388  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/powerful-erc20.sol\":6297:6395  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":8518:8720  function approve(address spender, uint256 amount)... */\n    tag_22:\n        /* \"contracts/powerful-erc20.sol\":8633:8637  bool */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":8653:8692  _approve(_msgSender(), spender, amount) */\n      tag_71\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":8676:8683  spender */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":8685:8691  amount */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":8653:8661  _approve */\n      tag_74\n        /* \"contracts/powerful-erc20.sol\":8653:8692  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_71:\n      pop\n        /* \"contracts/powerful-erc20.sol\":8709:8713  true */\n      0x01\n        /* \"contracts/powerful-erc20.sol\":8518:8720  function approve(address spender, uint256 amount)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":9187:9699  function transferFrom(... */\n    tag_32:\n        /* \"contracts/powerful-erc20.sol\":9323:9327  bool */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":9339:9375  _transfer(sender, recipient, amount) */\n      tag_77\n        /* \"contracts/powerful-erc20.sol\":9349:9355  sender */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":9357:9366  recipient */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":9368:9374  amount */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":9339:9348  _transfer */\n      tag_78\n        /* \"contracts/powerful-erc20.sol\":9339:9375  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":9413:9432  _allowances[sender] */\n      dup5\n      and\n        /* \"contracts/powerful-erc20.sol\":9386:9410  uint256 currentAllowance */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":9413:9432  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/powerful-erc20.sol\":9413:9424  _allowances */\n      0x01\n        /* \"contracts/powerful-erc20.sol\":9413:9432  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":9413:9446  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/powerful-erc20.sol\":9477:9503  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"contracts/powerful-erc20.sol\":9456:9569  require(... */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3450:3452   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":9456:9569  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3432:3453   */\n      mstore\n        /* \"#utility.yul\":3489:3491   */\n      0x28\n        /* \"#utility.yul\":3469:3487   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3462:3492   */\n      mstore\n        /* \"#utility.yul\":3528:3562   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3508:3526   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3501:3563   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":3579:3597   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3572:3610   */\n      mstore\n        /* \"#utility.yul\":3627:3646   */\n      0x84\n      add\n        /* \"contracts/powerful-erc20.sol\":9456:9569  require(... */\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"contracts/powerful-erc20.sol\":9603:9660  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_83\n        /* \"contracts/powerful-erc20.sol\":9612:9618  sender */\n      dup6\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":9653:9659  amount */\n      dup6\n        /* \"contracts/powerful-erc20.sol\":9634:9650  currentAllowance */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":9634:9659  currentAllowance - amount */\n      sub\n        /* \"contracts/powerful-erc20.sol\":9603:9611  _approve */\n      tag_74\n        /* \"contracts/powerful-erc20.sol\":9603:9660  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_83:\n      pop\n        /* \"contracts/powerful-erc20.sol\":9688:9692  true */\n      0x01\n      swap5\n        /* \"contracts/powerful-erc20.sol\":9187:9699  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":10094:10380  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_40:\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":10206:10210  bool */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":10295:10320  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/powerful-erc20.sol\":10295:10306  _allowances */\n      0x01\n        /* \"contracts/powerful-erc20.sol\":10295:10320  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":10295:10329  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/powerful-erc20.sol\":10206:10210  bool */\n      swap1\n      swap2\n        /* \"contracts/powerful-erc20.sol\":10226:10352  _approve(... */\n      tag_71\n      swap2\n        /* \"contracts/powerful-erc20.sol\":10274:10281  spender */\n      dup6\n      swap1\n        /* \"contracts/powerful-erc20.sol\":10295:10342  _allowances[_msgSender()][spender] + addedValue */\n      tag_90\n      swap1\n        /* \"contracts/powerful-erc20.sol\":10332:10342  addedValue */\n      dup7\n      swap1\n        /* \"contracts/powerful-erc20.sol\":10295:10342  _allowances[_msgSender()][spender] + addedValue */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"contracts/powerful-erc20.sol\":10226:10234  _approve */\n      tag_74\n        /* \"contracts/powerful-erc20.sol\":10226:10352  _approve(... */\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":6508:6610  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"contracts/powerful-erc20.sol\":6564:6577  string memory */\n      0x60\n        /* \"contracts/powerful-erc20.sol\":6596:6603  _symbol */\n      0x04\n        /* \"contracts/powerful-erc20.sol\":6589:6603  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":10867:11334  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_52:\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":10984:10988  bool */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":11031:11056  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/powerful-erc20.sol\":11031:11042  _allowances */\n      0x01\n        /* \"contracts/powerful-erc20.sol\":11031:11056  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":11031:11065  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/powerful-erc20.sol\":11096:11131  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"contracts/powerful-erc20.sol\":11075:11194  require(... */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4670:4672   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":11075:11194  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4652:4673   */\n      mstore\n        /* \"#utility.yul\":4709:4711   */\n      0x25\n        /* \"#utility.yul\":4689:4707   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4682:4712   */\n      mstore\n        /* \"#utility.yul\":4748:4782   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4728:4746   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4721:4783   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4799:4817   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4792:4827   */\n      mstore\n        /* \"#utility.yul\":4844:4863   */\n      0x84\n      add\n        /* \"contracts/powerful-erc20.sol\":11075:11194  require(... */\n      tag_81\n        /* \"#utility.yul\":4468:4869   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":11075:11194  require(... */\n    tag_101:\n        /* \"contracts/powerful-erc20.sol\":11228:11295  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_104\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":11251:11258  spender */\n      dup6\n        /* \"contracts/powerful-erc20.sol\":11279:11294  subtractedValue */\n      dup6\n        /* \"contracts/powerful-erc20.sol\":11260:11276  currentAllowance */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":11260:11294  currentAllowance - subtractedValue */\n      sub\n        /* \"contracts/powerful-erc20.sol\":11228:11236  _approve */\n      tag_74\n        /* \"contracts/powerful-erc20.sol\":11228:11295  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_104:\n      pop\n        /* \"contracts/powerful-erc20.sol\":11323:11327  true */\n      0x01\n      swap4\n        /* \"contracts/powerful-erc20.sol\":10867:11334  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":7921:8129  function transfer(address recipient, uint256 amount)... */\n    tag_56:\n        /* \"contracts/powerful-erc20.sol\":8039:8043  bool */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":8059:8101  _transfer(_msgSender(), recipient, amount) */\n      tag_71\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":8083:8092  recipient */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":8094:8100  amount */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":8059:8068  _transfer */\n      tag_78\n        /* \"contracts/powerful-erc20.sol\":8059:8101  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":14539:14909  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":14670:14689  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/powerful-erc20.sol\":14662:14730  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4265:4267   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":14662:14730  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4247:4268   */\n      mstore\n        /* \"#utility.yul\":4304:4306   */\n      0x24\n        /* \"#utility.yul\":4284:4302   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4277:4307   */\n      mstore\n        /* \"#utility.yul\":4343:4377   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4323:4341   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4316:4378   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4394:4412   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4387:4421   */\n      mstore\n        /* \"#utility.yul\":4438:4457   */\n      0x84\n      add\n        /* \"contracts/powerful-erc20.sol\":14662:14730  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":4063:4463   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":14662:14730  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":14748:14769  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/powerful-erc20.sol\":14740:14808  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2640:2642   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":14740:14808  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2622:2643   */\n      mstore\n        /* \"#utility.yul\":2679:2681   */\n      0x22\n        /* \"#utility.yul\":2659:2677   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2652:2682   */\n      mstore\n        /* \"#utility.yul\":2718:2752   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2698:2716   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2691:2753   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":2769:2787   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2762:2794   */\n      mstore\n        /* \"#utility.yul\":2811:2830   */\n      0x84\n      add\n        /* \"contracts/powerful-erc20.sol\":14740:14808  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":2438:2836   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":14740:14808  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":14819:14837  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/powerful-erc20.sol\":14819:14830  _allowances */\n      0x01\n        /* \"contracts/powerful-erc20.sol\":14819:14837  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/powerful-erc20.sol\":14819:14846  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/powerful-erc20.sol\":14819:14855  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/powerful-erc20.sol\":14870:14902  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":5020:5045   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/powerful-erc20.sol\":14870:14902  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":4993:5011   */\n      add\n        /* \"contracts/powerful-erc20.sol\":14870:14902  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/powerful-erc20.sol\":14539:14909  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":11808:12555  function _transfer(... */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":11943:11963  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/powerful-erc20.sol\":11935:12005  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3859:3861   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":11935:12005  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3841:3862   */\n      mstore\n        /* \"#utility.yul\":3898:3900   */\n      0x25\n        /* \"#utility.yul\":3878:3896   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3871:3901   */\n      mstore\n        /* \"#utility.yul\":3937:3971   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3917:3935   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3910:3972   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":3988:4006   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3981:4016   */\n      mstore\n        /* \"#utility.yul\":4033:4052   */\n      0x84\n      add\n        /* \"contracts/powerful-erc20.sol\":11935:12005  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":3657:4058   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":11935:12005  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":12023:12046  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/powerful-erc20.sol\":12015:12086  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2236:2238   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":12015:12086  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2218:2239   */\n      mstore\n        /* \"#utility.yul\":2275:2277   */\n      0x23\n        /* \"#utility.yul\":2255:2273   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2248:2278   */\n      mstore\n        /* \"#utility.yul\":2314:2348   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2294:2312   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2287:2349   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2365:2383   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2358:2391   */\n      mstore\n        /* \"#utility.yul\":2408:2427   */\n      0x84\n      add\n        /* \"contracts/powerful-erc20.sol\":12015:12086  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":2034:2433   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":12015:12086  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":12179:12196  _balances[sender] */\n      dup4\n      and\n        /* \"contracts/powerful-erc20.sol\":12155:12176  uint256 senderBalance */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":12179:12196  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/powerful-erc20.sol\":12227:12250  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/powerful-erc20.sol\":12206:12314  require(... */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3043:3045   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":12206:12314  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3025:3046   */\n      mstore\n        /* \"#utility.yul\":3082:3084   */\n      0x26\n        /* \"#utility.yul\":3062:3080   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3055:3085   */\n      mstore\n        /* \"#utility.yul\":3121:3155   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3101:3119   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3094:3156   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3172:3190   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3165:3201   */\n      mstore\n        /* \"#utility.yul\":3218:3237   */\n      0x84\n      add\n        /* \"contracts/powerful-erc20.sol\":12206:12314  require(... */\n      tag_81\n        /* \"#utility.yul\":2841:3243   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":12206:12314  require(... */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":12348:12365  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"contracts/powerful-erc20.sol\":12348:12357  _balances */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":12348:12365  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/powerful-erc20.sol\":12368:12390  senderBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"contracts/powerful-erc20.sol\":12348:12390  _balances[sender] = senderBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/powerful-erc20.sol\":12410:12430  _balances[recipient] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/powerful-erc20.sol\":12410:12440  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"contracts/powerful-erc20.sol\":12384:12390  amount */\n      dup5\n      swap3\n        /* \"contracts/powerful-erc20.sol\":12348:12357  _balances */\n      swap1\n        /* \"contracts/powerful-erc20.sol\":12410:12440  _balances[recipient] += amount */\n      tag_131\n      swap1\n        /* \"contracts/powerful-erc20.sol\":12384:12390  amount */\n      dup5\n      swap1\n        /* \"contracts/powerful-erc20.sol\":12410:12440  _balances[recipient] += amount */\n      tag_91\n      jump\t// in\n    tag_131:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/powerful-erc20.sol\":12473:12482  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":12456:12491  Transfer(sender, recipient, amount) */\n      and\n        /* \"contracts/powerful-erc20.sol\":12465:12471  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":12456:12491  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/powerful-erc20.sol\":12484:12490  amount */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":12456:12491  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_132\n      swap2\n        /* \"#utility.yul\":5020:5045   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5008:5010   */\n      0x20\n        /* \"#utility.yul\":4993:5011   */\n      add\n      swap1\n        /* \"#utility.yul\":4874:5051   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":12456:12491  Transfer(sender, recipient, amount) */\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/powerful-erc20.sol\":11925:12555  {... */\n      pop\n        /* \"contracts/powerful-erc20.sol\":11808:12555  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_138:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_140\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_140:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_44:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_142:\n        /* \"#utility.yul\":343:372   */\n      tag_143\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_138\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:643   */\n    tag_60:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_145:\n        /* \"#utility.yul\":551:580   */\n      tag_146\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_138\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_147\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_138\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_31:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_149:\n        /* \"#utility.yul\":833:862   */\n      tag_150\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_138\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_151\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_138\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_21:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1130   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1130   */\n    tag_153:\n        /* \"#utility.yul\":1149:1178   */\n      tag_154\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_138\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1432:2029   */\n    tag_18:\n        /* \"#utility.yul\":1544:1548   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x20\n        /* \"#utility.yul\":1602:1604   */\n      dup1\n        /* \"#utility.yul\":1591:1600   */\n      dup4\n        /* \"#utility.yul\":1584:1605   */\n      mstore\n        /* \"#utility.yul\":1634:1640   */\n      dup4\n        /* \"#utility.yul\":1628:1641   */\n      mload\n        /* \"#utility.yul\":1677:1683   */\n      dup1\n        /* \"#utility.yul\":1672:1674   */\n      dup3\n        /* \"#utility.yul\":1661:1670   */\n      dup6\n        /* \"#utility.yul\":1657:1675   */\n      add\n        /* \"#utility.yul\":1650:1684   */\n      mstore\n        /* \"#utility.yul\":1702:1703   */\n      0x00\n        /* \"#utility.yul\":1712:1852   */\n    tag_157:\n        /* \"#utility.yul\":1726:1732   */\n      dup2\n        /* \"#utility.yul\":1723:1724   */\n      dup2\n        /* \"#utility.yul\":1720:1733   */\n      lt\n        /* \"#utility.yul\":1712:1852   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":1821:1835   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1817:1840   */\n      dup4\n      add\n        /* \"#utility.yul\":1811:1841   */\n      mload\n        /* \"#utility.yul\":1787:1804   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1806:1808   */\n      0x40\n        /* \"#utility.yul\":1783:1809   */\n      add\n        /* \"#utility.yul\":1776:1842   */\n      mstore\n        /* \"#utility.yul\":1741:1751   */\n      dup3\n      add\n        /* \"#utility.yul\":1712:1852   */\n      jump(tag_157)\n    tag_159:\n        /* \"#utility.yul\":1870:1876   */\n      dup2\n        /* \"#utility.yul\":1867:1868   */\n      dup2\n        /* \"#utility.yul\":1864:1877   */\n      gt\n        /* \"#utility.yul\":1861:1952   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":1940:1941   */\n      0x00\n        /* \"#utility.yul\":1935:1937   */\n      0x40\n        /* \"#utility.yul\":1926:1932   */\n      dup4\n        /* \"#utility.yul\":1915:1924   */\n      dup8\n        /* \"#utility.yul\":1911:1933   */\n      add\n        /* \"#utility.yul\":1907:1938   */\n      add\n        /* \"#utility.yul\":1900:1942   */\n      mstore\n        /* \"#utility.yul\":1861:1952   */\n    tag_160:\n      pop\n        /* \"#utility.yul\":2013:2015   */\n      0x1f\n        /* \"#utility.yul\":1992:2007   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1988:2017   */\n      and\n        /* \"#utility.yul\":1973:2018   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2020:2022   */\n      0x40\n        /* \"#utility.yul\":1969:2023   */\n      add\n      swap4\n        /* \"#utility.yul\":1432:2029   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5245:5470   */\n    tag_91:\n        /* \"#utility.yul\":5285:5288   */\n      0x00\n        /* \"#utility.yul\":5316:5317   */\n      dup3\n        /* \"#utility.yul\":5312:5318   */\n      not\n        /* \"#utility.yul\":5309:5310   */\n      dup3\n        /* \"#utility.yul\":5306:5319   */\n      gt\n        /* \"#utility.yul\":5303:5439   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":5361:5371   */\n      0x4e487b71\n        /* \"#utility.yul\":5356:5359   */\n      0xe0\n        /* \"#utility.yul\":5352:5372   */\n      shl\n        /* \"#utility.yul\":5349:5350   */\n      0x00\n        /* \"#utility.yul\":5342:5373   */\n      mstore\n        /* \"#utility.yul\":5396:5400   */\n      0x11\n        /* \"#utility.yul\":5393:5394   */\n      0x04\n        /* \"#utility.yul\":5386:5401   */\n      mstore\n        /* \"#utility.yul\":5424:5428   */\n      0x24\n        /* \"#utility.yul\":5421:5422   */\n      0x00\n        /* \"#utility.yul\":5414:5429   */\n      revert\n        /* \"#utility.yul\":5303:5439   */\n    tag_171:\n      pop\n        /* \"#utility.yul\":5455:5464   */\n      add\n      swap1\n        /* \"#utility.yul\":5245:5470   */\n      jump\t// out\n        /* \"#utility.yul\":5475:5855   */\n    tag_65:\n        /* \"#utility.yul\":5554:5555   */\n      0x01\n        /* \"#utility.yul\":5550:5562   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5597:5609   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5618:5679   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":5672:5676   */\n      0x7f\n        /* \"#utility.yul\":5664:5670   */\n      dup3\n        /* \"#utility.yul\":5660:5677   */\n      and\n        /* \"#utility.yul\":5650:5677   */\n      swap2\n      pop\n        /* \"#utility.yul\":5618:5679   */\n    tag_173:\n        /* \"#utility.yul\":5725:5727   */\n      0x20\n        /* \"#utility.yul\":5717:5723   */\n      dup3\n        /* \"#utility.yul\":5714:5728   */\n      lt\n        /* \"#utility.yul\":5694:5712   */\n      dup2\n        /* \"#utility.yul\":5691:5729   */\n      eq\n        /* \"#utility.yul\":5688:5849   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":5771:5781   */\n      0x4e487b71\n        /* \"#utility.yul\":5766:5769   */\n      0xe0\n        /* \"#utility.yul\":5762:5782   */\n      shl\n        /* \"#utility.yul\":5759:5760   */\n      0x00\n        /* \"#utility.yul\":5752:5783   */\n      mstore\n        /* \"#utility.yul\":5806:5810   */\n      0x22\n        /* \"#utility.yul\":5803:5804   */\n      0x04\n        /* \"#utility.yul\":5796:5811   */\n      mstore\n        /* \"#utility.yul\":5834:5838   */\n      0x24\n        /* \"#utility.yul\":5831:5832   */\n      0x00\n        /* \"#utility.yul\":5824:5839   */\n      revert\n        /* \"#utility.yul\":5688:5849   */\n    tag_174:\n      pop\n        /* \"#utility.yul\":5475:5855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220eb3de7aa73271e3da569f6d29da9439a01cad4c06d0e75b4ac2995228e6ee90f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_162": {
									"entryPoint": null,
									"id": 162,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:1"
															},
															"nodeType": "YulIf",
															"src": "88:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:1"
															},
															"nodeType": "YulIf",
															"src": "221:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:1"
															},
															"nodeType": "YulIf",
															"src": "404:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:1"
															},
															"nodeType": "YulIf",
															"src": "566:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:1",
																"statements": []
															},
															"src": "647:133:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:1"
															},
															"nodeType": "YulIf",
															"src": "789:80:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:1",
														"type": ""
													}
												],
												"src": "14:885:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:1"
															},
															"nodeType": "YulIf",
															"src": "1032:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:1"
															},
															"nodeType": "YulIf",
															"src": "1169:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:1"
															},
															"nodeType": "YulIf",
															"src": "1342:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:1",
														"type": ""
													}
												],
												"src": "904:562:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:1"
															},
															"nodeType": "YulIf",
															"src": "1614:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:1"
															},
															"nodeType": "YulIf",
															"src": "1684:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:1",
														"type": ""
													}
												],
												"src": "1471:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b5638038062000b568339810160408190526200003491620001c5565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6108c480620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107d8565b60405180910390f35b6100df6100da3660046107ae565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610772565b61026e565b604051601281526020016100c3565b6100df6101313660046107ae565b61031d565b6100f361014436600461071d565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df6101753660046107ae565b610368565b6100df6101883660046107ae565b610401565b6100f361019b36600461073f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610853565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610853565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161026591859061035490869061082d565b61040e565b6060600480546101d590610853565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a790849061082d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b80356001600160a01b038116811461071857600080fd5b919050565b60006020828403121561072f57600080fd5b61073882610701565b9392505050565b6000806040838503121561075257600080fd5b61075b83610701565b915061076960208401610701565b90509250929050565b60008060006060848603121561078757600080fd5b61079084610701565b925061079e60208501610701565b9150604084013590509250925092565b600080604083850312156107c157600080fd5b6107ca83610701565b946020939093013593505050565b600060208083528351808285015260005b81811015610805578581018301518582016040015282016107e9565b81811115610817576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561084e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061086757607f821691505b6020821081141561088857634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220eb3de7aa73271e3da569f6d29da9439a01cad4c06d0e75b4ac2995228e6ee90f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB56 CODESIZE SUB DUP1 PUSH3 0xB56 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C5 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13D PUSH3 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0x26C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A9 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18A JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x225 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8C4 DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x73F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x738 DUP3 PUSH2 0x701 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75B DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH2 0x769 PUSH1 0x20 DUP5 ADD PUSH2 0x701 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x790 DUP5 PUSH2 0x701 JUMP JUMPDEST SWAP3 POP PUSH2 0x79E PUSH1 0x20 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7CA DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x805 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7E9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x867 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x888 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB RETURNDATASIZE 0xE7 0xAA PUSH20 0x271E3DA569F6D29DA9439A01CAD4C06D0E75B4AC 0x29 SWAP6 0x22 DUP15 PUSH15 0xE90F64736F6C634300080700330000 ",
							"sourceMap": "5544:10780:0:-:0;;;6119:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6185:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;6208:17:0;;;;:7;;:17;;;;;:::i;:::-;;6119:113;;5544:10780;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5544:10780:0;;;-1:-1:-1;5544:10780:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:1;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:1;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:1;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:1:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:1;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;5544:10780:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_662": {
									"entryPoint": null,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_640": {
									"entryPoint": 1038,
									"id": 640,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_651": {
									"entryPoint": null,
									"id": 651,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_467": {
									"entryPoint": 1330,
									"id": 467,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_255": {
									"entryPoint": null,
									"id": 255,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_276": {
									"entryPoint": 600,
									"id": 276,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_216": {
									"entryPoint": null,
									"id": 216,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_192": {
									"entryPoint": null,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_390": {
									"entryPoint": 872,
									"id": 390,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_351": {
									"entryPoint": 797,
									"id": 351,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_172": {
									"entryPoint": 454,
									"id": 172,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_182": {
									"entryPoint": 857,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_324": {
									"entryPoint": 622,
									"id": 324,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_237": {
									"entryPoint": 1025,
									"id": 237,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5857:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:1"
															},
															"nodeType": "YulIf",
															"src": "272:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:1",
														"type": ""
													}
												],
												"src": "192:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:1"
															},
															"nodeType": "YulIf",
															"src": "480:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:1",
														"type": ""
													}
												],
												"src": "383:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:1"
															},
															"nodeType": "YulIf",
															"src": "762:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:1",
														"type": ""
													}
												],
												"src": "648:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:1"
															},
															"nodeType": "YulIf",
															"src": "1078:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:1",
														"type": ""
													}
												],
												"src": "981:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1345:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1357:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1368:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1345:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1387:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1412:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1405:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1405:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1398:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1398:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1380:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1304:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1315:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1326:4:1",
														"type": ""
													}
												],
												"src": "1240:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1553:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1563:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1573:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1567:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1591:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1602:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1584:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1584:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1614:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1634:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1628:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1618:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1661:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1672:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1657:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1677:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1650:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1693:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1702:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1697:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1762:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1791:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1802:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1787:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1787:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1806:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1783:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1783:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1825:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1833:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1821:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1821:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1837:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1817:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1817:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1811:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1811:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1776:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1776:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1776:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1723:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1726:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1720:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1734:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1736:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1745:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1748:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1741:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1741:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1736:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1716:3:1",
																"statements": []
															},
															"src": "1712:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1886:66:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1915:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1926:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1911:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1911:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1935:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1907:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1907:31:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1940:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1900:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1900:42:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1867:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1870:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1864:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:13:1"
															},
															"nodeType": "YulIf",
															"src": "1861:91:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1961:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1977:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1996:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2004:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1992:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1992:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2013:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2009:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2009:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1988:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1988:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1973:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2020:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1969:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1969:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1961:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1522:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1533:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1544:4:1",
														"type": ""
													}
												],
												"src": "1432:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2225:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2218:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2259:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2270:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2255:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2275:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2248:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2248:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2298:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2309:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2314:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2287:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2287:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2369:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2380:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2365:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2385:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2358:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2358:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2400:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2412:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2423:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2408:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2400:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2199:4:1",
														"type": ""
													}
												],
												"src": "2034:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2612:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2629:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2640:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2622:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2622:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2663:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2674:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2659:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2659:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2679:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2652:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2713:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2698:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2718:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2691:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2691:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2773:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2784:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2769:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2769:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2789:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2762:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2803:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2815:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2826:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2811:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2803:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2589:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2603:4:1",
														"type": ""
													}
												],
												"src": "2438:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3015:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3032:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3043:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3025:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3025:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3066:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3077:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3062:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3062:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3082:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3055:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3055:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3116:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3101:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3121:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3094:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3094:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3176:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3187:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3172:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3172:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3192:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3165:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3165:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3210:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3222:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3233:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3218:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3218:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3210:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2992:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3006:4:1",
														"type": ""
													}
												],
												"src": "2841:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3422:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3439:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3432:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3432:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3473:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3484:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3469:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3469:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3489:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3462:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3462:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3462:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3512:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3523:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3508:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3508:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3528:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3501:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3501:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3501:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3583:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3594:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3579:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3579:18:1"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3599:10:1",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3572:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3619:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3631:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3642:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3627:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3619:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3399:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3413:4:1",
														"type": ""
													}
												],
												"src": "3248:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3831:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3848:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3859:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3841:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3882:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3893:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3878:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3878:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3898:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3871:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3871:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3921:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3932:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3917:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3917:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3937:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3910:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3910:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3910:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3992:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4003:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3988:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3988:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4008:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3981:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3981:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4025:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4037:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4048:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4033:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4033:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4025:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3808:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3822:4:1",
														"type": ""
													}
												],
												"src": "3657:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4237:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4254:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4265:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4247:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4247:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4247:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4288:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4299:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4284:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4284:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4304:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4277:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4277:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4277:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4327:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4338:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4323:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4323:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4343:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4316:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4398:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4409:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4394:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4394:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4414:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4387:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4387:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4430:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4442:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4453:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4438:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4438:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4430:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4214:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4228:4:1",
														"type": ""
													}
												],
												"src": "4063:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4642:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4659:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4670:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4652:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4652:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4693:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4704:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4689:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4689:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4709:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4682:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4682:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4682:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4732:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4743:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4728:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4728:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4748:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4721:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4721:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4721:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4803:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4814:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4799:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4799:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4819:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4792:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4792:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4792:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4836:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4848:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4859:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4844:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4844:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4836:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4619:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4633:4:1",
														"type": ""
													}
												],
												"src": "4468:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4975:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4985:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4997:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5008:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4993:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4993:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4985:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5027:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5038:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5020:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5020:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5020:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4944:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4955:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4966:4:1",
														"type": ""
													}
												],
												"src": "4874:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5153:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5163:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5175:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5186:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5171:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5171:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5163:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5205:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5220:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5228:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5216:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5216:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5198:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5198:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5198:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5122:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5133:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5144:4:1",
														"type": ""
													}
												],
												"src": "5056:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5293:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5328:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5349:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5356:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5361:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5352:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5352:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5342:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5342:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5342:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5393:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5396:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5386:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5386:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5386:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5421:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5424:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5414:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5414:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5414:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5309:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5316:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5312:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5312:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5306:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5306:13:1"
															},
															"nodeType": "YulIf",
															"src": "5303:136:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5448:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5459:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5462:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5455:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5455:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5448:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5276:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5279:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5285:3:1",
														"type": ""
													}
												],
												"src": "5245:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5530:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5540:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5554:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5557:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5550:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5550:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5540:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5571:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5601:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5607:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5597:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5597:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5575:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5648:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5650:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5664:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5672:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5660:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5660:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5650:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5628:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5621:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5621:26:1"
															},
															"nodeType": "YulIf",
															"src": "5618:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5738:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5759:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5766:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5771:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5762:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5762:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5752:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5752:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5752:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5803:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5806:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5796:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5796:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5796:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5831:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5834:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5824:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5824:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5824:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5694:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5717:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5725:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5714:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5714:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5691:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5691:38:1"
															},
															"nodeType": "YulIf",
															"src": "5688:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5510:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5519:6:1",
														"type": ""
													}
												],
												"src": "5475:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107d8565b60405180910390f35b6100df6100da3660046107ae565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610772565b61026e565b604051601281526020016100c3565b6100df6101313660046107ae565b61031d565b6100f361014436600461071d565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df6101753660046107ae565b610368565b6100df6101883660046107ae565b610401565b6100f361019b36600461073f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610853565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610853565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161026591859061035490869061082d565b61040e565b6060600480546101d590610853565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a790849061082d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b80356001600160a01b038116811461071857600080fd5b919050565b60006020828403121561072f57600080fd5b61073882610701565b9392505050565b6000806040838503121561075257600080fd5b61075b83610701565b915061076960208401610701565b90509250929050565b60008060006060848603121561078757600080fd5b61079084610701565b925061079e60208501610701565b9150604084013590509250925092565b600080604083850312156107c157600080fd5b6107ca83610701565b946020939093013593505050565b600060208083528351808285015260005b81811015610805578581018301518582016040015282016107e9565b81811115610817576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561084e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061086757607f821691505b6020821081141561088857634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220eb3de7aa73271e3da569f6d29da9439a01cad4c06d0e75b4ac2995228e6ee90f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x73F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x738 DUP3 PUSH2 0x701 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75B DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH2 0x769 PUSH1 0x20 DUP5 ADD PUSH2 0x701 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x790 DUP5 PUSH2 0x701 JUMP JUMPDEST SWAP3 POP PUSH2 0x79E PUSH1 0x20 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7CA DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x805 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7E9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x867 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x888 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB RETURNDATASIZE 0xE7 0xAA PUSH20 0x271E3DA569F6D29DA9439A01CAD4C06D0E75B4AC 0x29 SWAP6 0x22 DUP15 PUSH15 0xE90F64736F6C634300080700330000 ",
							"sourceMap": "5544:10780:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6297:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8518:202;;;;;;:::i;:::-;;:::i;:::-;;;1405:14:1;;1398:22;1380:41;;1368:2;1353:18;8518:202:0;1240:187:1;7385:106:0;7472:12;;7385:106;;;5020:25:1;;;5008:2;4993:18;7385:106:0;4874:177:1;9187:512:0;;;;;;:::i;:::-;;:::i;7234:91::-;;;7316:2;5198:36:1;;5186:2;5171:18;7234:91:0;5056:184:1;10094:286:0;;;;;;:::i;:::-;;:::i;7549:169::-;;;;;;:::i;:::-;-1:-1:-1;;;;;7693:18:0;7663:7;7693:18;;;;;;;;;;;;7549:169;6508:102;;;:::i;10867:467::-;;;;;;:::i;:::-;;:::i;7921:208::-;;;;;;:::i;:::-;;:::i;8187:193::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8346:18:0;;;8316:7;8346:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8187:193;6297:98;6351:13;6383:5;6376:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6297:98;:::o;8518:202::-;8633:4;8653:39;4164:10;8676:7;8685:6;8653:8;:39::i;:::-;-1:-1:-1;8709:4:0;8518:202;;;;:::o;9187:512::-;9323:4;9339:36;9349:6;9357:9;9368:6;9339:9;:36::i;:::-;-1:-1:-1;;;;;9413:19:0;;9386:24;9413:19;;;:11;:19;;;;;;;;4164:10;9413:33;;;;;;;;9477:26;;;;9456:113;;;;-1:-1:-1;;;9456:113:0;;3450:2:1;9456:113:0;;;3432:21:1;3489:2;3469:18;;;3462:30;3528:34;3508:18;;;3501:62;-1:-1:-1;;;3579:18:1;;;3572:38;3627:19;;9456:113:0;;;;;;;;;9603:57;9612:6;4164:10;9653:6;9634:16;:25;9603:8;:57::i;:::-;-1:-1:-1;9688:4:0;;9187:512;-1:-1:-1;;;;9187:512:0:o;10094:286::-;4164:10;10206:4;10295:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;10295:34:0;;;;;;;;;;10206:4;;10226:126;;10274:7;;10295:47;;10332:10;;10295:47;:::i;:::-;10226:8;:126::i;6508:102::-;6564:13;6596:7;6589:14;;;;;:::i;10867:467::-;4164:10;10984:4;11031:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;11031:34:0;;;;;;;;;;11096:35;;;;11075:119;;;;-1:-1:-1;;;11075:119:0;;4670:2:1;11075:119:0;;;4652:21:1;4709:2;4689:18;;;4682:30;4748:34;4728:18;;;4721:62;-1:-1:-1;;;4799:18:1;;;4792:35;4844:19;;11075:119:0;4468:401:1;11075:119:0;11228:67;4164:10;11251:7;11279:15;11260:16;:34;11228:8;:67::i;:::-;-1:-1:-1;11323:4:0;;10867:467;-1:-1:-1;;;10867:467:0:o;7921:208::-;8039:4;8059:42;4164:10;8083:9;8094:6;8059:9;:42::i;14539:370::-;-1:-1:-1;;;;;14670:19:0;;14662:68;;;;-1:-1:-1;;;14662:68:0;;4265:2:1;14662:68:0;;;4247:21:1;4304:2;4284:18;;;4277:30;4343:34;4323:18;;;4316:62;-1:-1:-1;;;4394:18:1;;;4387:34;4438:19;;14662:68:0;4063:400:1;14662:68:0;-1:-1:-1;;;;;14748:21:0;;14740:68;;;;-1:-1:-1;;;14740:68:0;;2640:2:1;14740:68:0;;;2622:21:1;2679:2;2659:18;;;2652:30;2718:34;2698:18;;;2691:62;-1:-1:-1;;;2769:18:1;;;2762:32;2811:19;;14740:68:0;2438:398:1;14740:68:0;-1:-1:-1;;;;;14819:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;14870:32;;5020:25:1;;;14870:32:0;;4993:18:1;14870:32:0;;;;;;;14539:370;;;:::o;11808:747::-;-1:-1:-1;;;;;11943:20:0;;11935:70;;;;-1:-1:-1;;;11935:70:0;;3859:2:1;11935:70:0;;;3841:21:1;3898:2;3878:18;;;3871:30;3937:34;3917:18;;;3910:62;-1:-1:-1;;;3988:18:1;;;3981:35;4033:19;;11935:70:0;3657:401:1;11935:70:0;-1:-1:-1;;;;;12023:23:0;;12015:71;;;;-1:-1:-1;;;12015:71:0;;2236:2:1;12015:71:0;;;2218:21:1;2275:2;2255:18;;;2248:30;2314:34;2294:18;;;2287:62;-1:-1:-1;;;2365:18:1;;;2358:33;2408:19;;12015:71:0;2034:399:1;12015:71:0;-1:-1:-1;;;;;12179:17:0;;12155:21;12179:17;;;;;;;;;;;12227:23;;;;12206:108;;;;-1:-1:-1;;;12206:108:0;;3043:2:1;12206:108:0;;;3025:21:1;3082:2;3062:18;;;3055:30;3121:34;3101:18;;;3094:62;-1:-1:-1;;;3172:18:1;;;3165:36;3218:19;;12206:108:0;2841:402:1;12206:108:0;-1:-1:-1;;;;;12348:17:0;;;:9;:17;;;;;;;;;;;12368:22;;;12348:42;;12410:20;;;;;;;;:30;;12384:6;;12348:9;12410:30;;12384:6;;12410:30;:::i;:::-;;;;;;;;12473:9;-1:-1:-1;;;;;12456:35:0;12465:6;-1:-1:-1;;;;;12456:35:0;;12484:6;12456:35;;;;5020:25:1;;5008:2;4993:18;;4874:177;12456:35:0;;;;;;;;11925:630;11808:747;;;:::o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:1:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:1:o;1432:597::-;1544:4;1573:2;1602;1591:9;1584:21;1634:6;1628:13;1677:6;1672:2;1661:9;1657:18;1650:34;1702:1;1712:140;1726:6;1723:1;1720:13;1712:140;;;1821:14;;;1817:23;;1811:30;1787:17;;;1806:2;1783:26;1776:66;1741:10;;1712:140;;;1870:6;1867:1;1864:13;1861:91;;;1940:1;1935:2;1926:6;1915:9;1911:22;1907:31;1900:42;1861:91;-1:-1:-1;2013:2:1;1992:15;-1:-1:-1;;1988:29:1;1973:45;;;;2020:2;1969:54;;1432:597;-1:-1:-1;;;1432:597:1:o;5245:225::-;5285:3;5316:1;5312:6;5309:1;5306:13;5303:136;;;5361:10;5356:3;5352:20;5349:1;5342:31;5396:4;5393:1;5386:15;5424:4;5421:1;5414:15;5303:136;-1:-1:-1;5455:9:1;;5245:225::o;5475:380::-;5554:1;5550:12;;;;5597;;;5618:61;;5672:4;5664:6;5660:17;5650:27;;5618:61;5725:2;5717:6;5714:14;5694:18;5691:38;5688:161;;;5771:10;5766:3;5762:20;5759:1;5752:31;5806:4;5803:1;5796:15;5834:4;5831:1;5824:15;5688:161;;5475:380;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "448800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24619",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "26954",
								"increaseAllowance(address,uint256)": "26934",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51253",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6185,
									"end": 6190,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6185,
									"end": 6190,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6208,
									"end": 6215,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6208,
									"end": 6215,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6119,
									"end": 6232,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5544,
									"end": 16324,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eb3de7aa73271e3da569f6d29da9439a01cad4c06d0e75b4ac2995228e6ee90f64736f6c63430008070033",
									".code": [
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 16324,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1240,
											"end": 1427,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7385,
											"end": 7491,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7385,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7472,
											"end": 7484,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7472,
											"end": 7484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7385,
											"end": 7491,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7385,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7385,
											"end": 7491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7385,
											"end": 7491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5008,
											"end": 5010,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7385,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4874,
											"end": 5051,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7234,
											"end": 7325,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7234,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7234,
											"end": 7325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7234,
											"end": 7325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7316,
											"end": 7318,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5198,
											"end": 5234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5198,
											"end": 5234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5188,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5171,
											"end": 5189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7234,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5056,
											"end": 5240,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7549,
											"end": 7718,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7549,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7549,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7549,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7549,
											"end": 7718,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7549,
											"end": 7718,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7549,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7549,
											"end": 7718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7549,
											"end": 7718,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7549,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7663,
											"end": 7670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7549,
											"end": 7718,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6508,
											"end": 6610,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6508,
											"end": 6610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6508,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6508,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6508,
											"end": 6610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8187,
											"end": 8380,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8187,
											"end": 8380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8187,
											"end": 8380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8187,
											"end": 8380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8187,
											"end": 8380,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8187,
											"end": 8380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8187,
											"end": 8380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8187,
											"end": 8380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8187,
											"end": 8380,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8187,
											"end": 8380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8316,
											"end": 8323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8357,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8187,
											"end": 8380,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6351,
											"end": 6364,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6383,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8633,
											"end": 8637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8653,
											"end": 8692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8676,
											"end": 8683,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8685,
											"end": 8691,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8653,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8653,
											"end": 8692,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8653,
											"end": 8692,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8653,
											"end": 8692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8709,
											"end": 8713,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9323,
											"end": 9327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9339,
											"end": 9375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9349,
											"end": 9355,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9357,
											"end": 9366,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9368,
											"end": 9374,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9339,
											"end": 9348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9339,
											"end": 9375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9339,
											"end": 9375,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9339,
											"end": 9375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9386,
											"end": 9410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9424,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9446,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9446,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9446,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9477,
											"end": 9503,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9477,
											"end": 9503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9477,
											"end": 9503,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9477,
											"end": 9503,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3452,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3491,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3627,
											"end": 3646,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3627,
											"end": 3646,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 9612,
											"end": 9618,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9653,
											"end": 9659,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9634,
											"end": 9650,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9634,
											"end": 9659,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 9603,
											"end": 9660,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9603,
											"end": 9660,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 9603,
											"end": 9660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9688,
											"end": 9692,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9688,
											"end": 9692,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10206,
											"end": 10210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10306,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10295,
											"end": 10329,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10206,
											"end": 10210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10206,
											"end": 10210,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10226,
											"end": 10352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 10226,
											"end": 10352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10274,
											"end": 10281,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10274,
											"end": 10281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 10295,
											"end": 10342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10342,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 10295,
											"end": 10342,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10295,
											"end": 10342,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 10295,
											"end": 10342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10226,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10226,
											"end": 10352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6508,
											"end": 6610,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6508,
											"end": 6610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6564,
											"end": 6577,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6589,
											"end": 6603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6589,
											"end": 6603,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6589,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6589,
											"end": 6603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6589,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6589,
											"end": 6603,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10984,
											"end": 10988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11031,
											"end": 11056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11042,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11031,
											"end": 11056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11031,
											"end": 11056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11031,
											"end": 11056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11056,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11056,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11031,
											"end": 11065,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11065,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11065,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11065,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11065,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11065,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11131,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11131,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11131,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11075,
											"end": 11194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 11075,
											"end": 11194,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11075,
											"end": 11194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11075,
											"end": 11194,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11075,
											"end": 11194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11075,
											"end": 11194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4672,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11075,
											"end": 11194,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11075,
											"end": 11194,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11075,
											"end": 11194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4682,
											"end": 4712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 4782,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4721,
											"end": 4783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4792,
											"end": 4827,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4863,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4844,
											"end": 4863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11075,
											"end": 11194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4468,
											"end": 4869,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11075,
											"end": 11194,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 11075,
											"end": 11194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11228,
											"end": 11295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11251,
											"end": 11258,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 11294,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11260,
											"end": 11276,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11260,
											"end": 11294,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11228,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11228,
											"end": 11295,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11228,
											"end": 11295,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 11228,
											"end": 11295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11323,
											"end": 11327,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11323,
											"end": 11327,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8039,
											"end": 8043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8059,
											"end": 8101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8083,
											"end": 8092,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8094,
											"end": 8100,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8059,
											"end": 8101,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14539,
											"end": 14909,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 14539,
											"end": 14909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14670,
											"end": 14689,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14670,
											"end": 14689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14662,
											"end": 14730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14662,
											"end": 14730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14662,
											"end": 14730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14662,
											"end": 14730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14662,
											"end": 14730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14662,
											"end": 14730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4267,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14662,
											"end": 14730,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14662,
											"end": 14730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14662,
											"end": 14730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 4268,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4304,
											"end": 4306,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4277,
											"end": 4307,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4343,
											"end": 4377,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4387,
											"end": 4421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4438,
											"end": 4457,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4438,
											"end": 4457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14662,
											"end": 14730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4063,
											"end": 4463,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14662,
											"end": 14730,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14662,
											"end": 14730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14748,
											"end": 14769,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14748,
											"end": 14769,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 14740,
											"end": 14808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14740,
											"end": 14808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14740,
											"end": 14808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2642,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14740,
											"end": 14808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14740,
											"end": 14808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2681,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2682,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 2752,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2691,
											"end": 2753,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2794,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14740,
											"end": 14808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2438,
											"end": 2836,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14740,
											"end": 14808,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 14740,
											"end": 14808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14830,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14855,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14855,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14909,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11808,
											"end": 12555,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 11808,
											"end": 12555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11943,
											"end": 11963,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11943,
											"end": 11963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11935,
											"end": 12005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11935,
											"end": 12005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11935,
											"end": 12005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11935,
											"end": 12005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11935,
											"end": 12005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11935,
											"end": 12005,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 3861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11935,
											"end": 12005,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11935,
											"end": 12005,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11935,
											"end": 12005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3841,
											"end": 3862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3898,
											"end": 3900,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3901,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 3971,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3910,
											"end": 3972,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3981,
											"end": 4016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4033,
											"end": 4052,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4033,
											"end": 4052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11935,
											"end": 12005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3657,
											"end": 4058,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11935,
											"end": 12005,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11935,
											"end": 12005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12023,
											"end": 12046,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12023,
											"end": 12046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12015,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 12015,
											"end": 12086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12015,
											"end": 12086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12015,
											"end": 12086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12015,
											"end": 12086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12015,
											"end": 12086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2238,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12015,
											"end": 12086,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12015,
											"end": 12086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12015,
											"end": 12086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2239,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2277,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2348,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2349,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12015,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2034,
											"end": 2433,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12015,
											"end": 12086,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 12015,
											"end": 12086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12155,
											"end": 12176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12250,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12250,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12206,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12206,
											"end": 12314,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12206,
											"end": 12314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12206,
											"end": 12314,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12206,
											"end": 12314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12206,
											"end": 12314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3043,
											"end": 3045,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12206,
											"end": 12314,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12206,
											"end": 12314,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12206,
											"end": 12314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3155,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3201,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12206,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2841,
											"end": 3243,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12206,
											"end": 12314,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12206,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12368,
											"end": 12390,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12368,
											"end": 12390,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12368,
											"end": 12390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12390,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12430,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12430,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12390,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12390,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12390,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12473,
											"end": 12482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12465,
											"end": 12471,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12484,
											"end": 12490,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5008,
											"end": 5010,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4874,
											"end": 5051,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 12555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11808,
											"end": 12555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11808,
											"end": 12555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11808,
											"end": 12555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11808,
											"end": 12555,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1591,
											"end": 1600,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1640,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1641,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1841,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1783,
											"end": 1809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1937,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 1924,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 1933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1938,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1942,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1992,
											"end": 2007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1988,
											"end": 2017,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5245,
											"end": 5470,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5245,
											"end": 5470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5288,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5316,
											"end": 5317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5318,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5309,
											"end": 5310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5306,
											"end": 5319,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5371,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5356,
											"end": 5359,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5352,
											"end": 5372,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5349,
											"end": 5350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5342,
											"end": 5373,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5396,
											"end": 5400,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5393,
											"end": 5394,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5386,
											"end": 5401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5428,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5421,
											"end": 5422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5455,
											"end": 5464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5455,
											"end": 5464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5470,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5554,
											"end": 5555,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5672,
											"end": 5676,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 5664,
											"end": 5670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5677,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5650,
											"end": 5677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5650,
											"end": 5677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5725,
											"end": 5727,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5717,
											"end": 5723,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5714,
											"end": 5728,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5691,
											"end": 5729,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5771,
											"end": 5781,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5766,
											"end": 5769,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5762,
											"end": 5782,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5759,
											"end": 5760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5752,
											"end": 5783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5806,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5803,
											"end": 5804,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5796,
											"end": 5811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5838,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5831,
											"end": 5832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5824,
											"end": 5839,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/powerful-erc20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/powerful-erc20.sol\":{\"keccak256\":\"0x9570db30440d0d877f8e4b5076cb1328db2af6d84f27ae1a4cffc56db63172d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58817e6239d1d81a70605d4bbfc1ea495aadcb3b46647a2575aeb4484b0d60a3\",\"dweb:/ipfs/QmcWsNLsEniffCVQRHwMTN6Hf8VZmPLbCpdn8krRrrQn1M\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/powerful-erc20.sol\":\"ERC20Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/powerful-erc20.sol\":{\"keccak256\":\"0x9570db30440d0d877f8e4b5076cb1328db2af6d84f27ae1a4cffc56db63172d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58817e6239d1d81a70605d4bbfc1ea495aadcb3b46647a2575aeb4484b0d60a3\",\"dweb:/ipfs/QmcWsNLsEniffCVQRHwMTN6Hf8VZmPLbCpdn8krRrrQn1M\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Capped": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that adds a cap to the supply of tokens.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"constructor": {
								"details": "Sets the value of the `cap`. This value is immutable, it can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that adds a cap to the supply of tokens.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"constructor\":{\"details\":\"Sets the value of the `cap`. This value is immutable, it can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/powerful-erc20.sol\":\"ERC20Capped\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/powerful-erc20.sol\":{\"keccak256\":\"0x9570db30440d0d877f8e4b5076cb1328db2af6d84f27ae1a4cffc56db63172d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58817e6239d1d81a70605d4bbfc1ea495aadcb3b46647a2575aeb4484b0d60a3\",\"dweb:/ipfs/QmcWsNLsEniffCVQRHwMTN6Hf8VZmPLbCpdn8krRrrQn1M\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Decimals": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the ERC20Decimals. Extension of {ERC20} that adds decimals storage slot.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the value of the `decimals`. This value is immutable, it can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"title": "ERC20Decimals",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20Decimals. Extension of {ERC20} that adds decimals storage slot.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the value of the `decimals`. This value is immutable, it can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"title\":\"ERC20Decimals\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/powerful-erc20.sol\":\"ERC20Decimals\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/powerful-erc20.sol\":{\"keccak256\":\"0x9570db30440d0d877f8e4b5076cb1328db2af6d84f27ae1a4cffc56db63172d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58817e6239d1d81a70605d4bbfc1ea495aadcb3b46647a2575aeb4484b0d60a3\",\"dweb:/ipfs/QmcWsNLsEniffCVQRHwMTN6Hf8VZmPLbCpdn8krRrrQn1M\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Mintable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "MintFinished",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finishMinting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintingFinished",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the ERC20Mintable. Extension of {ERC20} that adds a minting behaviour.",
						"events": {
							"MintFinished()": {
								"details": "Emitted during finish minting"
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"finishMinting()": {
								"details": "Function to stop minting new tokens. WARNING: it allows everyone to finish minting. Access controls MUST be defined in derived contracts."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(address,uint256)": {
								"details": "Function to mint tokens. WARNING: it allows everyone to mint new tokens. Access controls MUST be defined in derived contracts.",
								"params": {
									"account": "The address that will receive the minted tokens",
									"amount": "The amount of tokens to mint"
								}
							},
							"mintingFinished()": {
								"returns": {
									"_0": "if minting is finished or not."
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"title": "ERC20Mintable",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"finishMinting()": "7d64bcb4",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"mintingFinished()": "05d2035b",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20Mintable. Extension of {ERC20} that adds a minting behaviour.\",\"events\":{\"MintFinished()\":{\"details\":\"Emitted during finish minting\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"finishMinting()\":{\"details\":\"Function to stop minting new tokens. WARNING: it allows everyone to finish minting. Access controls MUST be defined in derived contracts.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens. WARNING: it allows everyone to mint new tokens. Access controls MUST be defined in derived contracts.\",\"params\":{\"account\":\"The address that will receive the minted tokens\",\"amount\":\"The amount of tokens to mint\"}},\"mintingFinished()\":{\"returns\":{\"_0\":\"if minting is finished or not.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"title\":\"ERC20Mintable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/powerful-erc20.sol\":\"ERC20Mintable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/powerful-erc20.sol\":{\"keccak256\":\"0x9570db30440d0d877f8e4b5076cb1328db2af6d84f27ae1a4cffc56db63172d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58817e6239d1d81a70605d4bbfc1ea495aadcb3b46647a2575aeb4484b0d60a3\",\"dweb:/ipfs/QmcWsNLsEniffCVQRHwMTN6Hf8VZmPLbCpdn8krRrrQn1M\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/powerful-erc20.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/powerful-erc20.sol\":{\"keccak256\":\"0x9570db30440d0d877f8e4b5076cb1328db2af6d84f27ae1a4cffc56db63172d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58817e6239d1d81a70605d4bbfc1ea495aadcb3b46647a2575aeb4484b0d60a3\",\"dweb:/ipfs/QmcWsNLsEniffCVQRHwMTN6Hf8VZmPLbCpdn8krRrrQn1M\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for a Payable Token contract as defined in  https://eips.ethereum.org/EIPS/eip-1363",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"params": {
									"amount": "uint256 The amount of tokens to be spent",
									"spender": "address The address which will spend the funds"
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"params": {
									"amount": "uint256 The amount of tokens to be spent",
									"data": "bytes Additional data with no specified format, sent in call to `spender`",
									"spender": "address The address which will spend the funds"
								}
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"params": {
									"amount": "uint256 The amount of tokens to be transferred",
									"recipient": "address The address which you want to transfer to"
								},
								"returns": {
									"_0": "true unless throwing"
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"params": {
									"amount": "uint256 The amount of tokens to be transferred",
									"data": "bytes Additional data with no specified format, sent in call to `recipient`",
									"recipient": "address The address which you want to transfer to"
								},
								"returns": {
									"_0": "true unless throwing"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"params": {
									"amount": "uint256 The amount of tokens to be transferred",
									"recipient": "address The address which you want to transfer to",
									"sender": "address The address which you want to send tokens from"
								},
								"returns": {
									"_0": "true unless throwing"
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"params": {
									"amount": "uint256 The amount of tokens to be transferred",
									"data": "bytes Additional data with no specified format, sent in call to `recipient`",
									"recipient": "address The address which you want to transfer to",
									"sender": "address The address which you want to send tokens from"
								},
								"returns": {
									"_0": "true unless throwing"
								}
							}
						},
						"title": "IERC1363 Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for a Payable Token contract as defined in  https://eips.ethereum.org/EIPS/eip-1363\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"params\":{\"amount\":\"uint256 The amount of tokens to be spent\",\"spender\":\"address The address which will spend the funds\"}},\"approveAndCall(address,uint256,bytes)\":{\"params\":{\"amount\":\"uint256 The amount of tokens to be spent\",\"data\":\"bytes Additional data with no specified format, sent in call to `spender`\",\"spender\":\"address The address which will spend the funds\"}},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"params\":{\"amount\":\"uint256 The amount of tokens to be transferred\",\"recipient\":\"address The address which you want to transfer to\"},\"returns\":{\"_0\":\"true unless throwing\"}},\"transferAndCall(address,uint256,bytes)\":{\"params\":{\"amount\":\"uint256 The amount of tokens to be transferred\",\"data\":\"bytes Additional data with no specified format, sent in call to `recipient`\",\"recipient\":\"address The address which you want to transfer to\"},\"returns\":{\"_0\":\"true unless throwing\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"params\":{\"amount\":\"uint256 The amount of tokens to be transferred\",\"recipient\":\"address The address which you want to transfer to\",\"sender\":\"address The address which you want to send tokens from\"},\"returns\":{\"_0\":\"true unless throwing\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"params\":{\"amount\":\"uint256 The amount of tokens to be transferred\",\"data\":\"bytes Additional data with no specified format, sent in call to `recipient`\",\"recipient\":\"address The address which you want to transfer to\",\"sender\":\"address The address which you want to send tokens from\"},\"returns\":{\"_0\":\"true unless throwing\"}}},\"title\":\"IERC1363 Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approveAndCall(address,uint256)\":{\"notice\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender and then call `onApprovalReceived` on spender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\"},\"approveAndCall(address,uint256,bytes)\":{\"notice\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender and then call `onApprovalReceived` on spender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\"},\"transferAndCall(address,uint256)\":{\"notice\":\"Transfer tokens from `msg.sender` to another address and then call `onTransferReceived` on receiver\"},\"transferAndCall(address,uint256,bytes)\":{\"notice\":\"Transfer tokens from `msg.sender` to another address and then call `onTransferReceived` on receiver\"},\"transferFromAndCall(address,address,uint256)\":{\"notice\":\"Transfer tokens from one address to another and then call `onTransferReceived` on receiver\"},\"transferFromAndCall(address,address,uint256,bytes)\":{\"notice\":\"Transfer tokens from one address to another and then call `onTransferReceived` on receiver\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/powerful-erc20.sol\":\"IERC1363\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/powerful-erc20.sol\":{\"keccak256\":\"0x9570db30440d0d877f8e4b5076cb1328db2af6d84f27ae1a4cffc56db63172d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58817e6239d1d81a70605d4bbfc1ea495aadcb3b46647a2575aeb4484b0d60a3\",\"dweb:/ipfs/QmcWsNLsEniffCVQRHwMTN6Hf8VZmPLbCpdn8krRrrQn1M\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"approveAndCall(address,uint256)": {
								"notice": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender and then call `onApprovalReceived` on spender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729"
							},
							"approveAndCall(address,uint256,bytes)": {
								"notice": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender and then call `onApprovalReceived` on spender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729"
							},
							"transferAndCall(address,uint256)": {
								"notice": "Transfer tokens from `msg.sender` to another address and then call `onTransferReceived` on receiver"
							},
							"transferAndCall(address,uint256,bytes)": {
								"notice": "Transfer tokens from `msg.sender` to another address and then call `onTransferReceived` on receiver"
							},
							"transferFromAndCall(address,address,uint256)": {
								"notice": "Transfer tokens from one address to another and then call `onTransferReceived` on receiver"
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"notice": "Transfer tokens from one address to another and then call `onTransferReceived` on receiver"
							}
						},
						"version": 1
					}
				},
				"IERC1363Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onTransferReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support transferAndCall or transferFromAndCall  from ERC1363 token contracts as defined in  https://eips.ethereum.org/EIPS/eip-1363",
						"kind": "dev",
						"methods": {
							"onTransferReceived(address,address,uint256,bytes)": {
								"details": "Any ERC1363 smart contract calls this function on the recipient after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Note: the token contract address is always the message sender.",
								"params": {
									"amount": "uint256 The amount of tokens transferred",
									"data": "bytes Additional data with no specified format",
									"operator": "address The address which called `transferAndCall` or `transferFromAndCall` function",
									"sender": "address The address which are token transferred from"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` unless throwing"
								}
							}
						},
						"title": "IERC1363Receiver Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onTransferReceived(address,address,uint256,bytes)": "88a7ca5c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTransferReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support transferAndCall or transferFromAndCall  from ERC1363 token contracts as defined in  https://eips.ethereum.org/EIPS/eip-1363\",\"kind\":\"dev\",\"methods\":{\"onTransferReceived(address,address,uint256,bytes)\":{\"details\":\"Any ERC1363 smart contract calls this function on the recipient after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Note: the token contract address is always the message sender.\",\"params\":{\"amount\":\"uint256 The amount of tokens transferred\",\"data\":\"bytes Additional data with no specified format\",\"operator\":\"address The address which called `transferAndCall` or `transferFromAndCall` function\",\"sender\":\"address The address which are token transferred from\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onTransferReceived(address,address,uint256,bytes)\\\"))` unless throwing\"}}},\"title\":\"IERC1363Receiver Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onTransferReceived(address,address,uint256,bytes)\":{\"notice\":\"Handle the receipt of ERC1363 tokens\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/powerful-erc20.sol\":\"IERC1363Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/powerful-erc20.sol\":{\"keccak256\":\"0x9570db30440d0d877f8e4b5076cb1328db2af6d84f27ae1a4cffc56db63172d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58817e6239d1d81a70605d4bbfc1ea495aadcb3b46647a2575aeb4484b0d60a3\",\"dweb:/ipfs/QmcWsNLsEniffCVQRHwMTN6Hf8VZmPLbCpdn8krRrrQn1M\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"onTransferReceived(address,address,uint256,bytes)": {
								"notice": "Handle the receipt of ERC1363 tokens"
							}
						},
						"version": 1
					}
				},
				"IERC1363Spender": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onApprovalReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support approveAndCall  from ERC1363 token contracts as defined in  https://eips.ethereum.org/EIPS/eip-1363",
						"kind": "dev",
						"methods": {
							"onApprovalReceived(address,uint256,bytes)": {
								"details": "Any ERC1363 smart contract calls this function on the recipient after an `approve`. This function MAY throw to revert and reject the approval. Return of other than the magic value MUST result in the transaction being reverted. Note: the token contract address is always the message sender.",
								"params": {
									"amount": "uint256 The amount of tokens to be spent",
									"data": "bytes Additional data with no specified format",
									"sender": "address The address which called `approveAndCall` function"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onApprovalReceived(address,uint256,bytes)\"))` unless throwing"
								}
							}
						},
						"title": "IERC1363Spender Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onApprovalReceived(address,uint256,bytes)": "7b04a2d0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onApprovalReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support approveAndCall  from ERC1363 token contracts as defined in  https://eips.ethereum.org/EIPS/eip-1363\",\"kind\":\"dev\",\"methods\":{\"onApprovalReceived(address,uint256,bytes)\":{\"details\":\"Any ERC1363 smart contract calls this function on the recipient after an `approve`. This function MAY throw to revert and reject the approval. Return of other than the magic value MUST result in the transaction being reverted. Note: the token contract address is always the message sender.\",\"params\":{\"amount\":\"uint256 The amount of tokens to be spent\",\"data\":\"bytes Additional data with no specified format\",\"sender\":\"address The address which called `approveAndCall` function\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onApprovalReceived(address,uint256,bytes)\\\"))` unless throwing\"}}},\"title\":\"IERC1363Spender Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onApprovalReceived(address,uint256,bytes)\":{\"notice\":\"Handle the approval of ERC1363 tokens\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/powerful-erc20.sol\":\"IERC1363Spender\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/powerful-erc20.sol\":{\"keccak256\":\"0x9570db30440d0d877f8e4b5076cb1328db2af6d84f27ae1a4cffc56db63172d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58817e6239d1d81a70605d4bbfc1ea495aadcb3b46647a2575aeb4484b0d60a3\",\"dweb:/ipfs/QmcWsNLsEniffCVQRHwMTN6Hf8VZmPLbCpdn8krRrrQn1M\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"onApprovalReceived(address,uint256,bytes)": {
								"notice": "Handle the approval of ERC1363 tokens"
							}
						},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/powerful-erc20.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/powerful-erc20.sol\":{\"keccak256\":\"0x9570db30440d0d877f8e4b5076cb1328db2af6d84f27ae1a4cffc56db63172d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58817e6239d1d81a70605d4bbfc1ea495aadcb3b46647a2575aeb4484b0d60a3\",\"dweb:/ipfs/QmcWsNLsEniffCVQRHwMTN6Hf8VZmPLbCpdn8krRrrQn1M\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/powerful-erc20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/powerful-erc20.sol\":{\"keccak256\":\"0x9570db30440d0d877f8e4b5076cb1328db2af6d84f27ae1a4cffc56db63172d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58817e6239d1d81a70605d4bbfc1ea495aadcb3b46647a2575aeb4484b0d60a3\",\"dweb:/ipfs/QmcWsNLsEniffCVQRHwMTN6Hf8VZmPLbCpdn8krRrrQn1M\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/powerful-erc20.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/powerful-erc20.sol\":{\"keccak256\":\"0x9570db30440d0d877f8e4b5076cb1328db2af6d84f27ae1a4cffc56db63172d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58817e6239d1d81a70605d4bbfc1ea495aadcb3b46647a2575aeb4484b0d60a3\",\"dweb:/ipfs/QmcWsNLsEniffCVQRHwMTN6Hf8VZmPLbCpdn8krRrrQn1M\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/powerful-erc20.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/powerful-erc20.sol\":{\"keccak256\":\"0x9570db30440d0d877f8e4b5076cb1328db2af6d84f27ae1a4cffc56db63172d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58817e6239d1d81a70605d4bbfc1ea495aadcb3b46647a2575aeb4484b0d60a3\",\"dweb:/ipfs/QmcWsNLsEniffCVQRHwMTN6Hf8VZmPLbCpdn8krRrrQn1M\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"PowerfulERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals_",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "cap_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "initialBalance_",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "MintFinished",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finishMinting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintingFinished",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "recoverERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the PowerfulERC20",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"approveAndCall(address,uint256)": {
								"details": "Approve spender to transfer tokens and then execute a callback on recipient.",
								"params": {
									"amount": "The amount allowed to be transferred",
									"spender": "The address allowed to transfer to"
								},
								"returns": {
									"_0": "A boolean that indicates if the operation was successful."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Approve spender to transfer tokens and then execute a callback on recipient.",
								"params": {
									"amount": "The amount allowed to be transferred.",
									"data": "Additional data with no specified format.",
									"spender": "The address allowed to transfer to."
								},
								"returns": {
									"_0": "A boolean that indicates if the operation was successful."
								}
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"finishMinting()": {
								"details": "Function to stop minting new tokens. WARNING: it allows everyone to finish minting. Access controls MUST be defined in derived contracts."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(address,uint256)": {
								"details": "Function to mint tokens. WARNING: it allows everyone to mint new tokens. Access controls MUST be defined in derived contracts.",
								"params": {
									"account": "The address that will receive the minted tokens",
									"amount": "The amount of tokens to mint"
								}
							},
							"mintingFinished()": {
								"returns": {
									"_0": "if minting is finished or not."
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"recoverERC20(address,uint256)": {
								"details": "Remember that only owner can call so be careful when use on contracts generated from other contracts.",
								"params": {
									"tokenAddress": "The token contract address",
									"tokenAmount": "Number of tokens to be sent"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferAndCall(address,uint256)": {
								"details": "Transfer tokens to a specified address and then execute a callback on recipient.",
								"params": {
									"amount": "The amount to be transferred.",
									"recipient": "The address to transfer to."
								},
								"returns": {
									"_0": "A boolean that indicates if the operation was successful."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Transfer tokens to a specified address and then execute a callback on recipient.",
								"params": {
									"amount": "The amount to be transferred",
									"data": "Additional data with no specified format",
									"recipient": "The address to transfer to"
								},
								"returns": {
									"_0": "A boolean that indicates if the operation was successful."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Transfer tokens from one address to another and then execute a callback on recipient.",
								"params": {
									"amount": "The amount of tokens to be transferred",
									"recipient": "The address which you want to transfer to",
									"sender": "The address which you want to send tokens from"
								},
								"returns": {
									"_0": "A boolean that indicates if the operation was successful."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Transfer tokens from one address to another and then execute a callback on recipient.",
								"params": {
									"amount": "The amount of tokens to be transferred",
									"data": "Additional data with no specified format",
									"recipient": "The address which you want to transfer to",
									"sender": "The address which you want to send tokens from"
								},
								"returns": {
									"_0": "A boolean that indicates if the operation was successful."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "PowerfulERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/powerful-erc20.sol\":59699:61453  contract PowerfulERC20 is... */\n  0xc0\n  0x40\n  dup2\n  swap1\n  mstore\n    /* \"contracts/powerful-erc20.sol\":45556:45593  bool private _mintingFinished = false */\n  0x05\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"contracts/powerful-erc20.sol\":59846:60344  constructor(... */\n  bytecodeSize\n  codesize\n  dup2\n  swap1\n  sub\n  swap1\n  dup2\n  swap1\n    /* \"contracts/powerful-erc20.sol\":59699:61453  contract PowerfulERC20 is... */\n  dup4\n    /* \"contracts/powerful-erc20.sol\":59846:60344  constructor(... */\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"contracts/powerful-erc20.sol\":60071:60075  cap_ */\n  dup2\n    /* \"contracts/powerful-erc20.sol\":60048:60057  decimals_ */\n  dup4\n    /* \"contracts/powerful-erc20.sol\":60018:60023  name_ */\n  dup7\n    /* \"contracts/powerful-erc20.sol\":60025:60032  symbol_ */\n  dup7\n    /* \"contracts/powerful-erc20.sol\":6193:6198  name_ */\n  dup2\n    /* \"contracts/powerful-erc20.sol\":6185:6190  _name */\n  0x03\n    /* \"contracts/powerful-erc20.sol\":6185:6198  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/powerful-erc20.sol\":6208:6225  _symbol = symbol_ */\n  dup1\n  mload\n  tag_12\n  swap1\n    /* \"contracts/powerful-erc20.sol\":6208:6215  _symbol */\n  0x04\n  swap1\n    /* \"contracts/powerful-erc20.sol\":6208:6225  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n  pop\n  pop\n    /* \"contracts/powerful-erc20.sol\":45118:45139  _decimals = decimals_ */\n  0xf8\n  shl\n  0xff00000000000000000000000000000000000000000000000000000000000000\n  and\n  0x80\n  mstore\n    /* \"contracts/powerful-erc20.sol\":18024:18032  cap_ > 0 */\n  dup1\n    /* \"contracts/powerful-erc20.sol\":18016:18058  require(cap_ > 0, \"ERC20Capped: cap is 0\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1947:1949   */\n  0x20\n    /* \"contracts/powerful-erc20.sol\":18016:18058  require(cap_ > 0, \"ERC20Capped: cap is 0\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1929:1950   */\n  mstore\n    /* \"#utility.yul\":1986:1988   */\n  0x15\n    /* \"#utility.yul\":1966:1984   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1959:1989   */\n  mstore\n    /* \"#utility.yul\":2025:2048   */\n  0x45524332304361707065643a2063617020697320300000000000000000000000\n    /* \"#utility.yul\":2005:2023   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1998:2049   */\n  mstore\n    /* \"#utility.yul\":2066:2084   */\n  0x64\n  add\n    /* \"contracts/powerful-erc20.sol\":18016:18058  require(cap_ > 0, \"ERC20Capped: cap is 0\") */\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"contracts/powerful-erc20.sol\":18068:18079  _cap = cap_ */\n  0xa0\n  mstore\n    /* \"contracts/powerful-erc20.sol\":42612:42635  _setOwner(_msgSender()) */\n  tag_19\n    /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n  caller\n    /* \"contracts/powerful-erc20.sol\":42612:42621  _setOwner */\n  tag_22\n    /* \"contracts/powerful-erc20.sol\":42612:42635  _setOwner(_msgSender()) */\n  jump\t// in\ntag_19:\n    /* \"contracts/powerful-erc20.sol\":59266:59310  _setupRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  tag_24\n    /* \"contracts/powerful-erc20.sol\":53806:53810  0x00 */\n  0x00\n    /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n  caller\n    /* \"contracts/powerful-erc20.sol\":59266:59276  _setupRole */\n  tag_26\n    /* \"contracts/powerful-erc20.sol\":59266:59310  _setupRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  jump\t// in\ntag_24:\n    /* \"contracts/powerful-erc20.sol\":59320:59357  _setupRole(MINTER_ROLE, _msgSender()) */\n  tag_27\n    /* \"contracts/powerful-erc20.sol\":59216:59235  keccak256(\"MINTER\") */\n  0xf0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc9\n    /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n  caller\n    /* \"contracts/powerful-erc20.sol\":59266:59276  _setupRole */\n  tag_26\n    /* \"contracts/powerful-erc20.sol\":59266:59310  _setupRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  jump\t// in\n    /* \"contracts/powerful-erc20.sol\":59320:59357  _setupRole(MINTER_ROLE, _msgSender()) */\ntag_27:\n    /* \"contracts/powerful-erc20.sol\":60251:60255  cap_ */\n  dup2\n    /* \"contracts/powerful-erc20.sol\":60232:60247  initialBalance_ */\n  dup2\n    /* \"contracts/powerful-erc20.sol\":60232:60255  initialBalance_ <= cap_ */\n  gt\n  iszero\n    /* \"contracts/powerful-erc20.sol\":60224:60285  require(initialBalance_ <= cap_, \"ERC20Capped: cap exceeded\") */\n  tag_30\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2297:2299   */\n  0x20\n    /* \"contracts/powerful-erc20.sol\":60224:60285  require(initialBalance_ <= cap_, \"ERC20Capped: cap exceeded\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2279:2300   */\n  mstore\n    /* \"#utility.yul\":2336:2338   */\n  0x19\n    /* \"#utility.yul\":2316:2334   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2309:2339   */\n  mstore\n    /* \"#utility.yul\":2375:2402   */\n  0x45524332304361707065643a2063617020657863656564656400000000000000\n    /* \"#utility.yul\":2355:2373   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2348:2403   */\n  mstore\n    /* \"#utility.yul\":2420:2438   */\n  0x64\n  add\n    /* \"contracts/powerful-erc20.sol\":60224:60285  require(initialBalance_ <= cap_, \"ERC20Capped: cap exceeded\") */\n  tag_16\n    /* \"#utility.yul\":2095:2444   */\n  jump\n    /* \"contracts/powerful-erc20.sol\":60224:60285  require(initialBalance_ <= cap_, \"ERC20Capped: cap exceeded\") */\ntag_30:\n    /* \"contracts/powerful-erc20.sol\":60295:60337  ERC20._mint(_msgSender(), initialBalance_) */\n  tag_33\n    /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n  caller\n    /* \"contracts/powerful-erc20.sol\":60321:60336  initialBalance_ */\n  dup3\n    /* \"contracts/powerful-erc20.sol\":60295:60306  ERC20._mint */\n  or(tag_0_180, shl(0x20, tag_35))\n    /* \"contracts/powerful-erc20.sol\":60295:60337  ERC20._mint(_msgSender(), initialBalance_) */\n  0x20\n  shr\n  jump\t// in\ntag_33:\n    /* \"contracts/powerful-erc20.sol\":59846:60344  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/powerful-erc20.sol\":59699:61453  contract PowerfulERC20 is... */\n  jump(tag_74)\n    /* \"contracts/powerful-erc20.sol\":43820:43989  function _setOwner(address newOwner) private {... */\ntag_22:\n    /* \"contracts/powerful-erc20.sol\":43894:43900  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/powerful-erc20.sol\":43910:43927  _owner = newOwner */\n  dup4\n  dup2\n  and\n    /* \"contracts/powerful-erc20.sol\":43894:43900  _owner */\n  0x0100\n    /* \"contracts/powerful-erc20.sol\":43910:43927  _owner = newOwner */\n  dup2\n  dup2\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  dup6\n  and\n  or\n  swap1\n  swap5\n  sstore\n    /* \"contracts/powerful-erc20.sol\":43942:43982  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/powerful-erc20.sol\":43894:43900  _owner */\n  swap4\n  swap1\n  swap3\n  div\n  and\n  swap2\n  dup3\n  swap1\n    /* \"contracts/powerful-erc20.sol\":43942:43982  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/powerful-erc20.sol\":43875:43891  address oldOwner */\n  0x00\n  swap1\n    /* \"contracts/powerful-erc20.sol\":43942:43982  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/powerful-erc20.sol\":43865:43989  {... */\n  pop\n    /* \"contracts/powerful-erc20.sol\":43820:43989  function _setOwner(address newOwner) private {... */\n  pop\n  jump\t// out\n    /* \"contracts/powerful-erc20.sol\":58131:58241  function _setupRole(bytes32 role, address account) internal virtual {... */\ntag_26:\n    /* \"contracts/powerful-erc20.sol\":58209:58234  _grantRole(role, account) */\n  tag_40\n    /* \"contracts/powerful-erc20.sol\":58220:58224  role */\n  dup3\n    /* \"contracts/powerful-erc20.sol\":58226:58233  account */\n  dup3\n    /* \"contracts/powerful-erc20.sol\":58209:58219  _grantRole */\n  tag_41\n    /* \"contracts/powerful-erc20.sol\":58209:58234  _grantRole(role, account) */\n  jump\t// in\ntag_40:\n    /* \"contracts/powerful-erc20.sol\":58131:58241  function _setupRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/powerful-erc20.sol\":12831:13220  function _mint(address account, uint256 amount) internal virtual {... */\ntag_35:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/powerful-erc20.sol\":12914:12935  account != address(0) */\n  dup3\n  and\n    /* \"contracts/powerful-erc20.sol\":12906:12971  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_43\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2651:2653   */\n  0x20\n    /* \"contracts/powerful-erc20.sol\":12906:12971  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2633:2654   */\n  mstore\n    /* \"#utility.yul\":2690:2692   */\n  0x1f\n    /* \"#utility.yul\":2670:2688   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2663:2693   */\n  mstore\n    /* \"#utility.yul\":2729:2762   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":2709:2727   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2702:2763   */\n  mstore\n    /* \"#utility.yul\":2780:2798   */\n  0x64\n  add\n    /* \"contracts/powerful-erc20.sol\":12906:12971  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_16\n    /* \"#utility.yul\":2449:2804   */\n  jump\n    /* \"contracts/powerful-erc20.sol\":12906:12971  require(account != address(0), \"ERC20: mint to the zero address\") */\ntag_43:\n    /* \"contracts/powerful-erc20.sol\":13058:13064  amount */\n  dup1\n    /* \"contracts/powerful-erc20.sol\":13042:13054  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/powerful-erc20.sol\":13042:13064  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_48\n  swap2\n  swap1\n  tag_49\n  jump\t// in\ntag_48:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/powerful-erc20.sol\":13074:13092  _balances[account] */\n  dup3\n  and\n    /* \"contracts/powerful-erc20.sol\":13074:13083  _balances */\n  0x00\n    /* \"contracts/powerful-erc20.sol\":13074:13092  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"contracts/powerful-erc20.sol\":13074:13102  _balances[account] += amount */\n  dup1\n  sload\n    /* \"contracts/powerful-erc20.sol\":13096:13102  amount */\n  dup4\n  swap3\n    /* \"contracts/powerful-erc20.sol\":13074:13083  _balances */\n  swap1\n    /* \"contracts/powerful-erc20.sol\":13074:13102  _balances[account] += amount */\n  tag_50\n  swap1\n    /* \"contracts/powerful-erc20.sol\":13096:13102  amount */\n  dup5\n  swap1\n    /* \"contracts/powerful-erc20.sol\":13074:13102  _balances[account] += amount */\n  tag_49\n  jump\t// in\ntag_50:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"contracts/powerful-erc20.sol\":13117:13154  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":2955:2980   */\n  dup2\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/powerful-erc20.sol\":13117:13154  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"contracts/powerful-erc20.sol\":13134:13135  0 */\n  0x00\n  swap1\n    /* \"contracts/powerful-erc20.sol\":13117:13154  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":2943:2945   */\n  0x20\n    /* \"#utility.yul\":2928:2946   */\n  add\n    /* \"contracts/powerful-erc20.sol\":13117:13154  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/powerful-erc20.sol\":58131:58241  function _setupRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/powerful-erc20.sol\":58619:58843  function _grantRole(bytes32 role, address account) private {... */\ntag_41:\n    /* \"contracts/powerful-erc20.sol\":54821:54825  bool */\n  0x00\n    /* \"contracts/powerful-erc20.sol\":54848:54860  _roles[role] */\n  dup3\n  dup2\n  mstore\n    /* \"contracts/powerful-erc20.sol\":54848:54854  _roles */\n  0x06\n    /* \"contracts/powerful-erc20.sol\":54848:54860  _roles[role] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/powerful-erc20.sol\":54848:54877  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n    /* \"contracts/powerful-erc20.sol\":58688:58837  if (!hasRole(role, account)) {... */\n  tag_40\n  jumpi\n    /* \"contracts/powerful-erc20.sol\":58731:58743  _roles[role] */\n  0x00\n  dup3\n  dup2\n  mstore\n    /* \"contracts/powerful-erc20.sol\":58731:58737  _roles */\n  0x06\n    /* \"contracts/powerful-erc20.sol\":58731:58743  _roles[role] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/powerful-erc20.sol\":58731:58760  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"contracts/powerful-erc20.sol\":58731:58767  _roles[role].members[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/powerful-erc20.sol\":58763:58767  true */\n  0x01\n    /* \"contracts/powerful-erc20.sol\":58731:58767  _roles[role].members[account] = true */\n  or\n  swap1\n  sstore\n    /* \"contracts/powerful-erc20.sol\":58813:58825  _msgSender() */\n  tag_59\n    /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n  caller\n  swap1\n    /* \"contracts/powerful-erc20.sol\":4085:4181  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"contracts/powerful-erc20.sol\":58813:58825  _msgSender() */\ntag_59:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/powerful-erc20.sol\":58786:58826  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"contracts/powerful-erc20.sol\":58804:58811  account */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/powerful-erc20.sol\":58786:58826  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"contracts/powerful-erc20.sol\":58798:58802  role */\n  dup4\n    /* \"contracts/powerful-erc20.sol\":58786:58826  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"contracts/powerful-erc20.sol\":58619:58843  function _grantRole(bytes32 role, address account) private {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/powerful-erc20.sol\":59699:61453  contract PowerfulERC20 is... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_63\n  swap1\n  tag_64\n  jump\t// in\ntag_63:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_66\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_69)\ntag_66:\n  dup3\n  0x1f\n  lt\n  tag_67\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_69)\ntag_67:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_69\n  jumpi\n  swap2\n  dup3\n  add\ntag_68:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_69\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_68)\ntag_69:\n  pop\n  tag_70\n  swap3\n  swap2\n  pop\n  tag_71\n  jump\t// in\ntag_70:\n  pop\n  swap1\n  jump\t// out\ntag_71:\ntag_72:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_70\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_72)\n    /* \"#utility.yul\":14:899   */\ntag_75:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_77\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_77:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_79\n  tag_80\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_82\n  tag_80\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_83:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_84:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_84)\ntag_86:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_87:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1740   */\ntag_2:\n    /* \"#utility.yul\":1028:1034   */\n  0x00\n    /* \"#utility.yul\":1036:1042   */\n  dup1\n    /* \"#utility.yul\":1044:1050   */\n  0x00\n    /* \"#utility.yul\":1052:1058   */\n  dup1\n    /* \"#utility.yul\":1060:1066   */\n  0x00\n    /* \"#utility.yul\":1113:1116   */\n  0xa0\n    /* \"#utility.yul\":1101:1110   */\n  dup7\n    /* \"#utility.yul\":1092:1099   */\n  dup9\n    /* \"#utility.yul\":1088:1111   */\n  sub\n    /* \"#utility.yul\":1084:1117   */\n  slt\n    /* \"#utility.yul\":1081:1134   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":1130:1131   */\n  0x00\n    /* \"#utility.yul\":1127:1128   */\n  dup1\n    /* \"#utility.yul\":1120:1132   */\n  revert\n    /* \"#utility.yul\":1081:1134   */\ntag_89:\n    /* \"#utility.yul\":1157:1173   */\n  dup6\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1222:1236   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1219:1253   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":1249:1250   */\n  0x00\n    /* \"#utility.yul\":1246:1247   */\n  dup1\n    /* \"#utility.yul\":1239:1251   */\n  revert\n    /* \"#utility.yul\":1219:1253   */\ntag_90:\n    /* \"#utility.yul\":1272:1333   */\n  tag_91\n    /* \"#utility.yul\":1325:1332   */\n  dup10\n    /* \"#utility.yul\":1316:1322   */\n  dup4\n    /* \"#utility.yul\":1305:1314   */\n  dup11\n    /* \"#utility.yul\":1301:1323   */\n  add\n    /* \"#utility.yul\":1272:1333   */\n  tag_75\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1262:1333   */\n  swap7\n  pop\n    /* \"#utility.yul\":1379:1381   */\n  0x20\n    /* \"#utility.yul\":1368:1377   */\n  dup9\n    /* \"#utility.yul\":1364:1382   */\n  add\n    /* \"#utility.yul\":1358:1383   */\n  mload\n    /* \"#utility.yul\":1342:1383   */\n  swap2\n  pop\n    /* \"#utility.yul\":1408:1410   */\n  dup1\n    /* \"#utility.yul\":1398:1406   */\n  dup3\n    /* \"#utility.yul\":1395:1411   */\n  gt\n    /* \"#utility.yul\":1392:1428   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":1424:1425   */\n  0x00\n    /* \"#utility.yul\":1421:1422   */\n  dup1\n    /* \"#utility.yul\":1414:1426   */\n  revert\n    /* \"#utility.yul\":1392:1428   */\ntag_92:\n  pop\n    /* \"#utility.yul\":1447:1510   */\n  tag_93\n    /* \"#utility.yul\":1502:1509   */\n  dup9\n    /* \"#utility.yul\":1491:1499   */\n  dup3\n    /* \"#utility.yul\":1480:1489   */\n  dup10\n    /* \"#utility.yul\":1476:1500   */\n  add\n    /* \"#utility.yul\":1447:1510   */\n  tag_75\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1437:1510   */\n  swap5\n  pop\n  pop\n    /* \"#utility.yul\":1553:1555   */\n  0x40\n    /* \"#utility.yul\":1542:1551   */\n  dup7\n    /* \"#utility.yul\":1538:1556   */\n  add\n    /* \"#utility.yul\":1532:1557   */\n  mload\n    /* \"#utility.yul\":1597:1601   */\n  0xff\n    /* \"#utility.yul\":1590:1595   */\n  dup2\n    /* \"#utility.yul\":1586:1602   */\n  and\n    /* \"#utility.yul\":1579:1584   */\n  dup2\n    /* \"#utility.yul\":1576:1603   */\n  eq\n    /* \"#utility.yul\":1566:1621   */\n  tag_94\n  jumpi\n    /* \"#utility.yul\":1617:1618   */\n  0x00\n    /* \"#utility.yul\":1614:1615   */\n  dup1\n    /* \"#utility.yul\":1607:1619   */\n  revert\n    /* \"#utility.yul\":1566:1621   */\ntag_94:\n    /* \"#utility.yul\":1685:1687   */\n  0x60\n    /* \"#utility.yul\":1670:1688   */\n  dup8\n  add\n    /* \"#utility.yul\":1664:1689   */\n  mload\n    /* \"#utility.yul\":1729:1732   */\n  0x80\n    /* \"#utility.yul\":1714:1733   */\n  swap1\n  swap8\n  add\n    /* \"#utility.yul\":1708:1734   */\n  mload\n    /* \"#utility.yul\":904:1740   */\n  swap6\n  swap9\n  swap5\n  swap8\n  pop\n    /* \"#utility.yul\":1640:1645   */\n  swap6\n    /* \"#utility.yul\":1664:1689   */\n  swap5\n    /* \"#utility.yul\":1708:1734   */\n  swap4\n    /* \"#utility.yul\":904:1740   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2991:3216   */\ntag_49:\n    /* \"#utility.yul\":3031:3034   */\n  0x00\n    /* \"#utility.yul\":3062:3063   */\n  dup3\n    /* \"#utility.yul\":3058:3064   */\n  not\n    /* \"#utility.yul\":3055:3056   */\n  dup3\n    /* \"#utility.yul\":3052:3065   */\n  gt\n    /* \"#utility.yul\":3049:3185   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":3107:3117   */\n  0x4e487b71\n    /* \"#utility.yul\":3102:3105   */\n  0xe0\n    /* \"#utility.yul\":3098:3118   */\n  shl\n    /* \"#utility.yul\":3095:3096   */\n  0x00\n    /* \"#utility.yul\":3088:3119   */\n  mstore\n    /* \"#utility.yul\":3142:3146   */\n  0x11\n    /* \"#utility.yul\":3139:3140   */\n  0x04\n    /* \"#utility.yul\":3132:3147   */\n  mstore\n    /* \"#utility.yul\":3170:3174   */\n  0x24\n    /* \"#utility.yul\":3167:3168   */\n  0x00\n    /* \"#utility.yul\":3160:3175   */\n  revert\n    /* \"#utility.yul\":3049:3185   */\ntag_100:\n  pop\n    /* \"#utility.yul\":3201:3210   */\n  add\n  swap1\n    /* \"#utility.yul\":2991:3216   */\n  jump\t// out\n    /* \"#utility.yul\":3221:3601   */\ntag_64:\n    /* \"#utility.yul\":3300:3301   */\n  0x01\n    /* \"#utility.yul\":3296:3308   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":3343:3355   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":3364:3425   */\n  tag_102\n  jumpi\n    /* \"#utility.yul\":3418:3422   */\n  0x7f\n    /* \"#utility.yul\":3410:3416   */\n  dup3\n    /* \"#utility.yul\":3406:3423   */\n  and\n    /* \"#utility.yul\":3396:3423   */\n  swap2\n  pop\n    /* \"#utility.yul\":3364:3425   */\ntag_102:\n    /* \"#utility.yul\":3471:3473   */\n  0x20\n    /* \"#utility.yul\":3463:3469   */\n  dup3\n    /* \"#utility.yul\":3460:3474   */\n  lt\n    /* \"#utility.yul\":3440:3458   */\n  dup2\n    /* \"#utility.yul\":3437:3475   */\n  eq\n    /* \"#utility.yul\":3434:3595   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":3517:3527   */\n  0x4e487b71\n    /* \"#utility.yul\":3512:3515   */\n  0xe0\n    /* \"#utility.yul\":3508:3528   */\n  shl\n    /* \"#utility.yul\":3505:3506   */\n  0x00\n    /* \"#utility.yul\":3498:3529   */\n  mstore\n    /* \"#utility.yul\":3552:3556   */\n  0x22\n    /* \"#utility.yul\":3549:3550   */\n  0x04\n    /* \"#utility.yul\":3542:3557   */\n  mstore\n    /* \"#utility.yul\":3580:3584   */\n  0x24\n    /* \"#utility.yul\":3577:3578   */\n  0x00\n    /* \"#utility.yul\":3570:3585   */\n  revert\n    /* \"#utility.yul\":3434:3595   */\ntag_103:\n  pop\n    /* \"#utility.yul\":3221:3601   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3606:3733   */\ntag_80:\n    /* \"#utility.yul\":3667:3677   */\n  0x4e487b71\n    /* \"#utility.yul\":3662:3665   */\n  0xe0\n    /* \"#utility.yul\":3658:3678   */\n  shl\n    /* \"#utility.yul\":3655:3656   */\n  0x00\n    /* \"#utility.yul\":3648:3679   */\n  mstore\n    /* \"#utility.yul\":3698:3702   */\n  0x41\n    /* \"#utility.yul\":3695:3696   */\n  0x04\n    /* \"#utility.yul\":3688:3703   */\n  mstore\n    /* \"#utility.yul\":3722:3726   */\n  0x24\n    /* \"#utility.yul\":3719:3720   */\n  0x00\n    /* \"#utility.yul\":3712:3727   */\n  revert\n    /* \"#utility.yul\":3606:3733   */\ntag_74:\n    /* \"contracts/powerful-erc20.sol\":59699:61453  contract PowerfulERC20 is... */\n  shr(0xf8, mload(0x80))\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x99234e8bb0caccda3914a3f5815f9f0b8e1efd8c0710474b7e1f8f99bf3b0eb8\")\n  0x00\n  assignImmutable(\"0x2c1c33478a6196754dce655d1325d08da1fff37880548389ad7a152cea6807ff\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/powerful-erc20.sol\":59699:61453  contract PowerfulERC20 is... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xd5391393\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xd8fbe994\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0xa457c2d7\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xc1d34b89\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xcae9ca51\n      eq\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x8980f11f\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x8980f11f\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x70a08231\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x7d64bcb4\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x36568abe\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x4000aea0\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      0x2f2ff15d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3177029f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x355274ea\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0x1296ee62\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x1296ee62\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x05d2035b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/powerful-erc20.sol\":60527:60746  function supportsInterface(bytes4 interfaceId)... */\n    tag_3:\n      tag_45\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n        /* \"#utility.yul\":6975:6989   */\n      swap1\n      iszero\n        /* \"#utility.yul\":6968:6990   */\n      iszero\n        /* \"#utility.yul\":6950:6991   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6938:6940   */\n      0x20\n        /* \"#utility.yul\":6923:6941   */\n      add\n        /* \"contracts/powerful-erc20.sol\":60527:60746  function supportsInterface(bytes4 interfaceId)... */\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/powerful-erc20.sol\":45943:46039  function mintingFinished() external view returns (bool) {... */\n    tag_4:\n        /* \"contracts/powerful-erc20.sol\":46016:46032  _mintingFinished */\n      and(0xff, sload(0x05))\n        /* \"contracts/powerful-erc20.sol\":45943:46039  function mintingFinished() external view returns (bool) {... */\n      jump(tag_45)\n        /* \"contracts/powerful-erc20.sol\":6297:6395  function name() public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":8518:8720  function approve(address spender, uint256 amount)... */\n    tag_6:\n      tag_45\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":36194:36391  function transferAndCall(address recipient, uint256 amount)... */\n    tag_7:\n      tag_45\n      tag_64\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":7385:7491  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_8:\n        /* \"contracts/powerful-erc20.sol\":7472:7484  _totalSupply */\n      sload(0x02)\n        /* \"contracts/powerful-erc20.sol\":7385:7491  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_67:\n      mload(0x40)\n        /* \"#utility.yul\":7148:7173   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":7136:7138   */\n      0x20\n        /* \"#utility.yul\":7121:7139   */\n      add\n        /* \"contracts/powerful-erc20.sol\":7385:7491  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_49\n        /* \"#utility.yul\":7002:7179   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":9187:9699  function transferFrom(... */\n    tag_9:\n      tag_45\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":55830:55951  function getRoleAdmin(bytes32 role) public view override returns (bytes32) {... */\n    tag_10:\n      tag_67\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"contracts/powerful-erc20.sol\":55896:55903  bytes32 */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":55922:55934  _roles[role] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/powerful-erc20.sol\":55922:55928  _roles */\n      0x06\n        /* \"contracts/powerful-erc20.sol\":55922:55934  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/powerful-erc20.sol\":55922:55944  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"contracts/powerful-erc20.sol\":55830:55951  function getRoleAdmin(bytes32 role) public view override returns (bytes32) {... */\n      jump\n        /* \"contracts/powerful-erc20.sol\":56201:56382  function grantRole(bytes32 role, address account)... */\n    tag_11:\n      tag_82\n      tag_83\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      stop\n        /* \"contracts/powerful-erc20.sol\":60350:60521  function decimals()... */\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":15699:15703   */\n      0xff\n        /* \"contracts/powerful-erc20.sol\":45234:45243  _decimals */\n      immutable(\"0x2c1c33478a6196754dce655d1325d08da1fff37880548389ad7a152cea6807ff\")\n        /* \"#utility.yul\":15687:15704   */\n      and\n        /* \"#utility.yul\":15669:15705   */\n      dup2\n      mstore\n        /* \"#utility.yul\":15657:15659   */\n      0x20\n        /* \"#utility.yul\":15642:15660   */\n      add\n        /* \"contracts/powerful-erc20.sol\":60350:60521  function decimals()... */\n      tag_49\n        /* \"#utility.yul\":15527:15711   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":38866:39057  function approveAndCall(address spender, uint256 amount)... */\n    tag_13:\n      tag_45\n      tag_91\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":18165:18246  function cap() public view virtual returns (uint256) {... */\n    tag_14:\n        /* \"contracts/powerful-erc20.sol\":18235:18239  _cap */\n      immutable(\"0x99234e8bb0caccda3914a3f5815f9f0b8e1efd8c0710474b7e1f8f99bf3b0eb8\")\n        /* \"contracts/powerful-erc20.sol\":18165:18246  function cap() public view virtual returns (uint256) {... */\n      jump(tag_67)\n        /* \"contracts/powerful-erc20.sol\":57290:57566  function renounceRole(bytes32 role, address account)... */\n    tag_15:\n      tag_82\n      tag_98\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":10094:10380  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_16:\n      tag_45\n      tag_101\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":36740:37108  function transferAndCall(... */\n    tag_17:\n      tag_45\n      tag_105\n      calldatasize\n      0x04\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":46341:46444  function mint(address account, uint256 amount) external canMint {... */\n    tag_18:\n      tag_82\n      tag_110\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":16794:16883  function burn(uint256 amount) public virtual {... */\n    tag_19:\n      tag_82\n      tag_113\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_113:\n      tag_115\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":7549:7718  function balanceOf(address account)... */\n    tag_20:\n      tag_67\n      tag_117\n      calldatasize\n      0x04\n      tag_118\n      jump\t// in\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":7693:7711  _balances[account] */\n      and\n        /* \"contracts/powerful-erc20.sol\":7663:7670  uint256 */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":7693:7711  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/powerful-erc20.sol\":7549:7718  function balanceOf(address account)... */\n      jump\n        /* \"contracts/powerful-erc20.sol\":43350:43442  function renounceOwnership() public virtual onlyOwner {... */\n    tag_21:\n      tag_82\n      tag_122\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":17189:17584  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_22:\n      tag_82\n      tag_124\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_124:\n      tag_125\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":46630:46705  function finishMinting() external canMint {... */\n    tag_23:\n      tag_82\n      tag_127\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":44446:44632  function recoverERC20(address tokenAddress, uint256 tokenAmount)... */\n    tag_24:\n      tag_82\n      tag_129\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":42718:42803  function owner() public view virtual returns (address) {... */\n    tag_25:\n        /* \"contracts/powerful-erc20.sol\":42790:42796  _owner */\n      sload(0x05)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/powerful-erc20.sol\":42718:42803  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5604:5636   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5586:5637   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5574:5576   */\n      0x20\n        /* \"#utility.yul\":5559:5577   */\n      add\n        /* \"contracts/powerful-erc20.sol\":42718:42803  function owner() public view virtual returns (address) {... */\n      tag_49\n        /* \"#utility.yul\":5440:5643   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":54711:54884  function hasRole(bytes32 role, address account)... */\n    tag_26:\n      tag_45\n      tag_136\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_136:\n      tag_137\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":6508:6610  function symbol() public view virtual override returns (string memory) {... */\n    tag_27:\n      tag_54\n      tag_140\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":53761:53810  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_28:\n      tag_67\n        /* \"contracts/powerful-erc20.sol\":53806:53810  0x00 */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":53761:53810  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"contracts/powerful-erc20.sol\":10867:11334  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_29:\n      tag_45\n      tag_146\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_146:\n      tag_147\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":7921:8129  function transfer(address recipient, uint256 amount)... */\n    tag_30:\n      tag_45\n      tag_150\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_150:\n      tag_151\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":38165:38567  function transferFromAndCall(... */\n    tag_31:\n      tag_45\n      tag_154\n      calldatasize\n      0x04\n      tag_155\n      jump\t// in\n    tag_154:\n      tag_156\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":39419:39763  function approveAndCall(... */\n    tag_32:\n      tag_45\n      tag_159\n      calldatasize\n      0x04\n      tag_106\n      jump\t// in\n    tag_159:\n      tag_160\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":59178:59235  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER\") */\n    tag_33:\n      tag_67\n        /* \"contracts/powerful-erc20.sol\":59216:59235  keccak256(\"MINTER\") */\n      0xf0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc9\n        /* \"contracts/powerful-erc20.sol\":59178:59235  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER\") */\n      dup2\n      jump\n        /* \"contracts/powerful-erc20.sol\":56616:56799  function revokeRole(bytes32 role, address account)... */\n    tag_34:\n      tag_82\n      tag_166\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_166:\n      tag_167\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":37495:37718  function transferFromAndCall(... */\n    tag_35:\n      tag_45\n      tag_169\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_169:\n      tag_170\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":8187:8380  function allowance(address owner, address spender)... */\n    tag_36:\n      tag_67\n      tag_173\n      calldatasize\n      0x04\n      tag_174\n      jump\t// in\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":8346:8364  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/powerful-erc20.sol\":8316:8323  uint256 */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":8346:8364  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/powerful-erc20.sol\":8346:8357  _allowances */\n      0x01\n        /* \"contracts/powerful-erc20.sol\":8346:8364  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/powerful-erc20.sol\":8346:8373  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/powerful-erc20.sol\":8187:8380  function allowance(address owner, address spender)... */\n      jump\n        /* \"contracts/powerful-erc20.sol\":43591:43814  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_37:\n      tag_82\n      tag_178\n      calldatasize\n      0x04\n      tag_118\n      jump\t// in\n    tag_178:\n      tag_179\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":60527:60746  function supportsInterface(bytes4 interfaceId)... */\n    tag_48:\n        /* \"contracts/powerful-erc20.sol\":60676:60680  bool */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":60703:60739  super.supportsInterface(interfaceId) */\n      tag_182\n        /* \"contracts/powerful-erc20.sol\":60727:60738  interfaceId */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":60703:60726  super.supportsInterface */\n      tag_183\n        /* \"contracts/powerful-erc20.sol\":60703:60739  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_182:\n        /* \"contracts/powerful-erc20.sol\":60696:60739  return super.supportsInterface(interfaceId) */\n      swap3\n        /* \"contracts/powerful-erc20.sol\":60527:60746  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":6297:6395  function name() public view virtual override returns (string memory) {... */\n    tag_55:\n        /* \"contracts/powerful-erc20.sol\":6351:6364  string memory */\n      0x60\n        /* \"contracts/powerful-erc20.sol\":6383:6388  _name */\n      0x03\n        /* \"contracts/powerful-erc20.sol\":6376:6388  return _name */\n      dup1\n      sload\n      tag_186\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_188\n      swap1\n      tag_187\n      jump\t// in\n    tag_188:\n      dup1\n      iszero\n      tag_189\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_190\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_189)\n    tag_190:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_191:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_191\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/powerful-erc20.sol\":6297:6395  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":8518:8720  function approve(address spender, uint256 amount)... */\n    tag_61:\n        /* \"contracts/powerful-erc20.sol\":8633:8637  bool */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":8653:8692  _approve(_msgSender(), spender, amount) */\n      tag_193\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":8676:8683  spender */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":8685:8691  amount */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":8653:8661  _approve */\n      tag_196\n        /* \"contracts/powerful-erc20.sol\":8653:8692  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_193:\n      pop\n        /* \"contracts/powerful-erc20.sol\":8709:8713  true */\n      0x01\n        /* \"contracts/powerful-erc20.sol\":8518:8720  function approve(address spender, uint256 amount)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":36194:36391  function transferAndCall(address recipient, uint256 amount)... */\n    tag_65:\n        /* \"contracts/powerful-erc20.sol\":36319:36323  bool */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":36346:36384  transferAndCall(recipient, amount, \"\") */\n      tag_198\n        /* \"contracts/powerful-erc20.sol\":36362:36371  recipient */\n      dup4\n        /* \"contracts/powerful-erc20.sol\":36373:36379  amount */\n      dup4\n        /* \"contracts/powerful-erc20.sol\":36346:36384  transferAndCall(recipient, amount, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/powerful-erc20.sol\":36346:36361  transferAndCall */\n      tag_107\n        /* \"contracts/powerful-erc20.sol\":36346:36384  transferAndCall(recipient, amount, \"\") */\n      jump\t// in\n    tag_198:\n        /* \"contracts/powerful-erc20.sol\":36339:36384  return transferAndCall(recipient, amount, \"\") */\n      swap4\n        /* \"contracts/powerful-erc20.sol\":36194:36391  function transferAndCall(address recipient, uint256 amount)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":9187:9699  function transferFrom(... */\n    tag_74:\n        /* \"contracts/powerful-erc20.sol\":9323:9327  bool */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":9339:9375  _transfer(sender, recipient, amount) */\n      tag_201\n        /* \"contracts/powerful-erc20.sol\":9349:9355  sender */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":9357:9366  recipient */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":9368:9374  amount */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":9339:9348  _transfer */\n      tag_202\n        /* \"contracts/powerful-erc20.sol\":9339:9375  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":9413:9432  _allowances[sender] */\n      dup5\n      and\n        /* \"contracts/powerful-erc20.sol\":9386:9410  uint256 currentAllowance */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":9413:9432  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/powerful-erc20.sol\":9413:9424  _allowances */\n      0x01\n        /* \"contracts/powerful-erc20.sol\":9413:9432  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":9413:9446  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/powerful-erc20.sol\":9477:9503  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"contracts/powerful-erc20.sol\":9456:9569  require(... */\n      tag_204\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11220:11222   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":9456:9569  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11202:11223   */\n      mstore\n        /* \"#utility.yul\":11259:11261   */\n      0x28\n        /* \"#utility.yul\":11239:11257   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11232:11262   */\n      mstore\n        /* \"#utility.yul\":11298:11332   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":11278:11296   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11271:11333   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":11349:11367   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11342:11380   */\n      mstore\n        /* \"#utility.yul\":11397:11416   */\n      0x84\n      add\n        /* \"contracts/powerful-erc20.sol\":9456:9569  require(... */\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"contracts/powerful-erc20.sol\":9603:9660  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_207\n        /* \"contracts/powerful-erc20.sol\":9612:9618  sender */\n      dup6\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":9653:9659  amount */\n      dup6\n        /* \"contracts/powerful-erc20.sol\":9634:9650  currentAllowance */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":9634:9659  currentAllowance - amount */\n      sub\n        /* \"contracts/powerful-erc20.sol\":9603:9611  _approve */\n      tag_196\n        /* \"contracts/powerful-erc20.sol\":9603:9660  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_207:\n      pop\n        /* \"contracts/powerful-erc20.sol\":9688:9692  true */\n      0x01\n      swap5\n        /* \"contracts/powerful-erc20.sol\":9187:9699  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":56201:56382  function grantRole(bytes32 role, address account)... */\n    tag_85:\n        /* \"contracts/powerful-erc20.sol\":55896:55903  bytes32 */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":55922:55934  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/powerful-erc20.sol\":55922:55928  _roles */\n      0x06\n        /* \"contracts/powerful-erc20.sol\":55922:55934  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/powerful-erc20.sol\":55922:55944  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"contracts/powerful-erc20.sol\":54239:54269  _checkRole(role, _msgSender()) */\n      tag_212\n        /* \"contracts/powerful-erc20.sol\":54250:54254  role */\n      dup2\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":54239:54249  _checkRole */\n      tag_214\n        /* \"contracts/powerful-erc20.sol\":54239:54269  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_212:\n        /* \"contracts/powerful-erc20.sol\":56350:56375  _grantRole(role, account) */\n      tag_216\n        /* \"contracts/powerful-erc20.sol\":56361:56365  role */\n      dup4\n        /* \"contracts/powerful-erc20.sol\":56367:56374  account */\n      dup4\n        /* \"contracts/powerful-erc20.sol\":56350:56360  _grantRole */\n      tag_217\n        /* \"contracts/powerful-erc20.sol\":56350:56375  _grantRole(role, account) */\n      jump\t// in\n    tag_216:\n        /* \"contracts/powerful-erc20.sol\":56201:56382  function grantRole(bytes32 role, address account)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":38866:39057  function approveAndCall(address spender, uint256 amount)... */\n    tag_92:\n        /* \"contracts/powerful-erc20.sol\":38988:38992  bool */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":39015:39050  approveAndCall(spender, amount, \"\") */\n      tag_198\n        /* \"contracts/powerful-erc20.sol\":39030:39037  spender */\n      dup4\n        /* \"contracts/powerful-erc20.sol\":39039:39045  amount */\n      dup4\n        /* \"contracts/powerful-erc20.sol\":39015:39050  approveAndCall(spender, amount, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/powerful-erc20.sol\":39015:39029  approveAndCall */\n      tag_160\n        /* \"contracts/powerful-erc20.sol\":39015:39050  approveAndCall(spender, amount, \"\") */\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":57290:57566  function renounceRole(bytes32 role, address account)... */\n    tag_99:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":57426:57449  account == _msgSender() */\n      dup2\n      and\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":57426:57449  account == _msgSender() */\n      eq\n        /* \"contracts/powerful-erc20.sol\":57405:57522  require(... */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14771:14773   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":57405:57522  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14753:14774   */\n      mstore\n        /* \"#utility.yul\":14810:14812   */\n      0x2f\n        /* \"#utility.yul\":14790:14808   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14783:14813   */\n      mstore\n        /* \"#utility.yul\":14849:14883   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":14829:14847   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14822:14884   */\n      mstore\n      shl(0x89, 0x103937b632b9903337b91039b2b633)\n        /* \"#utility.yul\":14900:14918   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14893:14938   */\n      mstore\n        /* \"#utility.yul\":14955:14974   */\n      0x84\n      add\n        /* \"contracts/powerful-erc20.sol\":57405:57522  require(... */\n      tag_205\n        /* \"#utility.yul\":14569:14980   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":57405:57522  require(... */\n    tag_226:\n        /* \"contracts/powerful-erc20.sol\":57533:57559  _revokeRole(role, account) */\n      tag_229\n        /* \"contracts/powerful-erc20.sol\":57545:57549  role */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":57551:57558  account */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":57533:57544  _revokeRole */\n      tag_230\n        /* \"contracts/powerful-erc20.sol\":57533:57559  _revokeRole(role, account) */\n      jump\t// in\n    tag_229:\n        /* \"contracts/powerful-erc20.sol\":57290:57566  function renounceRole(bytes32 role, address account)... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":10094:10380  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_102:\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":10206:10210  bool */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":10295:10320  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/powerful-erc20.sol\":10295:10306  _allowances */\n      0x01\n        /* \"contracts/powerful-erc20.sol\":10295:10320  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":10295:10329  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/powerful-erc20.sol\":10206:10210  bool */\n      swap1\n      swap2\n        /* \"contracts/powerful-erc20.sol\":10226:10352  _approve(... */\n      tag_193\n      swap2\n        /* \"contracts/powerful-erc20.sol\":10274:10281  spender */\n      dup6\n      swap1\n        /* \"contracts/powerful-erc20.sol\":10295:10342  _allowances[_msgSender()][spender] + addedValue */\n      tag_235\n      swap1\n        /* \"contracts/powerful-erc20.sol\":10332:10342  addedValue */\n      dup7\n      swap1\n        /* \"contracts/powerful-erc20.sol\":10295:10342  _allowances[_msgSender()][spender] + addedValue */\n      tag_236\n      jump\t// in\n    tag_235:\n        /* \"contracts/powerful-erc20.sol\":10226:10234  _approve */\n      tag_196\n        /* \"contracts/powerful-erc20.sol\":10226:10352  _approve(... */\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":36740:37108  function transferAndCall(... */\n    tag_107:\n        /* \"contracts/powerful-erc20.sol\":36882:36886  bool */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":36898:36925  transfer(recipient, amount) */\n      tag_238\n        /* \"contracts/powerful-erc20.sol\":36907:36916  recipient */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":36918:36924  amount */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":36898:36906  transfer */\n      tag_151\n        /* \"contracts/powerful-erc20.sol\":36898:36925  transfer(recipient, amount) */\n      jump\t// in\n    tag_238:\n      pop\n        /* \"contracts/powerful-erc20.sol\":36956:37016  _checkAndCallTransfer(_msgSender(), recipient, amount, data) */\n      tag_239\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":36992:37001  recipient */\n      dup6\n        /* \"contracts/powerful-erc20.sol\":37003:37009  amount */\n      dup6\n        /* \"contracts/powerful-erc20.sol\":37011:37015  data */\n      dup6\n        /* \"contracts/powerful-erc20.sol\":36956:36977  _checkAndCallTransfer */\n      tag_241\n        /* \"contracts/powerful-erc20.sol\":36956:37016  _checkAndCallTransfer(_msgSender(), recipient, amount, data) */\n      jump\t// in\n    tag_239:\n        /* \"contracts/powerful-erc20.sol\":36935:37080  require(... */\n      tag_242\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_244\n      jump\t// in\n    tag_242:\n      pop\n        /* \"contracts/powerful-erc20.sol\":37097:37101  true */\n      0x01\n        /* \"contracts/powerful-erc20.sol\":36740:37108  function transferAndCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":46341:46444  function mint(address account, uint256 amount) external canMint {... */\n    tag_111:\n        /* \"contracts/powerful-erc20.sol\":45802:45818  _mintingFinished */\n      and(0xff, sload(0x05))\n        /* \"contracts/powerful-erc20.sol\":45801:45818  !_mintingFinished */\n      iszero\n        /* \"contracts/powerful-erc20.sol\":45793:45857  require(!_mintingFinished, \"ERC20Mintable: minting is finished\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_248\n      jump\t// in\n    tag_246:\n        /* \"contracts/powerful-erc20.sol\":46415:46437  _mint(account, amount) */\n      tag_229\n        /* \"contracts/powerful-erc20.sol\":46421:46428  account */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":46430:46436  amount */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":46415:46420  _mint */\n      tag_251\n        /* \"contracts/powerful-erc20.sol\":46415:46437  _mint(account, amount) */\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":16794:16883  function burn(uint256 amount) public virtual {... */\n    tag_115:\n        /* \"contracts/powerful-erc20.sol\":16849:16876  _burn(_msgSender(), amount) */\n      tag_253\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":16869:16875  amount */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":16849:16854  _burn */\n      tag_255\n        /* \"contracts/powerful-erc20.sol\":16849:16876  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_253:\n        /* \"contracts/powerful-erc20.sol\":16794:16883  function burn(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":43350:43442  function renounceOwnership() public virtual onlyOwner {... */\n    tag_122:\n        /* \"contracts/powerful-erc20.sol\":42790:42796  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":42930:42953  owner() == _msgSender() */\n      eq\n        /* \"contracts/powerful-erc20.sol\":42922:42990  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_262\n      jump\t// in\n    tag_260:\n        /* \"contracts/powerful-erc20.sol\":43414:43435  _setOwner(address(0)) */\n      tag_264\n        /* \"contracts/powerful-erc20.sol\":43432:43433  0 */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":43414:43423  _setOwner */\n      tag_265\n        /* \"contracts/powerful-erc20.sol\":43414:43435  _setOwner(address(0)) */\n      jump\t// in\n    tag_264:\n        /* \"contracts/powerful-erc20.sol\":43350:43442  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":17189:17584  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_125:\n        /* \"contracts/powerful-erc20.sol\":17265:17289  uint256 currentAllowance */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":17292:17324  allowance(account, _msgSender()) */\n      tag_267\n        /* \"contracts/powerful-erc20.sol\":17302:17309  account */\n      dup4\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":8187:8380  function allowance(address owner, address spender)... */\n      tag_173\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":17292:17324  allowance(account, _msgSender()) */\n    tag_267:\n        /* \"contracts/powerful-erc20.sol\":17265:17324  uint256 currentAllowance = allowance(account, _msgSender()) */\n      swap1\n      pop\n        /* \"contracts/powerful-erc20.sol\":17375:17381  amount */\n      dup2\n        /* \"contracts/powerful-erc20.sol\":17355:17371  currentAllowance */\n      dup2\n        /* \"contracts/powerful-erc20.sol\":17355:17381  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"contracts/powerful-erc20.sol\":17334:17443  require(... */\n      tag_269\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11990:11992   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":17334:17443  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11972:11993   */\n      mstore\n        /* \"#utility.yul\":12029:12031   */\n      0x24\n        /* \"#utility.yul\":12009:12027   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":12002:12032   */\n      mstore\n        /* \"#utility.yul\":12068:12102   */\n      0x45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77\n        /* \"#utility.yul\":12048:12066   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12041:12103   */\n      mstore\n      shl(0xe0, 0x616e6365)\n        /* \"#utility.yul\":12119:12137   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12112:12146   */\n      mstore\n        /* \"#utility.yul\":12163:12182   */\n      0x84\n      add\n        /* \"contracts/powerful-erc20.sol\":17334:17443  require(... */\n      tag_205\n        /* \"#utility.yul\":11788:12188   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":17334:17443  require(... */\n    tag_269:\n        /* \"contracts/powerful-erc20.sol\":17477:17535  _approve(account, _msgSender(), currentAllowance - amount) */\n      tag_272\n        /* \"contracts/powerful-erc20.sol\":17486:17493  account */\n      dup4\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":17528:17534  amount */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":17509:17525  currentAllowance */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":17509:17534  currentAllowance - amount */\n      sub\n        /* \"contracts/powerful-erc20.sol\":17477:17485  _approve */\n      tag_196\n        /* \"contracts/powerful-erc20.sol\":17477:17535  _approve(account, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_272:\n        /* \"contracts/powerful-erc20.sol\":17555:17577  _burn(account, amount) */\n      tag_216\n        /* \"contracts/powerful-erc20.sol\":17561:17568  account */\n      dup4\n        /* \"contracts/powerful-erc20.sol\":17570:17576  amount */\n      dup4\n        /* \"contracts/powerful-erc20.sol\":17555:17560  _burn */\n      tag_255\n        /* \"contracts/powerful-erc20.sol\":17555:17577  _burn(account, amount) */\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":46630:46705  function finishMinting() external canMint {... */\n    tag_127:\n        /* \"contracts/powerful-erc20.sol\":45802:45818  _mintingFinished */\n      and(0xff, sload(0x05))\n        /* \"contracts/powerful-erc20.sol\":45801:45818  !_mintingFinished */\n      iszero\n        /* \"contracts/powerful-erc20.sol\":45793:45857  require(!_mintingFinished, \"ERC20Mintable: minting is finished\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_248\n      jump\t// in\n    tag_276:\n        /* \"contracts/powerful-erc20.sol\":46682:46698  _finishMinting() */\n      tag_264\n        /* \"contracts/powerful-erc20.sol\":46682:46696  _finishMinting */\n      tag_280\n        /* \"contracts/powerful-erc20.sol\":46682:46698  _finishMinting() */\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":44446:44632  function recoverERC20(address tokenAddress, uint256 tokenAmount)... */\n    tag_130:\n        /* \"contracts/powerful-erc20.sol\":42790:42796  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":42930:42953  owner() == _msgSender() */\n      eq\n        /* \"contracts/powerful-erc20.sol\":42922:42990  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_262\n      jump\t// in\n    tag_284:\n        /* \"contracts/powerful-erc20.sol\":44581:44593  tokenAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":44574:44603  IERC20(tokenAddress).transfer */\n      and\n      0xa9059cbb\n        /* \"contracts/powerful-erc20.sol\":44604:44611  owner() */\n      tag_287\n        /* \"contracts/powerful-erc20.sol\":42790:42796  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n      swap1\n        /* \"contracts/powerful-erc20.sol\":42718:42803  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/powerful-erc20.sol\":44604:44611  owner() */\n    tag_287:\n        /* \"contracts/powerful-erc20.sol\":44574:44625  IERC20(tokenAddress).transfer(owner(), tokenAmount) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6333:6365   */\n      swap1\n      swap2\n      and\n        /* \"contracts/powerful-erc20.sol\":44574:44625  IERC20(tokenAddress).transfer(owner(), tokenAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6315:6366   */\n      mstore\n        /* \"#utility.yul\":6382:6400   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6375:6409   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":6288:6306   */\n      0x44\n      add\n        /* \"contracts/powerful-erc20.sol\":44574:44625  IERC20(tokenAddress).transfer(owner(), tokenAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_290\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_290:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_292\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_292:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_216\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":54711:54884  function hasRole(bytes32 role, address account)... */\n    tag_137:\n        /* \"contracts/powerful-erc20.sol\":54821:54825  bool */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":54848:54860  _roles[role] */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/powerful-erc20.sol\":54848:54854  _roles */\n      0x06\n        /* \"contracts/powerful-erc20.sol\":54848:54860  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":54848:54877  _roles[role].members[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/powerful-erc20.sol\":54711:54884  function hasRole(bytes32 role, address account)... */\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":6508:6610  function symbol() public view virtual override returns (string memory) {... */\n    tag_140:\n        /* \"contracts/powerful-erc20.sol\":6564:6577  string memory */\n      0x60\n        /* \"contracts/powerful-erc20.sol\":6596:6603  _symbol */\n      0x04\n        /* \"contracts/powerful-erc20.sol\":6589:6603  return _symbol */\n      dup1\n      sload\n      tag_186\n      swap1\n      tag_187\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":10867:11334  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_147:\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":10984:10988  bool */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":11031:11056  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/powerful-erc20.sol\":11031:11042  _allowances */\n      0x01\n        /* \"contracts/powerful-erc20.sol\":11031:11056  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":11031:11065  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/powerful-erc20.sol\":11096:11131  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"contracts/powerful-erc20.sol\":11075:11194  require(... */\n      tag_305\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14365:14367   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":11075:11194  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14347:14368   */\n      mstore\n        /* \"#utility.yul\":14404:14406   */\n      0x25\n        /* \"#utility.yul\":14384:14402   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14377:14407   */\n      mstore\n        /* \"#utility.yul\":14443:14477   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":14423:14441   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14416:14478   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":14494:14512   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14487:14522   */\n      mstore\n        /* \"#utility.yul\":14539:14558   */\n      0x84\n      add\n        /* \"contracts/powerful-erc20.sol\":11075:11194  require(... */\n      tag_205\n        /* \"#utility.yul\":14163:14564   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":11075:11194  require(... */\n    tag_305:\n        /* \"contracts/powerful-erc20.sol\":11228:11295  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_242\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":11251:11258  spender */\n      dup6\n        /* \"contracts/powerful-erc20.sol\":11279:11294  subtractedValue */\n      dup6\n        /* \"contracts/powerful-erc20.sol\":11260:11276  currentAllowance */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":11260:11294  currentAllowance - subtractedValue */\n      sub\n        /* \"contracts/powerful-erc20.sol\":11228:11236  _approve */\n      tag_196\n        /* \"contracts/powerful-erc20.sol\":11228:11295  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":7921:8129  function transfer(address recipient, uint256 amount)... */\n    tag_151:\n        /* \"contracts/powerful-erc20.sol\":8039:8043  bool */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":8059:8101  _transfer(_msgSender(), recipient, amount) */\n      tag_193\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":8083:8092  recipient */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":8094:8100  amount */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":8059:8068  _transfer */\n      tag_202\n        /* \"contracts/powerful-erc20.sol\":8059:8101  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":38165:38567  function transferFromAndCall(... */\n    tag_156:\n        /* \"contracts/powerful-erc20.sol\":38335:38339  bool */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":38351:38390  transferFrom(sender, recipient, amount) */\n      tag_314\n        /* \"contracts/powerful-erc20.sol\":38364:38370  sender */\n      dup6\n        /* \"contracts/powerful-erc20.sol\":38372:38381  recipient */\n      dup6\n        /* \"contracts/powerful-erc20.sol\":38383:38389  amount */\n      dup6\n        /* \"contracts/powerful-erc20.sol\":38351:38363  transferFrom */\n      tag_74\n        /* \"contracts/powerful-erc20.sol\":38351:38390  transferFrom(sender, recipient, amount) */\n      jump\t// in\n    tag_314:\n      pop\n        /* \"contracts/powerful-erc20.sol\":38421:38475  _checkAndCallTransfer(sender, recipient, amount, data) */\n      tag_315\n        /* \"contracts/powerful-erc20.sol\":38443:38449  sender */\n      dup6\n        /* \"contracts/powerful-erc20.sol\":38451:38460  recipient */\n      dup6\n        /* \"contracts/powerful-erc20.sol\":38462:38468  amount */\n      dup6\n        /* \"contracts/powerful-erc20.sol\":38470:38474  data */\n      dup6\n        /* \"contracts/powerful-erc20.sol\":38421:38442  _checkAndCallTransfer */\n      tag_241\n        /* \"contracts/powerful-erc20.sol\":38421:38475  _checkAndCallTransfer(sender, recipient, amount, data) */\n      jump\t// in\n    tag_315:\n        /* \"contracts/powerful-erc20.sol\":38400:38539  require(... */\n      tag_207\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_244\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":38165:38567  function transferFromAndCall(... */\n    tag_313:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":39419:39763  function approveAndCall(... */\n    tag_160:\n        /* \"contracts/powerful-erc20.sol\":39558:39562  bool */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":39574:39598  approve(spender, amount) */\n      tag_319\n        /* \"contracts/powerful-erc20.sol\":39582:39589  spender */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":39591:39597  amount */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":39574:39581  approve */\n      tag_61\n        /* \"contracts/powerful-erc20.sol\":39574:39598  approve(spender, amount) */\n      jump\t// in\n    tag_319:\n      pop\n        /* \"contracts/powerful-erc20.sol\":39629:39672  _checkAndCallApprove(spender, amount, data) */\n      tag_320\n        /* \"contracts/powerful-erc20.sol\":39650:39657  spender */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":39659:39665  amount */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":39667:39671  data */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":39629:39649  _checkAndCallApprove */\n      tag_321\n        /* \"contracts/powerful-erc20.sol\":39629:39672  _checkAndCallApprove(spender, amount, data) */\n      jump\t// in\n    tag_320:\n        /* \"contracts/powerful-erc20.sol\":39608:39735  require(... */\n      tag_242\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9588:9590   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":39608:39735  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9570:9591   */\n      mstore\n        /* \"#utility.yul\":9627:9629   */\n      0x25\n        /* \"#utility.yul\":9607:9625   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9600:9630   */\n      mstore\n        /* \"#utility.yul\":9666:9700   */\n      0x455243313336333a205f636865636b416e6443616c6c417070726f7665207265\n        /* \"#utility.yul\":9646:9664   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9639:9701   */\n      mstore\n      shl(0xd8, 0x7665727473)\n        /* \"#utility.yul\":9717:9735   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9710:9745   */\n      mstore\n        /* \"#utility.yul\":9762:9781   */\n      0x84\n      add\n        /* \"contracts/powerful-erc20.sol\":39608:39735  require(... */\n      tag_205\n        /* \"#utility.yul\":9386:9787   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":56616:56799  function revokeRole(bytes32 role, address account)... */\n    tag_167:\n        /* \"contracts/powerful-erc20.sol\":55896:55903  bytes32 */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":55922:55934  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/powerful-erc20.sol\":55922:55928  _roles */\n      0x06\n        /* \"contracts/powerful-erc20.sol\":55922:55934  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/powerful-erc20.sol\":55922:55944  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"contracts/powerful-erc20.sol\":54239:54269  _checkRole(role, _msgSender()) */\n      tag_327\n        /* \"contracts/powerful-erc20.sol\":54250:54254  role */\n      dup2\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":54239:54249  _checkRole */\n      tag_214\n        /* \"contracts/powerful-erc20.sol\":54239:54269  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_327:\n        /* \"contracts/powerful-erc20.sol\":56766:56792  _revokeRole(role, account) */\n      tag_216\n        /* \"contracts/powerful-erc20.sol\":56778:56782  role */\n      dup4\n        /* \"contracts/powerful-erc20.sol\":56784:56791  account */\n      dup4\n        /* \"contracts/powerful-erc20.sol\":56766:56777  _revokeRole */\n      tag_230\n        /* \"contracts/powerful-erc20.sol\":56766:56792  _revokeRole(role, account) */\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":37495:37718  function transferFromAndCall(... */\n    tag_170:\n        /* \"contracts/powerful-erc20.sol\":37638:37642  bool */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":37661:37711  transferFromAndCall(sender, recipient, amount, \"\") */\n      tag_313\n        /* \"contracts/powerful-erc20.sol\":37681:37687  sender */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":37689:37698  recipient */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":37700:37706  amount */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":37661:37711  transferFromAndCall(sender, recipient, amount, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/powerful-erc20.sol\":37661:37680  transferFromAndCall */\n      tag_156\n        /* \"contracts/powerful-erc20.sol\":37661:37711  transferFromAndCall(sender, recipient, amount, \"\") */\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":43591:43814  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_179:\n        /* \"contracts/powerful-erc20.sol\":42790:42796  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":42930:42953  owner() == _msgSender() */\n      eq\n        /* \"contracts/powerful-erc20.sol\":42922:42990  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_337\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_262\n      jump\t// in\n    tag_337:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":43692:43714  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/powerful-erc20.sol\":43671:43778  require(... */\n      tag_340\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8778:8780   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":43671:43778  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8760:8781   */\n      mstore\n        /* \"#utility.yul\":8817:8819   */\n      0x26\n        /* \"#utility.yul\":8797:8815   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8790:8820   */\n      mstore\n        /* \"#utility.yul\":8856:8890   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8836:8854   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8829:8891   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":8907:8925   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8900:8936   */\n      mstore\n        /* \"#utility.yul\":8953:8972   */\n      0x84\n      add\n        /* \"contracts/powerful-erc20.sol\":43671:43778  require(... */\n      tag_205\n        /* \"#utility.yul\":8576:8978   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":43671:43778  require(... */\n    tag_340:\n        /* \"contracts/powerful-erc20.sol\":43788:43807  _setOwner(newOwner) */\n      tag_253\n        /* \"contracts/powerful-erc20.sol\":43798:43806  newOwner */\n      dup2\n        /* \"contracts/powerful-erc20.sol\":43788:43797  _setOwner */\n      tag_265\n        /* \"contracts/powerful-erc20.sol\":43788:43807  _setOwner(newOwner) */\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":12831:13220  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_180:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":12914:12935  account != address(0) */\n      dup3\n      and\n        /* \"contracts/powerful-erc20.sol\":12906:12971  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_345\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15187:15189   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":12906:12971  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15169:15190   */\n      mstore\n        /* \"#utility.yul\":15226:15228   */\n      0x1f\n        /* \"#utility.yul\":15206:15224   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15199:15229   */\n      mstore\n        /* \"#utility.yul\":15265:15298   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":15245:15263   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15238:15299   */\n      mstore\n        /* \"#utility.yul\":15316:15334   */\n      0x64\n      add\n        /* \"contracts/powerful-erc20.sol\":12906:12971  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_205\n        /* \"#utility.yul\":14985:15340   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":12906:12971  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_345:\n        /* \"contracts/powerful-erc20.sol\":13058:13064  amount */\n      dup1\n        /* \"contracts/powerful-erc20.sol\":13042:13054  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/powerful-erc20.sol\":13042:13064  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_350\n      swap2\n      swap1\n      tag_236\n      jump\t// in\n    tag_350:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":13074:13092  _balances[account] */\n      dup3\n      and\n        /* \"contracts/powerful-erc20.sol\":13074:13083  _balances */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":13074:13092  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/powerful-erc20.sol\":13074:13102  _balances[account] += amount */\n      dup1\n      sload\n        /* \"contracts/powerful-erc20.sol\":13096:13102  amount */\n      dup4\n      swap3\n        /* \"contracts/powerful-erc20.sol\":13074:13083  _balances */\n      swap1\n        /* \"contracts/powerful-erc20.sol\":13074:13102  _balances[account] += amount */\n      tag_351\n      swap1\n        /* \"contracts/powerful-erc20.sol\":13096:13102  amount */\n      dup5\n      swap1\n        /* \"contracts/powerful-erc20.sol\":13074:13102  _balances[account] += amount */\n      tag_236\n      jump\t// in\n    tag_351:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/powerful-erc20.sol\":13117:13154  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":7148:7173   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":13117:13154  Transfer(address(0), account, amount) */\n      dup4\n      and\n      swap1\n        /* \"contracts/powerful-erc20.sol\":13134:13135  0 */\n      0x00\n      swap1\n        /* \"contracts/powerful-erc20.sol\":13117:13154  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":7136:7138   */\n      0x20\n        /* \"#utility.yul\":7121:7139   */\n      add\n        /* \"contracts/powerful-erc20.sol\":13117:13154  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/powerful-erc20.sol\":57290:57566  function renounceRole(bytes32 role, address account)... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":54354:54624  function supportsInterface(bytes4 interfaceId)... */\n    tag_183:\n        /* \"contracts/powerful-erc20.sol\":54479:54483  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/powerful-erc20.sol\":54518:54565  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"contracts/powerful-erc20.sol\":54518:54617  interfaceId == type(IAccessControl).interfaceId ||... */\n      tag_182\n      jumpi\n      pop\n        /* \"contracts/powerful-erc20.sol\":54581:54617  super.supportsInterface(interfaceId) */\n      tag_182\n        /* \"contracts/powerful-erc20.sol\":54605:54616  interfaceId */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":54581:54604  super.supportsInterface */\n      tag_358\n        /* \"contracts/powerful-erc20.sol\":54581:54617  super.supportsInterface(interfaceId) */\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":14539:14909  function _approve(... */\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":14670:14689  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/powerful-erc20.sol\":14662:14730  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_361\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13557:13559   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":14662:14730  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13539:13560   */\n      mstore\n        /* \"#utility.yul\":13596:13598   */\n      0x24\n        /* \"#utility.yul\":13576:13594   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":13569:13599   */\n      mstore\n        /* \"#utility.yul\":13635:13669   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":13615:13633   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13608:13670   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":13686:13704   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13679:13713   */\n      mstore\n        /* \"#utility.yul\":13730:13749   */\n      0x84\n      add\n        /* \"contracts/powerful-erc20.sol\":14662:14730  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_205\n        /* \"#utility.yul\":13355:13755   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":14662:14730  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_361:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":14748:14769  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/powerful-erc20.sol\":14740:14808  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_364\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9185:9187   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":14740:14808  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9167:9188   */\n      mstore\n        /* \"#utility.yul\":9224:9226   */\n      0x22\n        /* \"#utility.yul\":9204:9222   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9197:9227   */\n      mstore\n        /* \"#utility.yul\":9263:9297   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":9243:9261   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9236:9298   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":9314:9332   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9307:9339   */\n      mstore\n        /* \"#utility.yul\":9356:9375   */\n      0x84\n      add\n        /* \"contracts/powerful-erc20.sol\":14740:14808  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_205\n        /* \"#utility.yul\":8983:9381   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":14740:14808  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_364:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":14819:14837  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/powerful-erc20.sol\":14819:14830  _allowances */\n      0x01\n        /* \"contracts/powerful-erc20.sol\":14819:14837  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/powerful-erc20.sol\":14819:14846  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/powerful-erc20.sol\":14819:14855  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/powerful-erc20.sol\":14870:14902  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":7148:7173   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/powerful-erc20.sol\":14870:14902  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":7121:7139   */\n      add\n        /* \"contracts/powerful-erc20.sol\":14870:14902  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/powerful-erc20.sol\":14539:14909  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":11808:12555  function _transfer(... */\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":11943:11963  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/powerful-erc20.sol\":11935:12005  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_369\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12797:12799   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":11935:12005  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12779:12800   */\n      mstore\n        /* \"#utility.yul\":12836:12838   */\n      0x25\n        /* \"#utility.yul\":12816:12834   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12809:12839   */\n      mstore\n        /* \"#utility.yul\":12875:12909   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":12855:12873   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12848:12910   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":12926:12944   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12919:12954   */\n      mstore\n        /* \"#utility.yul\":12971:12990   */\n      0x84\n      add\n        /* \"contracts/powerful-erc20.sol\":11935:12005  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_205\n        /* \"#utility.yul\":12595:12996   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":11935:12005  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_369:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":12023:12046  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/powerful-erc20.sol\":12015:12086  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_372\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7971:7973   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":12015:12086  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7953:7974   */\n      mstore\n        /* \"#utility.yul\":8010:8012   */\n      0x23\n        /* \"#utility.yul\":7990:8008   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7983:8013   */\n      mstore\n        /* \"#utility.yul\":8049:8083   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":8029:8047   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8022:8084   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":8100:8118   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8093:8126   */\n      mstore\n        /* \"#utility.yul\":8143:8162   */\n      0x84\n      add\n        /* \"contracts/powerful-erc20.sol\":12015:12086  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_205\n        /* \"#utility.yul\":7769:8168   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":12015:12086  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_372:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":12179:12196  _balances[sender] */\n      dup4\n      and\n        /* \"contracts/powerful-erc20.sol\":12155:12176  uint256 senderBalance */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":12179:12196  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/powerful-erc20.sol\":12227:12250  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/powerful-erc20.sol\":12206:12314  require(... */\n      tag_376\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9994:9996   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":12206:12314  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9976:9997   */\n      mstore\n        /* \"#utility.yul\":10033:10035   */\n      0x26\n        /* \"#utility.yul\":10013:10031   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10006:10036   */\n      mstore\n        /* \"#utility.yul\":10072:10106   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":10052:10070   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10045:10107   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":10123:10141   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10116:10152   */\n      mstore\n        /* \"#utility.yul\":10169:10188   */\n      0x84\n      add\n        /* \"contracts/powerful-erc20.sol\":12206:12314  require(... */\n      tag_205\n        /* \"#utility.yul\":9792:10194   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":12206:12314  require(... */\n    tag_376:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":12348:12365  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"contracts/powerful-erc20.sol\":12348:12357  _balances */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":12348:12365  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/powerful-erc20.sol\":12368:12390  senderBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"contracts/powerful-erc20.sol\":12348:12390  _balances[sender] = senderBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/powerful-erc20.sol\":12410:12430  _balances[recipient] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/powerful-erc20.sol\":12410:12440  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"contracts/powerful-erc20.sol\":12384:12390  amount */\n      dup5\n      swap3\n        /* \"contracts/powerful-erc20.sol\":12348:12357  _balances */\n      swap1\n        /* \"contracts/powerful-erc20.sol\":12410:12440  _balances[recipient] += amount */\n      tag_379\n      swap1\n        /* \"contracts/powerful-erc20.sol\":12384:12390  amount */\n      dup5\n      swap1\n        /* \"contracts/powerful-erc20.sol\":12410:12440  _balances[recipient] += amount */\n      tag_236\n      jump\t// in\n    tag_379:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/powerful-erc20.sol\":12473:12482  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":12456:12491  Transfer(sender, recipient, amount) */\n      and\n        /* \"contracts/powerful-erc20.sol\":12465:12471  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":12456:12491  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/powerful-erc20.sol\":12484:12490  amount */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":12456:12491  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_380\n      swap2\n        /* \"#utility.yul\":7148:7173   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7136:7138   */\n      0x20\n        /* \"#utility.yul\":7121:7139   */\n      add\n      swap1\n        /* \"#utility.yul\":7002:7179   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":12456:12491  Transfer(sender, recipient, amount) */\n    tag_380:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/powerful-erc20.sol\":12502:12548  _afterTokenTransfer(sender, recipient, amount) */\n    tag_381:\n        /* \"contracts/powerful-erc20.sol\":11925:12555  {... */\n      pop\n        /* \"contracts/powerful-erc20.sol\":11808:12555  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":55165:55649  function _checkRole(bytes32 role, address account) internal view {... */\n    tag_214:\n        /* \"contracts/powerful-erc20.sol\":55245:55267  hasRole(role, account) */\n      tag_383\n        /* \"contracts/powerful-erc20.sol\":55253:55257  role */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":55259:55266  account */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":55245:55252  hasRole */\n      tag_137\n        /* \"contracts/powerful-erc20.sol\":55245:55267  hasRole(role, account) */\n      jump\t// in\n    tag_383:\n        /* \"contracts/powerful-erc20.sol\":55240:55643  if (!hasRole(role, account)) {... */\n      tag_229\n      jumpi\n        /* \"contracts/powerful-erc20.sol\":55428:55469  Strings.toHexString(uint160(account), 20) */\n      tag_385\n        /* \"contracts/powerful-erc20.sol\":55456:55463  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":55428:55469  Strings.toHexString(uint160(account), 20) */\n      and\n        /* \"contracts/powerful-erc20.sol\":55466:55468  20 */\n      0x14\n        /* \"contracts/powerful-erc20.sol\":55428:55447  Strings.toHexString */\n      tag_386\n        /* \"contracts/powerful-erc20.sol\":55428:55469  Strings.toHexString(uint160(account), 20) */\n      jump\t// in\n    tag_385:\n        /* \"contracts/powerful-erc20.sol\":55540:55578  Strings.toHexString(uint256(role), 32) */\n      tag_387\n        /* \"contracts/powerful-erc20.sol\":55568:55572  role */\n      dup4\n        /* \"contracts/powerful-erc20.sol\":55575:55577  32 */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":55540:55559  Strings.toHexString */\n      tag_386\n        /* \"contracts/powerful-erc20.sol\":55540:55578  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_387:\n        /* \"contracts/powerful-erc20.sol\":55335:55600  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_388\n      swap3\n      swap2\n      swap1\n      tag_389\n      jump\t// in\n    tag_388:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n      shl(0xe5, 0x461bcd)\n        /* \"contracts/powerful-erc20.sol\":55283:55632  revert(... */\n      dup3\n      mstore\n      tag_205\n      swap2\n      0x04\n      add\n      tag_57\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":58619:58843  function _grantRole(bytes32 role, address account) private {... */\n    tag_217:\n        /* \"contracts/powerful-erc20.sol\":58693:58715  hasRole(role, account) */\n      tag_392\n        /* \"contracts/powerful-erc20.sol\":58701:58705  role */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":58707:58714  account */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":58693:58700  hasRole */\n      tag_137\n        /* \"contracts/powerful-erc20.sol\":58693:58715  hasRole(role, account) */\n      jump\t// in\n    tag_392:\n        /* \"contracts/powerful-erc20.sol\":58688:58837  if (!hasRole(role, account)) {... */\n      tag_229\n      jumpi\n        /* \"contracts/powerful-erc20.sol\":58731:58743  _roles[role] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/powerful-erc20.sol\":58731:58737  _roles */\n      0x06\n        /* \"contracts/powerful-erc20.sol\":58731:58743  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":58731:58760  _roles[role].members[account] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/powerful-erc20.sol\":58731:58767  _roles[role].members[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/powerful-erc20.sol\":58763:58767  true */\n      0x01\n        /* \"contracts/powerful-erc20.sol\":58731:58767  _roles[role].members[account] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/powerful-erc20.sol\":58813:58825  _msgSender() */\n      tag_394\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n      swap1\n        /* \"contracts/powerful-erc20.sol\":4085:4181  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/powerful-erc20.sol\":58813:58825  _msgSender() */\n    tag_394:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":58786:58826  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"contracts/powerful-erc20.sol\":58804:58811  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":58786:58826  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"contracts/powerful-erc20.sol\":58798:58802  role */\n      dup4\n        /* \"contracts/powerful-erc20.sol\":58786:58826  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/powerful-erc20.sol\":58619:58843  function _grantRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":58849:59074  function _revokeRole(bytes32 role, address account) private {... */\n    tag_230:\n        /* \"contracts/powerful-erc20.sol\":58923:58945  hasRole(role, account) */\n      tag_397\n        /* \"contracts/powerful-erc20.sol\":58931:58935  role */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":58937:58944  account */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":58923:58930  hasRole */\n      tag_137\n        /* \"contracts/powerful-erc20.sol\":58923:58945  hasRole(role, account) */\n      jump\t// in\n    tag_397:\n        /* \"contracts/powerful-erc20.sol\":58919:59068  if (hasRole(role, account)) {... */\n      iszero\n      tag_229\n      jumpi\n        /* \"contracts/powerful-erc20.sol\":58993:58998  false */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":58961:58973  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/powerful-erc20.sol\":58961:58967  _roles */\n      0x06\n        /* \"contracts/powerful-erc20.sol\":58961:58973  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":58961:58990  _roles[role].members[account] */\n      dup6\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/powerful-erc20.sol\":58961:58998  _roles[role].members[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/powerful-erc20.sol\":59017:59057  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n      swap3\n        /* \"contracts/powerful-erc20.sol\":58961:58973  _roles[role] */\n      dup6\n      swap2\n        /* \"contracts/powerful-erc20.sol\":59017:59057  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"contracts/powerful-erc20.sol\":58993:58998  false */\n      swap1\n        /* \"contracts/powerful-erc20.sol\":59017:59057  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"contracts/powerful-erc20.sol\":58849:59074  function _revokeRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":40318:40833  function _checkAndCallTransfer(... */\n    tag_241:\n        /* \"contracts/powerful-erc20.sol\":40483:40487  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":40504:40524  recipient.isContract */\n      dup5\n      and\n        /* \"contracts/powerful-erc20.sol\":19594:19614  extcodesize(account) */\n      extcodesize\n        /* \"contracts/powerful-erc20.sol\":40499:40565  if (!recipient.isContract()) {... */\n      tag_403\n      jumpi\n      pop\n        /* \"contracts/powerful-erc20.sol\":40549:40554  false */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":40542:40554  return false */\n      jump(tag_313)\n        /* \"contracts/powerful-erc20.sol\":40499:40565  if (!recipient.isContract()) {... */\n    tag_403:\n        /* \"contracts/powerful-erc20.sol\":40590:40730  IERC1363Receiver(recipient).onTransferReceived(... */\n      mload(0x40)\n      shl(0xe2, 0x2229f297)\n      dup2\n      mstore\n        /* \"contracts/powerful-erc20.sol\":40574:40587  bytes4 retval */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":40590:40636  IERC1363Receiver(recipient).onTransferReceived */\n      dup7\n      and\n      swap1\n      0x88a7ca5c\n      swap1\n        /* \"contracts/powerful-erc20.sol\":40590:40730  IERC1363Receiver(recipient).onTransferReceived(... */\n      tag_405\n      swap1\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n      swap1\n        /* \"contracts/powerful-erc20.sol\":40676:40682  sender */\n      dup11\n      swap1\n        /* \"contracts/powerful-erc20.sol\":40696:40702  amount */\n      dup10\n      swap1\n        /* \"contracts/powerful-erc20.sol\":40716:40720  data */\n      dup10\n      swap1\n        /* \"contracts/powerful-erc20.sol\":40590:40730  IERC1363Receiver(recipient).onTransferReceived(... */\n      0x04\n      add\n      tag_406\n      jump\t// in\n    tag_405:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_407\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_407:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_409\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_409:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_410\n      swap2\n      swap1\n      tag_411\n      jump\t// in\n    tag_410:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/powerful-erc20.sol\":40748:40825  retval ==... */\n      and\n      shl(0xe2, 0x2229f297)\n      eq\n      swap2\n      pop\n      pop\n        /* \"contracts/powerful-erc20.sol\":40318:40833  function _checkAndCallTransfer(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":61028:61198  function _mint(address account, uint256 amount)... */\n    tag_251:\n        /* \"contracts/powerful-erc20.sol\":59423:59457  hasRole(MINTER_ROLE, _msgSender()) */\n      tag_413\n        /* \"contracts/powerful-erc20.sol\":59216:59235  keccak256(\"MINTER\") */\n      0xf0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc9\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":54711:54884  function hasRole(bytes32 role, address account)... */\n      tag_137\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":59423:59457  hasRole(MINTER_ROLE, _msgSender()) */\n    tag_413:\n        /* \"contracts/powerful-erc20.sol\":59402:59526  require(... */\n      tag_415\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10401:10403   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":59402:59526  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10383:10404   */\n      mstore\n        /* \"#utility.yul\":10440:10442   */\n      0x2b\n        /* \"#utility.yul\":10420:10438   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10413:10443   */\n      mstore\n        /* \"#utility.yul\":10479:10513   */\n      0x526f6c65733a2063616c6c657220646f6573206e6f7420686176652074686520\n        /* \"#utility.yul\":10459:10477   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10452:10514   */\n      mstore\n      shl(0xa8, 0x4d494e54455220726f6c65)\n        /* \"#utility.yul\":10530:10548   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10523:10564   */\n      mstore\n        /* \"#utility.yul\":10581:10600   */\n      0x84\n      add\n        /* \"contracts/powerful-erc20.sol\":59402:59526  require(... */\n      tag_205\n        /* \"#utility.yul\":10199:10606   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":59402:59526  require(... */\n    tag_415:\n        /* \"contracts/powerful-erc20.sol\":61163:61191  super._mint(account, amount) */\n      tag_229\n        /* \"contracts/powerful-erc20.sol\":61175:61182  account */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":61184:61190  amount */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":61163:61174  super._mint */\n      tag_420\n        /* \"contracts/powerful-erc20.sol\":61163:61191  super._mint(account, amount) */\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":13540:14116  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_255:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":13623:13644  account != address(0) */\n      dup3\n      and\n        /* \"contracts/powerful-erc20.sol\":13615:13682  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_422\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12395:12397   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":13615:13682  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12377:12398   */\n      mstore\n        /* \"#utility.yul\":12434:12436   */\n      0x21\n        /* \"#utility.yul\":12414:12432   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12407:12437   */\n      mstore\n        /* \"#utility.yul\":12473:12507   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":12453:12471   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12446:12508   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":12524:12542   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12517:12548   */\n      mstore\n        /* \"#utility.yul\":12565:12584   */\n      0x84\n      add\n        /* \"contracts/powerful-erc20.sol\":13615:13682  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_205\n        /* \"#utility.yul\":12193:12590   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":13615:13682  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_422:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":13778:13796  _balances[account] */\n      dup3\n      and\n        /* \"contracts/powerful-erc20.sol\":13753:13775  uint256 accountBalance */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":13778:13796  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/powerful-erc20.sol\":13814:13838  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/powerful-erc20.sol\":13806:13877  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_426\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8375:8377   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":13806:13877  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8357:8378   */\n      mstore\n        /* \"#utility.yul\":8414:8416   */\n      0x22\n        /* \"#utility.yul\":8394:8412   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8387:8417   */\n      mstore\n        /* \"#utility.yul\":8453:8487   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":8433:8451   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8426:8488   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":8504:8522   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8497:8529   */\n      mstore\n        /* \"#utility.yul\":8546:8565   */\n      0x84\n      add\n        /* \"contracts/powerful-erc20.sol\":13806:13877  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_205\n        /* \"#utility.yul\":8173:8571   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":13806:13877  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_426:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":13911:13929  _balances[account] */\n      dup4\n      and\n        /* \"contracts/powerful-erc20.sol\":13911:13920  _balances */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":13911:13929  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/powerful-erc20.sol\":13932:13955  accountBalance - amount */\n      dup4\n      dup4\n      sub\n        /* \"contracts/powerful-erc20.sol\":13911:13955  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/powerful-erc20.sol\":13975:13987  _totalSupply */\n      0x02\n        /* \"contracts/powerful-erc20.sol\":13975:13997  _totalSupply -= amount */\n      dup1\n      sload\n        /* \"contracts/powerful-erc20.sol\":13949:13955  amount */\n      dup5\n      swap3\n        /* \"contracts/powerful-erc20.sol\":13911:13920  _balances */\n      swap1\n        /* \"contracts/powerful-erc20.sol\":13975:13997  _totalSupply -= amount */\n      tag_429\n      swap1\n        /* \"contracts/powerful-erc20.sol\":13949:13955  amount */\n      dup5\n      swap1\n        /* \"contracts/powerful-erc20.sol\":13975:13997  _totalSupply -= amount */\n      tag_430\n      jump\t// in\n    tag_429:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/powerful-erc20.sol\":14013:14050  Transfer(account, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":7148:7173   */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/powerful-erc20.sol\":14039:14040  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":14013:14050  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":7136:7138   */\n      0x20\n        /* \"#utility.yul\":7121:7139   */\n      add\n        /* \"contracts/powerful-erc20.sol\":14013:14050  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/powerful-erc20.sol\":56201:56382  function grantRole(bytes32 role, address account)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":43820:43989  function _setOwner(address newOwner) private {... */\n    tag_265:\n        /* \"contracts/powerful-erc20.sol\":43894:43900  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":43910:43927  _owner = newOwner */\n      dup4\n      dup2\n      and\n        /* \"contracts/powerful-erc20.sol\":43894:43900  _owner */\n      0x0100\n        /* \"contracts/powerful-erc20.sol\":43910:43927  _owner = newOwner */\n      dup2\n      dup2\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      dup6\n      and\n      or\n      swap1\n      swap5\n      sstore\n        /* \"contracts/powerful-erc20.sol\":43942:43982  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/powerful-erc20.sol\":43894:43900  _owner */\n      swap4\n      swap1\n      swap3\n      div\n      and\n      swap2\n      dup3\n      swap1\n        /* \"contracts/powerful-erc20.sol\":43942:43982  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/powerful-erc20.sol\":43875:43891  address oldOwner */\n      0x00\n      swap1\n        /* \"contracts/powerful-erc20.sol\":43942:43982  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/powerful-erc20.sol\":43865:43989  {... */\n      pop\n        /* \"contracts/powerful-erc20.sol\":43820:43989  function _setOwner(address newOwner) private {... */\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":61358:61451  function _finishMinting() internal override onlyOwner {... */\n    tag_280:\n        /* \"contracts/powerful-erc20.sol\":42790:42796  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":42930:42953  owner() == _msgSender() */\n      eq\n        /* \"contracts/powerful-erc20.sol\":42922:42990  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_437\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_262\n      jump\t// in\n    tag_437:\n        /* \"contracts/powerful-erc20.sol\":61422:61444  super._finishMinting() */\n      tag_264\n        /* \"contracts/powerful-erc20.sol\":61422:61442  super._finishMinting */\n      tag_441\n        /* \"contracts/powerful-erc20.sol\":61422:61444  super._finishMinting() */\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":41283:41731  function _checkAndCallApprove(... */\n    tag_321:\n        /* \"contracts/powerful-erc20.sol\":41421:41425  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":41442:41460  spender.isContract */\n      dup5\n      and\n        /* \"contracts/powerful-erc20.sol\":19594:19614  extcodesize(account) */\n      extcodesize\n        /* \"contracts/powerful-erc20.sol\":41437:41501  if (!spender.isContract()) {... */\n      tag_444\n      jumpi\n      pop\n        /* \"contracts/powerful-erc20.sol\":41485:41490  false */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":41478:41490  return false */\n      jump(tag_198)\n        /* \"contracts/powerful-erc20.sol\":41437:41501  if (!spender.isContract()) {... */\n    tag_444:\n        /* \"contracts/powerful-erc20.sol\":41526:41643  IERC1363Spender(spender).onApprovalReceived(... */\n      mload(0x40)\n      shl(0xe4, 0x07b04a2d)\n      dup2\n      mstore\n        /* \"contracts/powerful-erc20.sol\":41510:41523  bytes4 retval */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":41526:41569  IERC1363Spender(spender).onApprovalReceived */\n      dup7\n      and\n      swap1\n      0x7b04a2d0\n      swap1\n        /* \"contracts/powerful-erc20.sol\":41526:41643  IERC1363Spender(spender).onApprovalReceived(... */\n      tag_446\n      swap1\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n      swap1\n        /* \"contracts/powerful-erc20.sol\":41609:41615  amount */\n      dup9\n      swap1\n        /* \"contracts/powerful-erc20.sol\":41629:41633  data */\n      dup9\n      swap1\n        /* \"contracts/powerful-erc20.sol\":41526:41643  IERC1363Spender(spender).onApprovalReceived(... */\n      0x04\n      add\n      tag_447\n      jump\t// in\n    tag_446:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_448\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_448:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_450\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_450:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_451\n      swap2\n      swap1\n      tag_411\n      jump\t// in\n    tag_451:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/powerful-erc20.sol\":41661:41723  retval == IERC1363Spender(spender).onApprovalReceived.selector */\n      and\n      shl(0xe4, 0x07b04a2d)\n      eq\n      swap2\n      pop\n      pop\n        /* \"contracts/powerful-erc20.sol\":41283:41731  function _checkAndCallApprove(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":35622:35903  function supportsInterface(bytes4 interfaceId)... */\n    tag_358:\n        /* \"contracts/powerful-erc20.sol\":35764:35768  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/powerful-erc20.sol\":35803:35844  interfaceId == type(IERC1363).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0xb0202a11)\n      eq\n      dup1\n        /* \"contracts/powerful-erc20.sol\":35803:35896  interfaceId == type(IERC1363).interfaceId ||... */\n      tag_182\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/powerful-erc20.sol\":28589:28629  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"contracts/powerful-erc20.sol\":35860:35896  super.supportsInterface(interfaceId) */\n      tag_182\n        /* \"contracts/powerful-erc20.sol\":28437:28636  function supportsInterface(bytes4 interfaceId)... */\n      jump\n        /* \"contracts/powerful-erc20.sol\":51448:51917  function toHexString(uint256 value, uint256 length)... */\n    tag_386:\n        /* \"contracts/powerful-erc20.sol\":51547:51560  string memory */\n      0x60\n        /* \"contracts/powerful-erc20.sol\":51576:51595  bytes memory buffer */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":51608:51618  2 * length */\n      tag_459\n        /* \"contracts/powerful-erc20.sol\":51612:51618  length */\n      dup4\n        /* \"contracts/powerful-erc20.sol\":51608:51609  2 */\n      0x02\n        /* \"contracts/powerful-erc20.sol\":51608:51618  2 * length */\n      tag_460\n      jump\t// in\n    tag_459:\n        /* \"contracts/powerful-erc20.sol\":51608:51622  2 * length + 2 */\n      tag_461\n      swap1\n        /* \"contracts/powerful-erc20.sol\":51621:51622  2 */\n      0x02\n        /* \"contracts/powerful-erc20.sol\":51608:51622  2 * length + 2 */\n      tag_236\n      jump\t// in\n    tag_461:\n        /* \"contracts/powerful-erc20.sol\":51598:51623  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_463\n      jumpi\n      tag_463\n      tag_464\n      jump\t// in\n    tag_463:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_465\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_465:\n      pop\n        /* \"contracts/powerful-erc20.sol\":51576:51623  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n      shl(0xfc, 0x03)\n        /* \"contracts/powerful-erc20.sol\":51633:51639  buffer */\n      dup2\n        /* \"contracts/powerful-erc20.sol\":51640:51641  0 */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":51633:51642  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_467\n      jumpi\n      tag_467\n      tag_468\n      jump\t// in\n    tag_467:\n      0x20\n      add\n      add\n        /* \"contracts/powerful-erc20.sol\":51633:51648  buffer[0] = \"0\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n      shl(0xfb, 0x0f)\n        /* \"contracts/powerful-erc20.sol\":51658:51664  buffer */\n      dup2\n        /* \"contracts/powerful-erc20.sol\":51665:51666  1 */\n      0x01\n        /* \"contracts/powerful-erc20.sol\":51658:51667  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_470\n      jumpi\n      tag_470\n      tag_468\n      jump\t// in\n    tag_470:\n      0x20\n      add\n      add\n        /* \"contracts/powerful-erc20.sol\":51658:51673  buffer[1] = \"x\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/powerful-erc20.sol\":51688:51697  uint256 i */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":51700:51710  2 * length */\n      tag_474\n        /* \"contracts/powerful-erc20.sol\":51704:51710  length */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":51700:51701  2 */\n      0x02\n        /* \"contracts/powerful-erc20.sol\":51700:51710  2 * length */\n      tag_460\n      jump\t// in\n    tag_474:\n        /* \"contracts/powerful-erc20.sol\":51700:51714  2 * length + 1 */\n      tag_475\n      swap1\n        /* \"contracts/powerful-erc20.sol\":51713:51714  1 */\n      0x01\n        /* \"contracts/powerful-erc20.sol\":51700:51714  2 * length + 1 */\n      tag_236\n      jump\t// in\n    tag_475:\n        /* \"contracts/powerful-erc20.sol\":51688:51714  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"contracts/powerful-erc20.sol\":51683:51815  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_471:\n        /* \"contracts/powerful-erc20.sol\":51720:51721  1 */\n      0x01\n        /* \"contracts/powerful-erc20.sol\":51716:51717  i */\n      dup2\n        /* \"contracts/powerful-erc20.sol\":51716:51721  i > 1 */\n      gt\n        /* \"contracts/powerful-erc20.sol\":51683:51815  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_472\n      jumpi\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"contracts/powerful-erc20.sol\":51767:51772  value */\n      dup6\n        /* \"contracts/powerful-erc20.sol\":51775:51778  0xf */\n      0x0f\n        /* \"contracts/powerful-erc20.sol\":51767:51778  value & 0xf */\n      and\n        /* \"contracts/powerful-erc20.sol\":51754:51779  _HEX_SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_477\n      jumpi\n      tag_477\n      tag_468\n      jump\t// in\n    tag_477:\n      byte\n      0xf8\n      shl\n        /* \"contracts/powerful-erc20.sol\":51742:51748  buffer */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":51749:51750  i */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":51742:51751  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_479\n      jumpi\n      tag_479\n      tag_468\n      jump\t// in\n    tag_479:\n      0x20\n      add\n      add\n        /* \"contracts/powerful-erc20.sol\":51742:51779  buffer[i] = _HEX_SYMBOLS[value & 0xf] */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/powerful-erc20.sol\":51803:51804  4 */\n      0x04\n        /* \"contracts/powerful-erc20.sol\":51793:51804  value >>= 4 */\n      swap5\n      swap1\n      swap5\n      shr\n      swap4\n        /* \"contracts/powerful-erc20.sol\":51723:51726  --i */\n      tag_480\n      dup2\n      tag_481\n      jump\t// in\n    tag_480:\n      swap1\n      pop\n        /* \"contracts/powerful-erc20.sol\":51683:51815  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_471)\n    tag_472:\n      pop\n        /* \"contracts/powerful-erc20.sol\":51832:51842  value == 0 */\n      dup4\n      iszero\n        /* \"contracts/powerful-erc20.sol\":51824:51879  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7610:7612   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":51824:51879  require(value == 0, \"Strings: hex length insufficient\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7592:7613   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7629:7647   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7622:7652   */\n      mstore\n        /* \"#utility.yul\":7688:7722   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":7668:7686   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7661:7723   */\n      mstore\n        /* \"#utility.yul\":7740:7758   */\n      0x64\n      add\n        /* \"contracts/powerful-erc20.sol\":51824:51879  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_205\n        /* \"#utility.yul\":7408:7764   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":18299:18537  function _mint(address account, uint256 amount) internal virtual override {... */\n    tag_420:\n        /* \"contracts/powerful-erc20.sol\":18235:18239  _cap */\n      immutable(\"0x99234e8bb0caccda3914a3f5815f9f0b8e1efd8c0710474b7e1f8f99bf3b0eb8\")\n        /* \"contracts/powerful-erc20.sol\":18426:18432  amount */\n      dup2\n        /* \"contracts/powerful-erc20.sol\":18404:18423  ERC20.totalSupply() */\n      tag_488\n        /* \"contracts/powerful-erc20.sol\":7472:7484  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"contracts/powerful-erc20.sol\":7385:7491  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/powerful-erc20.sol\":18404:18423  ERC20.totalSupply() */\n    tag_488:\n        /* \"contracts/powerful-erc20.sol\":18404:18432  ERC20.totalSupply() + amount */\n      tag_489\n      swap2\n      swap1\n      tag_236\n      jump\t// in\n    tag_489:\n        /* \"contracts/powerful-erc20.sol\":18404:18441  ERC20.totalSupply() + amount <= cap() */\n      gt\n      iszero\n        /* \"contracts/powerful-erc20.sol\":18383:18492  require(... */\n      tag_490\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13203:13205   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":18383:18492  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13185:13206   */\n      mstore\n        /* \"#utility.yul\":13242:13244   */\n      0x19\n        /* \"#utility.yul\":13222:13240   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13215:13245   */\n      mstore\n        /* \"#utility.yul\":13281:13308   */\n      0x45524332304361707065643a2063617020657863656564656400000000000000\n        /* \"#utility.yul\":13261:13279   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13254:13309   */\n      mstore\n        /* \"#utility.yul\":13326:13344   */\n      0x64\n      add\n        /* \"contracts/powerful-erc20.sol\":18383:18492  require(... */\n      tag_205\n        /* \"#utility.yul\":13001:13350   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":18383:18492  require(... */\n    tag_490:\n        /* \"contracts/powerful-erc20.sol\":18502:18530  super._mint(account, amount) */\n      tag_229\n        /* \"contracts/powerful-erc20.sol\":18514:18521  account */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":18523:18529  amount */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":18502:18513  super._mint */\n      tag_180\n        /* \"contracts/powerful-erc20.sol\":18502:18530  super._mint(account, amount) */\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":46776:46889  function _finishMinting() internal virtual {... */\n    tag_441:\n        /* \"contracts/powerful-erc20.sol\":46829:46845  _mintingFinished */\n      0x05\n        /* \"contracts/powerful-erc20.sol\":46829:46852  _mintingFinished = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/powerful-erc20.sol\":46848:46852  true */\n      0x01\n        /* \"contracts/powerful-erc20.sol\":46829:46852  _mintingFinished = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/powerful-erc20.sol\":46868:46882  MintFinished() */\n      mload(0x40)\n      0xae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa08\n      swap1\n        /* \"contracts/powerful-erc20.sol\":46829:46845  _mintingFinished */\n      0x00\n      swap1\n        /* \"contracts/powerful-erc20.sol\":46868:46882  MintFinished() */\n      log1\n        /* \"contracts/powerful-erc20.sol\":46776:46889  function _finishMinting() internal virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_497:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_499\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_499:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:910   */\n    tag_500:\n        /* \"#utility.yul\":234:239   */\n      0x00\n        /* \"#utility.yul\":287:290   */\n      dup3\n        /* \"#utility.yul\":280:284   */\n      0x1f\n        /* \"#utility.yul\":272:278   */\n      dup4\n        /* \"#utility.yul\":268:285   */\n      add\n        /* \"#utility.yul\":264:291   */\n      slt\n        /* \"#utility.yul\":254:309   */\n      tag_502\n      jumpi\n        /* \"#utility.yul\":305:306   */\n      0x00\n        /* \"#utility.yul\":302:303   */\n      dup1\n        /* \"#utility.yul\":295:307   */\n      revert\n        /* \"#utility.yul\":254:309   */\n    tag_502:\n        /* \"#utility.yul\":341:347   */\n      dup2\n        /* \"#utility.yul\":328:348   */\n      calldataload\n        /* \"#utility.yul\":367:385   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":404:406   */\n      dup1\n        /* \"#utility.yul\":400:402   */\n      dup3\n        /* \"#utility.yul\":397:407   */\n      gt\n        /* \"#utility.yul\":394:430   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":410:428   */\n      tag_504\n      tag_464\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":485:487   */\n      0x40\n        /* \"#utility.yul\":479:488   */\n      mload\n        /* \"#utility.yul\":453:455   */\n      0x1f\n        /* \"#utility.yul\":539:552   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":535:557   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":559:561   */\n      0x3f\n        /* \"#utility.yul\":531:562   */\n      add\n        /* \"#utility.yul\":527:567   */\n      and\n        /* \"#utility.yul\":515:568   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":583:601   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":603:625   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":580:626   */\n      or\n        /* \"#utility.yul\":577:649   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":629:647   */\n      tag_506\n      tag_464\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":669:679   */\n      dup2\n        /* \"#utility.yul\":665:667   */\n      0x40\n        /* \"#utility.yul\":658:680   */\n      mstore\n        /* \"#utility.yul\":704:706   */\n      dup4\n        /* \"#utility.yul\":696:702   */\n      dup2\n        /* \"#utility.yul\":689:707   */\n      mstore\n        /* \"#utility.yul\":750:753   */\n      dup7\n        /* \"#utility.yul\":743:747   */\n      0x20\n        /* \"#utility.yul\":738:740   */\n      dup6\n        /* \"#utility.yul\":730:736   */\n      dup9\n        /* \"#utility.yul\":726:741   */\n      add\n        /* \"#utility.yul\":722:748   */\n      add\n        /* \"#utility.yul\":719:754   */\n      gt\n        /* \"#utility.yul\":716:771   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":767:768   */\n      0x00\n        /* \"#utility.yul\":764:765   */\n      dup1\n        /* \"#utility.yul\":757:769   */\n      revert\n        /* \"#utility.yul\":716:771   */\n    tag_507:\n        /* \"#utility.yul\":831:833   */\n      dup4\n        /* \"#utility.yul\":824:828   */\n      0x20\n        /* \"#utility.yul\":816:822   */\n      dup8\n        /* \"#utility.yul\":812:829   */\n      add\n        /* \"#utility.yul\":805:809   */\n      0x20\n        /* \"#utility.yul\":797:803   */\n      dup4\n        /* \"#utility.yul\":793:810   */\n      add\n        /* \"#utility.yul\":780:834   */\n      calldatacopy\n        /* \"#utility.yul\":878:879   */\n      0x00\n        /* \"#utility.yul\":871:875   */\n      0x20\n        /* \"#utility.yul\":866:868   */\n      dup6\n        /* \"#utility.yul\":858:864   */\n      dup4\n        /* \"#utility.yul\":854:869   */\n      add\n        /* \"#utility.yul\":850:876   */\n      add\n        /* \"#utility.yul\":843:880   */\n      mstore\n        /* \"#utility.yul\":898:904   */\n      dup1\n        /* \"#utility.yul\":889:904   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:910   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":915:1101   */\n    tag_118:\n        /* \"#utility.yul\":974:980   */\n      0x00\n        /* \"#utility.yul\":1027:1029   */\n      0x20\n        /* \"#utility.yul\":1015:1024   */\n      dup3\n        /* \"#utility.yul\":1006:1013   */\n      dup5\n        /* \"#utility.yul\":1002:1025   */\n      sub\n        /* \"#utility.yul\":998:1030   */\n      slt\n        /* \"#utility.yul\":995:1047   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":1043:1044   */\n      0x00\n        /* \"#utility.yul\":1040:1041   */\n      dup1\n        /* \"#utility.yul\":1033:1045   */\n      revert\n        /* \"#utility.yul\":995:1047   */\n    tag_509:\n        /* \"#utility.yul\":1066:1095   */\n      tag_198\n        /* \"#utility.yul\":1085:1094   */\n      dup3\n        /* \"#utility.yul\":1066:1095   */\n      tag_497\n      jump\t// in\n        /* \"#utility.yul\":1106:1366   */\n    tag_174:\n        /* \"#utility.yul\":1174:1180   */\n      0x00\n        /* \"#utility.yul\":1182:1188   */\n      dup1\n        /* \"#utility.yul\":1235:1237   */\n      0x40\n        /* \"#utility.yul\":1223:1232   */\n      dup4\n        /* \"#utility.yul\":1214:1221   */\n      dup6\n        /* \"#utility.yul\":1210:1233   */\n      sub\n        /* \"#utility.yul\":1206:1238   */\n      slt\n        /* \"#utility.yul\":1203:1255   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":1251:1252   */\n      0x00\n        /* \"#utility.yul\":1248:1249   */\n      dup1\n        /* \"#utility.yul\":1241:1253   */\n      revert\n        /* \"#utility.yul\":1203:1255   */\n    tag_512:\n        /* \"#utility.yul\":1274:1303   */\n      tag_513\n        /* \"#utility.yul\":1293:1302   */\n      dup4\n        /* \"#utility.yul\":1274:1303   */\n      tag_497\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":1264:1303   */\n      swap2\n      pop\n        /* \"#utility.yul\":1322:1360   */\n      tag_514\n        /* \"#utility.yul\":1356:1358   */\n      0x20\n        /* \"#utility.yul\":1345:1354   */\n      dup5\n        /* \"#utility.yul\":1341:1359   */\n      add\n        /* \"#utility.yul\":1322:1360   */\n      tag_497\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":1312:1360   */\n      swap1\n      pop\n        /* \"#utility.yul\":1106:1366   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1371:1699   */\n    tag_73:\n        /* \"#utility.yul\":1448:1454   */\n      0x00\n        /* \"#utility.yul\":1456:1462   */\n      dup1\n        /* \"#utility.yul\":1464:1470   */\n      0x00\n        /* \"#utility.yul\":1517:1519   */\n      0x60\n        /* \"#utility.yul\":1505:1514   */\n      dup5\n        /* \"#utility.yul\":1496:1503   */\n      dup7\n        /* \"#utility.yul\":1492:1515   */\n      sub\n        /* \"#utility.yul\":1488:1520   */\n      slt\n        /* \"#utility.yul\":1485:1537   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":1533:1534   */\n      0x00\n        /* \"#utility.yul\":1530:1531   */\n      dup1\n        /* \"#utility.yul\":1523:1535   */\n      revert\n        /* \"#utility.yul\":1485:1537   */\n    tag_516:\n        /* \"#utility.yul\":1556:1585   */\n      tag_517\n        /* \"#utility.yul\":1575:1584   */\n      dup5\n        /* \"#utility.yul\":1556:1585   */\n      tag_497\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":1546:1585   */\n      swap3\n      pop\n        /* \"#utility.yul\":1604:1642   */\n      tag_518\n        /* \"#utility.yul\":1638:1640   */\n      0x20\n        /* \"#utility.yul\":1627:1636   */\n      dup6\n        /* \"#utility.yul\":1623:1641   */\n      add\n        /* \"#utility.yul\":1604:1642   */\n      tag_497\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":1594:1642   */\n      swap2\n      pop\n        /* \"#utility.yul\":1689:1691   */\n      0x40\n        /* \"#utility.yul\":1678:1687   */\n      dup5\n        /* \"#utility.yul\":1674:1692   */\n      add\n        /* \"#utility.yul\":1661:1693   */\n      calldataload\n        /* \"#utility.yul\":1651:1693   */\n      swap1\n      pop\n        /* \"#utility.yul\":1371:1699   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1704:2241   */\n    tag_155:\n        /* \"#utility.yul\":1799:1805   */\n      0x00\n        /* \"#utility.yul\":1807:1813   */\n      dup1\n        /* \"#utility.yul\":1815:1821   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup1\n        /* \"#utility.yul\":1876:1879   */\n      0x80\n        /* \"#utility.yul\":1864:1873   */\n      dup6\n        /* \"#utility.yul\":1855:1862   */\n      dup8\n        /* \"#utility.yul\":1851:1874   */\n      sub\n        /* \"#utility.yul\":1847:1880   */\n      slt\n        /* \"#utility.yul\":1844:1897   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":1893:1894   */\n      0x00\n        /* \"#utility.yul\":1890:1891   */\n      dup1\n        /* \"#utility.yul\":1883:1895   */\n      revert\n        /* \"#utility.yul\":1844:1897   */\n    tag_520:\n        /* \"#utility.yul\":1916:1945   */\n      tag_521\n        /* \"#utility.yul\":1935:1944   */\n      dup6\n        /* \"#utility.yul\":1916:1945   */\n      tag_497\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":1906:1945   */\n      swap4\n      pop\n        /* \"#utility.yul\":1964:2002   */\n      tag_522\n        /* \"#utility.yul\":1998:2000   */\n      0x20\n        /* \"#utility.yul\":1987:1996   */\n      dup7\n        /* \"#utility.yul\":1983:2001   */\n      add\n        /* \"#utility.yul\":1964:2002   */\n      tag_497\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":1954:2002   */\n      swap3\n      pop\n        /* \"#utility.yul\":2049:2051   */\n      0x40\n        /* \"#utility.yul\":2038:2047   */\n      dup6\n        /* \"#utility.yul\":2034:2052   */\n      add\n        /* \"#utility.yul\":2021:2053   */\n      calldataload\n        /* \"#utility.yul\":2011:2053   */\n      swap2\n      pop\n        /* \"#utility.yul\":2104:2106   */\n      0x60\n        /* \"#utility.yul\":2093:2102   */\n      dup6\n        /* \"#utility.yul\":2089:2107   */\n      add\n        /* \"#utility.yul\":2076:2108   */\n      calldataload\n        /* \"#utility.yul\":2131:2149   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2123:2129   */\n      dup2\n        /* \"#utility.yul\":2120:2150   */\n      gt\n        /* \"#utility.yul\":2117:2167   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":2163:2164   */\n      0x00\n        /* \"#utility.yul\":2160:2161   */\n      dup1\n        /* \"#utility.yul\":2153:2165   */\n      revert\n        /* \"#utility.yul\":2117:2167   */\n    tag_523:\n        /* \"#utility.yul\":2186:2235   */\n      tag_524\n        /* \"#utility.yul\":2227:2234   */\n      dup8\n        /* \"#utility.yul\":2218:2224   */\n      dup3\n        /* \"#utility.yul\":2207:2216   */\n      dup9\n        /* \"#utility.yul\":2203:2225   */\n      add\n        /* \"#utility.yul\":2186:2235   */\n      tag_500\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":2176:2235   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1704:2241   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2246:2500   */\n    tag_60:\n        /* \"#utility.yul\":2314:2320   */\n      0x00\n        /* \"#utility.yul\":2322:2328   */\n      dup1\n        /* \"#utility.yul\":2375:2377   */\n      0x40\n        /* \"#utility.yul\":2363:2372   */\n      dup4\n        /* \"#utility.yul\":2354:2361   */\n      dup6\n        /* \"#utility.yul\":2350:2373   */\n      sub\n        /* \"#utility.yul\":2346:2378   */\n      slt\n        /* \"#utility.yul\":2343:2395   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":2391:2392   */\n      0x00\n        /* \"#utility.yul\":2388:2389   */\n      dup1\n        /* \"#utility.yul\":2381:2393   */\n      revert\n        /* \"#utility.yul\":2343:2395   */\n    tag_526:\n        /* \"#utility.yul\":2414:2443   */\n      tag_527\n        /* \"#utility.yul\":2433:2442   */\n      dup4\n        /* \"#utility.yul\":2414:2443   */\n      tag_497\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":2404:2443   */\n      swap5\n        /* \"#utility.yul\":2490:2492   */\n      0x20\n        /* \"#utility.yul\":2475:2493   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2462:2494   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2246:2500   */\n      jump\t// out\n        /* \"#utility.yul\":2505:2967   */\n    tag_106:\n        /* \"#utility.yul\":2591:2597   */\n      0x00\n        /* \"#utility.yul\":2599:2605   */\n      dup1\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2660:2662   */\n      0x60\n        /* \"#utility.yul\":2648:2657   */\n      dup5\n        /* \"#utility.yul\":2639:2646   */\n      dup7\n        /* \"#utility.yul\":2635:2658   */\n      sub\n        /* \"#utility.yul\":2631:2663   */\n      slt\n        /* \"#utility.yul\":2628:2680   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":2676:2677   */\n      0x00\n        /* \"#utility.yul\":2673:2674   */\n      dup1\n        /* \"#utility.yul\":2666:2678   */\n      revert\n        /* \"#utility.yul\":2628:2680   */\n    tag_529:\n        /* \"#utility.yul\":2699:2728   */\n      tag_530\n        /* \"#utility.yul\":2718:2727   */\n      dup5\n        /* \"#utility.yul\":2699:2728   */\n      tag_497\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":2689:2728   */\n      swap3\n      pop\n        /* \"#utility.yul\":2775:2777   */\n      0x20\n        /* \"#utility.yul\":2764:2773   */\n      dup5\n        /* \"#utility.yul\":2760:2778   */\n      add\n        /* \"#utility.yul\":2747:2779   */\n      calldataload\n        /* \"#utility.yul\":2737:2779   */\n      swap2\n      pop\n        /* \"#utility.yul\":2830:2832   */\n      0x40\n        /* \"#utility.yul\":2819:2828   */\n      dup5\n        /* \"#utility.yul\":2815:2833   */\n      add\n        /* \"#utility.yul\":2802:2834   */\n      calldataload\n        /* \"#utility.yul\":2857:2875   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2849:2855   */\n      dup2\n        /* \"#utility.yul\":2846:2876   */\n      gt\n        /* \"#utility.yul\":2843:2893   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":2889:2890   */\n      0x00\n        /* \"#utility.yul\":2886:2887   */\n      dup1\n        /* \"#utility.yul\":2879:2891   */\n      revert\n        /* \"#utility.yul\":2843:2893   */\n    tag_531:\n        /* \"#utility.yul\":2912:2961   */\n      tag_532\n        /* \"#utility.yul\":2953:2960   */\n      dup7\n        /* \"#utility.yul\":2944:2950   */\n      dup3\n        /* \"#utility.yul\":2933:2942   */\n      dup8\n        /* \"#utility.yul\":2929:2951   */\n      add\n        /* \"#utility.yul\":2912:2961   */\n      tag_500\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":2902:2961   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2505:2967   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2972:3249   */\n    tag_294:\n        /* \"#utility.yul\":3039:3045   */\n      0x00\n        /* \"#utility.yul\":3092:3094   */\n      0x20\n        /* \"#utility.yul\":3080:3089   */\n      dup3\n        /* \"#utility.yul\":3071:3078   */\n      dup5\n        /* \"#utility.yul\":3067:3090   */\n      sub\n        /* \"#utility.yul\":3063:3095   */\n      slt\n        /* \"#utility.yul\":3060:3112   */\n      iszero\n      tag_534\n      jumpi\n        /* \"#utility.yul\":3108:3109   */\n      0x00\n        /* \"#utility.yul\":3105:3106   */\n      dup1\n        /* \"#utility.yul\":3098:3110   */\n      revert\n        /* \"#utility.yul\":3060:3112   */\n    tag_534:\n        /* \"#utility.yul\":3140:3149   */\n      dup2\n        /* \"#utility.yul\":3134:3150   */\n      mload\n        /* \"#utility.yul\":3193:3198   */\n      dup1\n        /* \"#utility.yul\":3186:3199   */\n      iszero\n        /* \"#utility.yul\":3179:3200   */\n      iszero\n        /* \"#utility.yul\":3172:3177   */\n      dup2\n        /* \"#utility.yul\":3169:3201   */\n      eq\n        /* \"#utility.yul\":3159:3219   */\n      tag_198\n      jumpi\n        /* \"#utility.yul\":3215:3216   */\n      0x00\n        /* \"#utility.yul\":3212:3213   */\n      dup1\n        /* \"#utility.yul\":3205:3217   */\n      revert\n        /* \"#utility.yul\":3254:3434   */\n    tag_78:\n        /* \"#utility.yul\":3313:3319   */\n      0x00\n        /* \"#utility.yul\":3366:3368   */\n      0x20\n        /* \"#utility.yul\":3354:3363   */\n      dup3\n        /* \"#utility.yul\":3345:3352   */\n      dup5\n        /* \"#utility.yul\":3341:3364   */\n      sub\n        /* \"#utility.yul\":3337:3369   */\n      slt\n        /* \"#utility.yul\":3334:3386   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":3382:3383   */\n      0x00\n        /* \"#utility.yul\":3379:3380   */\n      dup1\n        /* \"#utility.yul\":3372:3384   */\n      revert\n        /* \"#utility.yul\":3334:3386   */\n    tag_537:\n      pop\n        /* \"#utility.yul\":3405:3428   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3254:3434   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3439:3693   */\n    tag_84:\n        /* \"#utility.yul\":3507:3513   */\n      0x00\n        /* \"#utility.yul\":3515:3521   */\n      dup1\n        /* \"#utility.yul\":3568:3570   */\n      0x40\n        /* \"#utility.yul\":3556:3565   */\n      dup4\n        /* \"#utility.yul\":3547:3554   */\n      dup6\n        /* \"#utility.yul\":3543:3566   */\n      sub\n        /* \"#utility.yul\":3539:3571   */\n      slt\n        /* \"#utility.yul\":3536:3588   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":3584:3585   */\n      0x00\n        /* \"#utility.yul\":3581:3582   */\n      dup1\n        /* \"#utility.yul\":3574:3586   */\n      revert\n        /* \"#utility.yul\":3536:3588   */\n    tag_539:\n        /* \"#utility.yul\":3620:3629   */\n      dup3\n        /* \"#utility.yul\":3607:3630   */\n      calldataload\n        /* \"#utility.yul\":3597:3630   */\n      swap2\n      pop\n        /* \"#utility.yul\":3649:3687   */\n      tag_514\n        /* \"#utility.yul\":3683:3685   */\n      0x20\n        /* \"#utility.yul\":3672:3681   */\n      dup5\n        /* \"#utility.yul\":3668:3686   */\n      add\n        /* \"#utility.yul\":3649:3687   */\n      tag_497\n      jump\t// in\n        /* \"#utility.yul\":3698:3943   */\n    tag_47:\n        /* \"#utility.yul\":3756:3762   */\n      0x00\n        /* \"#utility.yul\":3809:3811   */\n      0x20\n        /* \"#utility.yul\":3797:3806   */\n      dup3\n        /* \"#utility.yul\":3788:3795   */\n      dup5\n        /* \"#utility.yul\":3784:3807   */\n      sub\n        /* \"#utility.yul\":3780:3812   */\n      slt\n        /* \"#utility.yul\":3777:3829   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":3825:3826   */\n      0x00\n        /* \"#utility.yul\":3822:3823   */\n      dup1\n        /* \"#utility.yul\":3815:3827   */\n      revert\n        /* \"#utility.yul\":3777:3829   */\n    tag_542:\n        /* \"#utility.yul\":3864:3873   */\n      dup2\n        /* \"#utility.yul\":3851:3874   */\n      calldataload\n        /* \"#utility.yul\":3883:3913   */\n      tag_198\n        /* \"#utility.yul\":3907:3912   */\n      dup2\n        /* \"#utility.yul\":3883:3913   */\n      tag_544\n      jump\t// in\n        /* \"#utility.yul\":3948:4197   */\n    tag_411:\n        /* \"#utility.yul\":4017:4023   */\n      0x00\n        /* \"#utility.yul\":4070:4072   */\n      0x20\n        /* \"#utility.yul\":4058:4067   */\n      dup3\n        /* \"#utility.yul\":4049:4056   */\n      dup5\n        /* \"#utility.yul\":4045:4068   */\n      sub\n        /* \"#utility.yul\":4041:4073   */\n      slt\n        /* \"#utility.yul\":4038:4090   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":4086:4087   */\n      0x00\n        /* \"#utility.yul\":4083:4084   */\n      dup1\n        /* \"#utility.yul\":4076:4088   */\n      revert\n        /* \"#utility.yul\":4038:4090   */\n    tag_546:\n        /* \"#utility.yul\":4118:4127   */\n      dup2\n        /* \"#utility.yul\":4112:4128   */\n      mload\n        /* \"#utility.yul\":4137:4167   */\n      tag_198\n        /* \"#utility.yul\":4161:4166   */\n      dup2\n        /* \"#utility.yul\":4137:4167   */\n      tag_544\n      jump\t// in\n        /* \"#utility.yul\":4387:4644   */\n    tag_550:\n        /* \"#utility.yul\":4428:4431   */\n      0x00\n        /* \"#utility.yul\":4466:4471   */\n      dup2\n        /* \"#utility.yul\":4460:4472   */\n      mload\n        /* \"#utility.yul\":4493:4499   */\n      dup1\n        /* \"#utility.yul\":4488:4491   */\n      dup5\n        /* \"#utility.yul\":4481:4500   */\n      mstore\n        /* \"#utility.yul\":4509:4572   */\n      tag_552\n        /* \"#utility.yul\":4565:4571   */\n      dup2\n        /* \"#utility.yul\":4558:4562   */\n      0x20\n        /* \"#utility.yul\":4553:4556   */\n      dup7\n        /* \"#utility.yul\":4549:4563   */\n      add\n        /* \"#utility.yul\":4542:4546   */\n      0x20\n        /* \"#utility.yul\":4535:4540   */\n      dup7\n        /* \"#utility.yul\":4531:4547   */\n      add\n        /* \"#utility.yul\":4509:4572   */\n      tag_553\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":4626:4628   */\n      0x1f\n        /* \"#utility.yul\":4605:4620   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4601:4630   */\n      and\n        /* \"#utility.yul\":4592:4631   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":4633:4637   */\n      0x20\n        /* \"#utility.yul\":4588:4638   */\n      add\n      swap3\n        /* \"#utility.yul\":4387:4644   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4649:5435   */\n    tag_389:\n        /* \"#utility.yul\":5060:5085   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":5055:5058   */\n      dup2\n        /* \"#utility.yul\":5048:5086   */\n      mstore\n        /* \"#utility.yul\":5030:5033   */\n      0x00\n        /* \"#utility.yul\":5115:5121   */\n      dup4\n        /* \"#utility.yul\":5109:5122   */\n      mload\n        /* \"#utility.yul\":5131:5193   */\n      tag_555\n        /* \"#utility.yul\":5186:5192   */\n      dup2\n        /* \"#utility.yul\":5181:5183   */\n      0x17\n        /* \"#utility.yul\":5176:5179   */\n      dup6\n        /* \"#utility.yul\":5172:5184   */\n      add\n        /* \"#utility.yul\":5165:5169   */\n      0x20\n        /* \"#utility.yul\":5157:5163   */\n      dup9\n        /* \"#utility.yul\":5153:5170   */\n      add\n        /* \"#utility.yul\":5131:5193   */\n      tag_553\n      jump\t// in\n    tag_555:\n      shl(0x7d, 0x01034b99036b4b9b9b4b733903937b6329)\n        /* \"#utility.yul\":5252:5254   */\n      0x17\n        /* \"#utility.yul\":5212:5228   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":5244:5255   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":5237:5277   */\n      mstore\n        /* \"#utility.yul\":5302:5315   */\n      dup4\n      mload\n        /* \"#utility.yul\":5324:5387   */\n      tag_556\n        /* \"#utility.yul\":5302:5315   */\n      dup2\n        /* \"#utility.yul\":5373:5375   */\n      0x28\n        /* \"#utility.yul\":5365:5376   */\n      dup5\n      add\n        /* \"#utility.yul\":5358:5362   */\n      0x20\n        /* \"#utility.yul\":5346:5363   */\n      dup9\n      add\n        /* \"#utility.yul\":5324:5387   */\n      tag_553\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":5407:5424   */\n      add\n        /* \"#utility.yul\":5426:5428   */\n      0x28\n        /* \"#utility.yul\":5403:5429   */\n      add\n      swap5\n        /* \"#utility.yul\":4649:5435   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5648:6136   */\n    tag_406:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5917:5932   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":5899:5933   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5969:5984   */\n      dup5\n      and\n        /* \"#utility.yul\":5964:5966   */\n      0x20\n        /* \"#utility.yul\":5949:5967   */\n      dup3\n      add\n        /* \"#utility.yul\":5942:5985   */\n      mstore\n        /* \"#utility.yul\":6016:6018   */\n      0x40\n        /* \"#utility.yul\":6001:6019   */\n      dup2\n      add\n        /* \"#utility.yul\":5994:6028   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6064:6067   */\n      0x80\n        /* \"#utility.yul\":6059:6061   */\n      0x60\n        /* \"#utility.yul\":6044:6062   */\n      dup3\n      add\n        /* \"#utility.yul\":6037:6068   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5842:5846   */\n      0x00\n      swap1\n        /* \"#utility.yul\":6085:6130   */\n      tag_559\n      swap1\n        /* \"#utility.yul\":6110:6129   */\n      dup4\n      add\n        /* \"#utility.yul\":6102:6108   */\n      dup5\n        /* \"#utility.yul\":6085:6130   */\n      tag_550\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":6077:6130   */\n      swap7\n        /* \"#utility.yul\":5648:6136   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6420:6805   */\n    tag_447:\n        /* \"#utility.yul\":6652:6653   */\n      0x01\n        /* \"#utility.yul\":6648:6649   */\n      dup1\n        /* \"#utility.yul\":6643:6646   */\n      0xa0\n        /* \"#utility.yul\":6639:6650   */\n      shl\n        /* \"#utility.yul\":6635:6654   */\n      sub\n        /* \"#utility.yul\":6627:6633   */\n      dup5\n        /* \"#utility.yul\":6623:6655   */\n      and\n        /* \"#utility.yul\":6612:6621   */\n      dup2\n        /* \"#utility.yul\":6605:6656   */\n      mstore\n        /* \"#utility.yul\":6692:6698   */\n      dup3\n        /* \"#utility.yul\":6687:6689   */\n      0x20\n        /* \"#utility.yul\":6676:6685   */\n      dup3\n        /* \"#utility.yul\":6672:6690   */\n      add\n        /* \"#utility.yul\":6665:6699   */\n      mstore\n        /* \"#utility.yul\":6735:6737   */\n      0x60\n        /* \"#utility.yul\":6730:6732   */\n      0x40\n        /* \"#utility.yul\":6719:6728   */\n      dup3\n        /* \"#utility.yul\":6715:6733   */\n      add\n        /* \"#utility.yul\":6708:6738   */\n      mstore\n        /* \"#utility.yul\":6586:6590   */\n      0x00\n        /* \"#utility.yul\":6755:6799   */\n      tag_562\n        /* \"#utility.yul\":6795:6797   */\n      0x60\n        /* \"#utility.yul\":6784:6793   */\n      dup4\n        /* \"#utility.yul\":6780:6798   */\n      add\n        /* \"#utility.yul\":6772:6778   */\n      dup5\n        /* \"#utility.yul\":6755:6799   */\n      tag_550\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":6747:6799   */\n      swap6\n        /* \"#utility.yul\":6420:6805   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7184:7403   */\n    tag_57:\n        /* \"#utility.yul\":7333:7335   */\n      0x20\n        /* \"#utility.yul\":7322:7331   */\n      dup2\n        /* \"#utility.yul\":7315:7336   */\n      mstore\n        /* \"#utility.yul\":7296:7300   */\n      0x00\n        /* \"#utility.yul\":7353:7397   */\n      tag_198\n        /* \"#utility.yul\":7393:7395   */\n      0x20\n        /* \"#utility.yul\":7382:7391   */\n      dup4\n        /* \"#utility.yul\":7378:7396   */\n      add\n        /* \"#utility.yul\":7370:7376   */\n      dup5\n        /* \"#utility.yul\":7353:7397   */\n      tag_550\n      jump\t// in\n        /* \"#utility.yul\":10611:11013   */\n    tag_244:\n        /* \"#utility.yul\":10813:10815   */\n      0x20\n        /* \"#utility.yul\":10795:10816   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10852:10854   */\n      0x26\n        /* \"#utility.yul\":10832:10850   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10825:10855   */\n      mstore\n        /* \"#utility.yul\":10891:10925   */\n      0x455243313336333a205f636865636b416e6443616c6c5472616e736665722072\n        /* \"#utility.yul\":10886:10888   */\n      0x40\n        /* \"#utility.yul\":10871:10889   */\n      dup3\n      add\n        /* \"#utility.yul\":10864:10926   */\n      mstore\n      shl(0xd0, 0x657665727473)\n        /* \"#utility.yul\":10957:10959   */\n      0x60\n        /* \"#utility.yul\":10942:10960   */\n      dup3\n      add\n        /* \"#utility.yul\":10935:10971   */\n      mstore\n        /* \"#utility.yul\":11003:11006   */\n      0x80\n        /* \"#utility.yul\":10988:11007   */\n      add\n      swap1\n        /* \"#utility.yul\":10611:11013   */\n      jump\t// out\n        /* \"#utility.yul\":11427:11783   */\n    tag_262:\n        /* \"#utility.yul\":11629:11631   */\n      0x20\n        /* \"#utility.yul\":11611:11632   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11648:11666   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":11641:11671   */\n      mstore\n        /* \"#utility.yul\":11707:11741   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11702:11704   */\n      0x40\n        /* \"#utility.yul\":11687:11705   */\n      dup3\n      add\n        /* \"#utility.yul\":11680:11742   */\n      mstore\n        /* \"#utility.yul\":11774:11776   */\n      0x60\n        /* \"#utility.yul\":11759:11777   */\n      add\n      swap1\n        /* \"#utility.yul\":11427:11783   */\n      jump\t// out\n        /* \"#utility.yul\":13760:14158   */\n    tag_248:\n        /* \"#utility.yul\":13962:13964   */\n      0x20\n        /* \"#utility.yul\":13944:13965   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14001:14003   */\n      0x22\n        /* \"#utility.yul\":13981:13999   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13974:14004   */\n      mstore\n        /* \"#utility.yul\":14040:14074   */\n      0x45524332304d696e7461626c653a206d696e74696e672069732066696e697368\n        /* \"#utility.yul\":14035:14037   */\n      0x40\n        /* \"#utility.yul\":14020:14038   */\n      dup3\n      add\n        /* \"#utility.yul\":14013:14075   */\n      mstore\n      shl(0xf2, 0x1959)\n        /* \"#utility.yul\":14106:14108   */\n      0x60\n        /* \"#utility.yul\":14091:14109   */\n      dup3\n      add\n        /* \"#utility.yul\":14084:14116   */\n      mstore\n        /* \"#utility.yul\":14148:14151   */\n      0x80\n        /* \"#utility.yul\":14133:14152   */\n      add\n      swap1\n        /* \"#utility.yul\":13760:14158   */\n      jump\t// out\n        /* \"#utility.yul\":15716:15844   */\n    tag_236:\n        /* \"#utility.yul\":15756:15759   */\n      0x00\n        /* \"#utility.yul\":15787:15788   */\n      dup3\n        /* \"#utility.yul\":15783:15789   */\n      not\n        /* \"#utility.yul\":15780:15781   */\n      dup3\n        /* \"#utility.yul\":15777:15790   */\n      gt\n        /* \"#utility.yul\":15774:15813   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":15793:15811   */\n      tag_591\n      tag_592\n      jump\t// in\n    tag_591:\n      pop\n        /* \"#utility.yul\":15829:15838   */\n      add\n      swap1\n        /* \"#utility.yul\":15716:15844   */\n      jump\t// out\n        /* \"#utility.yul\":15849:16017   */\n    tag_460:\n        /* \"#utility.yul\":15889:15896   */\n      0x00\n        /* \"#utility.yul\":15955:15956   */\n      dup2\n        /* \"#utility.yul\":15951:15952   */\n      0x00\n        /* \"#utility.yul\":15947:15953   */\n      not\n        /* \"#utility.yul\":15943:15957   */\n      div\n        /* \"#utility.yul\":15940:15941   */\n      dup4\n        /* \"#utility.yul\":15937:15958   */\n      gt\n        /* \"#utility.yul\":15932:15933   */\n      dup3\n        /* \"#utility.yul\":15925:15934   */\n      iszero\n        /* \"#utility.yul\":15918:15935   */\n      iszero\n        /* \"#utility.yul\":15914:15959   */\n      and\n        /* \"#utility.yul\":15911:15982   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":15962:15980   */\n      tag_595\n      tag_592\n      jump\t// in\n    tag_595:\n      pop\n        /* \"#utility.yul\":16002:16011   */\n      mul\n      swap1\n        /* \"#utility.yul\":15849:16017   */\n      jump\t// out\n        /* \"#utility.yul\":16022:16147   */\n    tag_430:\n        /* \"#utility.yul\":16062:16066   */\n      0x00\n        /* \"#utility.yul\":16090:16091   */\n      dup3\n        /* \"#utility.yul\":16087:16088   */\n      dup3\n        /* \"#utility.yul\":16084:16092   */\n      lt\n        /* \"#utility.yul\":16081:16115   */\n      iszero\n      tag_598\n      jumpi\n        /* \"#utility.yul\":16095:16113   */\n      tag_598\n      tag_592\n      jump\t// in\n    tag_598:\n      pop\n        /* \"#utility.yul\":16132:16141   */\n      sub\n      swap1\n        /* \"#utility.yul\":16022:16147   */\n      jump\t// out\n        /* \"#utility.yul\":16152:16410   */\n    tag_553:\n        /* \"#utility.yul\":16224:16225   */\n      0x00\n        /* \"#utility.yul\":16234:16347   */\n    tag_600:\n        /* \"#utility.yul\":16248:16254   */\n      dup4\n        /* \"#utility.yul\":16245:16246   */\n      dup2\n        /* \"#utility.yul\":16242:16255   */\n      lt\n        /* \"#utility.yul\":16234:16347   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":16324:16335   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":16318:16336   */\n      mload\n        /* \"#utility.yul\":16305:16316   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":16298:16337   */\n      mstore\n        /* \"#utility.yul\":16270:16272   */\n      0x20\n        /* \"#utility.yul\":16263:16273   */\n      add\n        /* \"#utility.yul\":16234:16347   */\n      jump(tag_600)\n    tag_602:\n        /* \"#utility.yul\":16365:16371   */\n      dup4\n        /* \"#utility.yul\":16362:16363   */\n      dup2\n        /* \"#utility.yul\":16359:16372   */\n      gt\n        /* \"#utility.yul\":16356:16404   */\n      iszero\n      tag_381\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":16400:16401   */\n      0x00\n        /* \"#utility.yul\":16382:16398   */\n      swap2\n      add\n        /* \"#utility.yul\":16375:16402   */\n      mstore\n        /* \"#utility.yul\":16152:16410   */\n      jump\t// out\n        /* \"#utility.yul\":16415:16551   */\n    tag_481:\n        /* \"#utility.yul\":16454:16457   */\n      0x00\n        /* \"#utility.yul\":16482:16487   */\n      dup2\n        /* \"#utility.yul\":16472:16511   */\n      tag_606\n      jumpi\n        /* \"#utility.yul\":16491:16509   */\n      tag_606\n      tag_592\n      jump\t// in\n    tag_606:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":16527:16545   */\n      add\n      swap1\n        /* \"#utility.yul\":16415:16551   */\n      jump\t// out\n        /* \"#utility.yul\":16556:16936   */\n    tag_187:\n        /* \"#utility.yul\":16635:16636   */\n      0x01\n        /* \"#utility.yul\":16631:16643   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":16678:16690   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":16699:16760   */\n      tag_608\n      jumpi\n        /* \"#utility.yul\":16753:16757   */\n      0x7f\n        /* \"#utility.yul\":16745:16751   */\n      dup3\n        /* \"#utility.yul\":16741:16758   */\n      and\n        /* \"#utility.yul\":16731:16758   */\n      swap2\n      pop\n        /* \"#utility.yul\":16699:16760   */\n    tag_608:\n        /* \"#utility.yul\":16806:16808   */\n      0x20\n        /* \"#utility.yul\":16798:16804   */\n      dup3\n        /* \"#utility.yul\":16795:16809   */\n      lt\n        /* \"#utility.yul\":16775:16793   */\n      dup2\n        /* \"#utility.yul\":16772:16810   */\n      eq\n        /* \"#utility.yul\":16769:16930   */\n      iszero\n      tag_609\n      jumpi\n        /* \"#utility.yul\":16852:16862   */\n      0x4e487b71\n        /* \"#utility.yul\":16847:16850   */\n      0xe0\n        /* \"#utility.yul\":16843:16863   */\n      shl\n        /* \"#utility.yul\":16840:16841   */\n      0x00\n        /* \"#utility.yul\":16833:16864   */\n      mstore\n        /* \"#utility.yul\":16887:16891   */\n      0x22\n        /* \"#utility.yul\":16884:16885   */\n      0x04\n        /* \"#utility.yul\":16877:16892   */\n      mstore\n        /* \"#utility.yul\":16915:16919   */\n      0x24\n        /* \"#utility.yul\":16912:16913   */\n      0x00\n        /* \"#utility.yul\":16905:16920   */\n      revert\n        /* \"#utility.yul\":16769:16930   */\n    tag_609:\n      pop\n        /* \"#utility.yul\":16556:16936   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16941:17068   */\n    tag_592:\n        /* \"#utility.yul\":17002:17012   */\n      0x4e487b71\n        /* \"#utility.yul\":16997:17000   */\n      0xe0\n        /* \"#utility.yul\":16993:17013   */\n      shl\n        /* \"#utility.yul\":16990:16991   */\n      0x00\n        /* \"#utility.yul\":16983:17014   */\n      mstore\n        /* \"#utility.yul\":17033:17037   */\n      0x11\n        /* \"#utility.yul\":17030:17031   */\n      0x04\n        /* \"#utility.yul\":17023:17038   */\n      mstore\n        /* \"#utility.yul\":17057:17061   */\n      0x24\n        /* \"#utility.yul\":17054:17055   */\n      0x00\n        /* \"#utility.yul\":17047:17062   */\n      revert\n        /* \"#utility.yul\":17073:17200   */\n    tag_468:\n        /* \"#utility.yul\":17134:17144   */\n      0x4e487b71\n        /* \"#utility.yul\":17129:17132   */\n      0xe0\n        /* \"#utility.yul\":17125:17145   */\n      shl\n        /* \"#utility.yul\":17122:17123   */\n      0x00\n        /* \"#utility.yul\":17115:17146   */\n      mstore\n        /* \"#utility.yul\":17165:17169   */\n      0x32\n        /* \"#utility.yul\":17162:17163   */\n      0x04\n        /* \"#utility.yul\":17155:17170   */\n      mstore\n        /* \"#utility.yul\":17189:17193   */\n      0x24\n        /* \"#utility.yul\":17186:17187   */\n      0x00\n        /* \"#utility.yul\":17179:17194   */\n      revert\n        /* \"#utility.yul\":17205:17332   */\n    tag_464:\n        /* \"#utility.yul\":17266:17276   */\n      0x4e487b71\n        /* \"#utility.yul\":17261:17264   */\n      0xe0\n        /* \"#utility.yul\":17257:17277   */\n      shl\n        /* \"#utility.yul\":17254:17255   */\n      0x00\n        /* \"#utility.yul\":17247:17278   */\n      mstore\n        /* \"#utility.yul\":17297:17301   */\n      0x41\n        /* \"#utility.yul\":17294:17295   */\n      0x04\n        /* \"#utility.yul\":17287:17302   */\n      mstore\n        /* \"#utility.yul\":17321:17325   */\n      0x24\n        /* \"#utility.yul\":17318:17319   */\n      0x00\n        /* \"#utility.yul\":17311:17326   */\n      revert\n        /* \"#utility.yul\":17337:17468   */\n    tag_544:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":17411:17443   */\n      dup2\n      and\n        /* \"#utility.yul\":17401:17444   */\n      dup2\n      eq\n        /* \"#utility.yul\":17391:17462   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":17458:17459   */\n      0x00\n        /* \"#utility.yul\":17455:17456   */\n      dup1\n        /* \"#utility.yul\":17448:17460   */\n      revert\n\n    auxdata: 0xa26469706673582212209b2fb09debf7e0aa0e22cd0cd2bb367a298a796070fb6f19d213286fdf504e6e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1521": {
									"entryPoint": null,
									"id": 1521,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_162": {
									"entryPoint": null,
									"id": 162,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_1643": {
									"entryPoint": null,
									"id": 1643,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_2322": {
									"entryPoint": null,
									"id": 2322,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2391": {
									"entryPoint": null,
									"id": 2391,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_746": {
									"entryPoint": null,
									"id": 746,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_662": {
									"entryPoint": null,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_651": {
									"entryPoint": null,
									"id": 651,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_grantRole_2267": {
									"entryPoint": 745,
									"id": 2267,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_523": {
									"entryPoint": 516,
									"id": 523,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setOwner_1600": {
									"entryPoint": 410,
									"id": 1600,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setupRole_2208": {
									"entryPoint": 500,
									"id": 2208,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_2073": {
									"entryPoint": null,
									"id": 2073,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 1075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_uint256_fromMemory": {
									"entryPoint": 1258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_tuple_t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 1508,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3735:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:1"
															},
															"nodeType": "YulIf",
															"src": "88:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:1"
															},
															"nodeType": "YulIf",
															"src": "221:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:1"
															},
															"nodeType": "YulIf",
															"src": "404:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:1"
															},
															"nodeType": "YulIf",
															"src": "566:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:1",
																"statements": []
															},
															"src": "647:133:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:1"
															},
															"nodeType": "YulIf",
															"src": "789:80:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:1",
														"type": ""
													}
												],
												"src": "14:885:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1071:669:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1118:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1127:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1130:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1120:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1120:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1120:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1092:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1101:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1088:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1088:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1113:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1084:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1084:33:1"
															},
															"nodeType": "YulIf",
															"src": "1081:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1143:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1163:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1157:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1157:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1147:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1182:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1200:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1204:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1196:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1196:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1208:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1192:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1192:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1186:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1237:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1246:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1249:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1239:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1239:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1239:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1225:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1233:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1222:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:14:1"
															},
															"nodeType": "YulIf",
															"src": "1219:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1262:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1305:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1316:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1301:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1301:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1325:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1272:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1262:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1342:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1368:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1379:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1364:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1364:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1358:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1346:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1412:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1421:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1424:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1414:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1414:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1414:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1398:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1408:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1395:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:16:1"
															},
															"nodeType": "YulIf",
															"src": "1392:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1437:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1480:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1491:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1476:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1476:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1502:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1447:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1447:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1437:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1519:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1542:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1553:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1538:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1538:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1532:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1532:25:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1523:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1605:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1614:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1617:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1607:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1607:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1607:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1579:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1590:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1597:4:1",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1586:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1586:16:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1576:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1576:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1569:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1569:35:1"
															},
															"nodeType": "YulIf",
															"src": "1566:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1630:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1640:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1630:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1654:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1674:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1685:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1670:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1670:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1664:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1664:25:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1654:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1698:36:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1718:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1729:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1714:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1714:19:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1708:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1708:26:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "1698:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1005:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1016:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1028:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1036:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1044:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1052:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1060:6:1",
														"type": ""
													}
												],
												"src": "904:836:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1919:171:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1936:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1947:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1929:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1929:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1929:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1981:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1966:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1966:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1986:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1959:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1959:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1959:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2009:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2020:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2005:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2005:18:1"
																	},
																	{
																		"hexValue": "45524332304361707065643a206361702069732030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2025:23:1",
																		"type": "",
																		"value": "ERC20Capped: cap is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1998:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1998:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1998:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2058:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2081:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2066:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2066:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2058:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1896:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1910:4:1",
														"type": ""
													}
												],
												"src": "1745:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2269:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2286:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2297:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2279:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2279:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2279:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2320:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2331:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2316:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2316:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2336:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2309:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2309:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2309:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2359:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2370:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2355:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2355:18:1"
																	},
																	{
																		"hexValue": "45524332304361707065643a20636170206578636565646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2375:27:1",
																		"type": "",
																		"value": "ERC20Capped: cap exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2348:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2348:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2348:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2412:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2424:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2420:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2420:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2412:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2246:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2260:4:1",
														"type": ""
													}
												],
												"src": "2095:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2623:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2640:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2651:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2633:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2633:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2633:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2674:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2685:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2670:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2670:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2690:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2663:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2663:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2663:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2713:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2724:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2709:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2709:18:1"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2729:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2702:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2702:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2702:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2772:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2784:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2795:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2780:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2772:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2600:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2614:4:1",
														"type": ""
													}
												],
												"src": "2449:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2910:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2920:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2932:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2943:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2928:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2928:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2920:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2962:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2973:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2955:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2955:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2879:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2890:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2901:4:1",
														"type": ""
													}
												],
												"src": "2809:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3039:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3074:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3095:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3102:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3107:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3098:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3098:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3088:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3088:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3088:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3139:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3142:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3132:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3132:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3167:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3170:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3160:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3160:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3160:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3055:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3062:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3058:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3058:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3052:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3052:13:1"
															},
															"nodeType": "YulIf",
															"src": "3049:136:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3194:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3205:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3208:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3201:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3201:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3194:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3022:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3025:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3031:3:1",
														"type": ""
													}
												],
												"src": "2991:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3276:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3286:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3300:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3303:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3296:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3296:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3286:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3317:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3347:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3353:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3343:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3343:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3321:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3394:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3396:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3410:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3418:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3406:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3406:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3396:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3374:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3367:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3367:26:1"
															},
															"nodeType": "YulIf",
															"src": "3364:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3484:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3505:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3512:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3517:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3508:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3508:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3498:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3498:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3498:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3549:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3552:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3542:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3542:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3542:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3577:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3580:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3570:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3570:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3570:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3440:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3463:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3471:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3460:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3460:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3437:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3437:38:1"
															},
															"nodeType": "YulIf",
															"src": "3434:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3256:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3265:6:1",
														"type": ""
													}
												],
												"src": "3221:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3638:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3655:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3667:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3658:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3658:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3648:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3648:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3648:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3695:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3698:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3688:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3688:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3688:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3719:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3722:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3712:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3712:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3712:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3606:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value2 := value\n        value3 := mload(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ERC20Capped: cap is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC20Capped: cap exceeded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060408190526005805460ff1916905562002447388190039081908339810160408190526200002f91620004ea565b8183868681600390805190602001906200004b9291906200038d565b508051620000619060049060208401906200038d565b50505060f81b7fff000000000000000000000000000000000000000000000000000000000000001660805280620000df5760405162461bcd60e51b815260206004820152601560248201527f45524332304361707065643a206361702069732030000000000000000000000060448201526064015b60405180910390fd5b60a052620000ed336200019a565b620000fa600033620001f4565b620001267ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc933620001f4565b81811115620001785760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a20636170206578636565646564000000000000006044820152606401620000d6565b6200018f33826200020460201b62000c651760201c565b5050505050620005fa565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b620002008282620002e9565b5050565b6001600160a01b0382166200025c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401620000d6565b806002600082825462000270919062000580565b90915550506001600160a01b038216600090815260208190526040812080548392906200029f90849062000580565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60008281526006602090815260408083206001600160a01b038516845290915290205460ff16620002005760008281526006602090815260408083206001600160a01b03851684529091529020805460ff19166001179055620003493390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b8280546200039b90620005a7565b90600052602060002090601f016020900481019282620003bf57600085556200040a565b82601f10620003da57805160ff19168380011785556200040a565b828001600101855582156200040a579182015b828111156200040a578251825591602001919060010190620003ed565b50620004189291506200041c565b5090565b5b808211156200041857600081556001016200041d565b600082601f8301126200044557600080fd5b81516001600160401b0380821115620004625762000462620005e4565b604051601f8301601f19908116603f011681019082821181831017156200048d576200048d620005e4565b81604052838152602092508683858801011115620004aa57600080fd5b600091505b83821015620004ce5785820183015181830184015290820190620004af565b83821115620004e05760008385830101525b9695505050505050565b600080600080600060a086880312156200050357600080fd5b85516001600160401b03808211156200051b57600080fd5b6200052989838a0162000433565b965060208801519150808211156200054057600080fd5b506200054f8882890162000433565b945050604086015160ff811681146200056757600080fd5b6060870151608090970151959894975095949392505050565b60008219821115620005a257634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620005bc57607f821691505b60208210811415620005de57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160f81c60a051611e1d6200062a60003960008181610327015261176e015260006102e80152611e1d6000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c806370a0823111610125578063a457c2d7116100ad578063d53913931161007c578063d5391393146104a1578063d547741f146104c8578063d8fbe994146104db578063dd62ed3e146104ee578063f2fde38b1461052757600080fd5b8063a457c2d714610455578063a9059cbb14610468578063c1d34b891461047b578063cae9ca511461048e57600080fd5b80638980f11f116100f45780638980f11f146103f65780638da5cb5b1461040957806391d148541461043257806395d89b4114610445578063a217fddf1461044d57600080fd5b806370a08231146103aa578063715018a6146103d357806379cc6790146103db5780637d64bcb4146103ee57600080fd5b80632f2ff15d116101a857806336568abe1161017757806336568abe1461034b578063395093511461035e5780634000aea01461037157806340c10f191461038457806342966c681461039757600080fd5b80632f2ff15d146102cc578063313ce567146102e15780633177029f14610312578063355274ea1461032557600080fd5b80631296ee62116101e45780631296ee621461027157806318160ddd1461028457806323b872dd14610296578063248a9ca3146102a957600080fd5b806301ffc9a71461021657806305d2035b1461023e57806306fdde0314610249578063095ea7b31461025e575b600080fd5b610229610224366004611aab565b61053a565b60405190151581526020015b60405180910390f35b60055460ff16610229565b61025161054b565b6040516102359190611bf3565b61022961026c3660046119cc565b6105dd565b61022961027f3660046119cc565b6105f3565b6002545b604051908152602001610235565b6102296102a4366004611928565b610616565b6102886102b7366004611a6f565b60009081526006602052604090206001015490565b6102df6102da366004611a88565b6106c5565b005b60405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610235565b6102296103203660046119cc565b6106f0565b7f0000000000000000000000000000000000000000000000000000000000000000610288565b6102df610359366004611a88565b61070c565b61022961036c3660046119cc565b61078a565b61022961037f3660046119f6565b6107c6565b6102df6103923660046119cc565b610805565b6102df6103a5366004611a6f565b610832565b6102886103b83660046118da565b6001600160a01b031660009081526020819052604090205490565b6102df61083f565b6102df6103e93660046119cc565b61087b565b6102df6108fc565b6102df6104043660046119cc565b610927565b60055461010090046001600160a01b03166040516001600160a01b039091168152602001610235565b610229610440366004611a88565b6109fe565b610251610a29565b610288600081565b6102296104633660046119cc565b610a38565b6102296104763660046119cc565b610ac7565b610229610489366004611964565b610ad4565b61022961049c3660046119f6565b610b12565b6102887ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc981565b6102df6104d6366004611a88565b610b84565b6102296104e9366004611928565b610baa565b6102886104fc3660046118f5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102df6105353660046118da565b610bc7565b600061054582610d44565b92915050565b60606003805461055a90611d54565b80601f016020809104026020016040519081016040528092919081815260200182805461058690611d54565b80156105d35780601f106105a8576101008083540402835291602001916105d3565b820191906000526020600020905b8154815290600101906020018083116105b657829003601f168201915b5050505050905090565b60006105ea338484610d69565b50600192915050565b600061060f8383604051806020016040528060008152506107c6565b9392505050565b6000610623848484610e8d565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156106ad5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6106ba8533858403610d69565b506001949350505050565b6000828152600660205260409020600101546106e1813361105d565b6106eb83836110c1565b505050565b600061060f838360405180602001604052806000815250610b12565b6001600160a01b038116331461077c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016106a4565b6107868282611147565b5050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916105ea9185906107c1908690611cc3565b610d69565b60006107d28484610ac7565b506107df338585856111ae565b6107fb5760405162461bcd60e51b81526004016106a490611c06565b5060019392505050565b60055460ff16156108285760405162461bcd60e51b81526004016106a490611c81565b610786828261126c565b61083c3382611300565b50565b6005546001600160a01b0361010090910416331461086f5760405162461bcd60e51b81526004016106a490611c4c565b610879600061144e565b565b600061088783336104fc565b9050818110156108e55760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b60648201526084016106a4565b6108f28333848403610d69565b6106eb8383611300565b60055460ff161561091f5760405162461bcd60e51b81526004016106a490611c81565b6108796114a8565b6005546001600160a01b036101009091041633146109575760405162461bcd60e51b81526004016106a490611c4c565b816001600160a01b031663a9059cbb61097e6005546001600160a01b036101009091041690565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b1580156109c657600080fd5b505af11580156109da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106eb9190611a4d565b60009182526006602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606004805461055a90611d54565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610aba5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106a4565b6107fb3385858403610d69565b60006105ea338484610e8d565b6000610ae1858585610616565b50610aee858585856111ae565b6106ba5760405162461bcd60e51b81526004016106a490611c06565b949350505050565b6000610b1e84846105dd565b50610b2a8484846114e0565b6107fb5760405162461bcd60e51b815260206004820152602560248201527f455243313336333a205f636865636b416e6443616c6c417070726f7665207265604482015264766572747360d81b60648201526084016106a4565b600082815260066020526040902060010154610ba0813361105d565b6106eb8383611147565b6000610b0a84848460405180602001604052806000815250610ad4565b6005546001600160a01b03610100909104163314610bf75760405162461bcd60e51b81526004016106a490611c4c565b6001600160a01b038116610c5c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106a4565b61083c8161144e565b6001600160a01b038216610cbb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106a4565b8060026000828254610ccd9190611cc3565b90915550506001600160a01b03821660009081526020819052604081208054839290610cfa908490611cc3565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60006001600160e01b03198216637965db0b60e01b148061054557506105458261159b565b6001600160a01b038316610dcb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106a4565b6001600160a01b038216610e2c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106a4565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610ef15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106a4565b6001600160a01b038216610f535760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106a4565b6001600160a01b03831660009081526020819052604090205481811015610fcb5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106a4565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611002908490611cc3565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161104e91815260200190565b60405180910390a35b50505050565b61106782826109fe565b6107865761107f816001600160a01b031660146115d0565b61108a8360206115d0565b60405160200161109b929190611b11565b60408051601f198184030181529082905262461bcd60e51b82526106a491600401611bf3565b6110cb82826109fe565b6107865760008281526006602090815260408083206001600160a01b03851684529091529020805460ff191660011790556111033390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61115182826109fe565b156107865760008281526006602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60006001600160a01b0384163b6111c757506000610b0a565b604051632229f29760e21b81526000906001600160a01b038616906388a7ca5c906111fc9033908a9089908990600401611b86565b602060405180830381600087803b15801561121657600080fd5b505af115801561122a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124e9190611ac8565b6001600160e01b031916632229f29760e21b14915050949350505050565b6112967ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc9336109fe565b6112f65760405162461bcd60e51b815260206004820152602b60248201527f526f6c65733a2063616c6c657220646f6573206e6f742068617665207468652060448201526a4d494e54455220726f6c6560a81b60648201526084016106a4565b610786828261176c565b6001600160a01b0382166113605760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106a4565b6001600160a01b038216600090815260208190526040902054818110156113d45760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106a4565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611403908490611cfa565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6005546001600160a01b036101009091041633146114d85760405162461bcd60e51b81526004016106a490611c4c565b6108796117f9565b60006001600160a01b0384163b6114f95750600061060f565b6040516307b04a2d60e41b81526000906001600160a01b03861690637b04a2d09061152c90339088908890600401611bc3565b602060405180830381600087803b15801561154657600080fd5b505af115801561155a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157e9190611ac8565b6001600160e01b0319166307b04a2d60e41b149150509392505050565b60006001600160e01b0319821663b0202a1160e01b148061054557506301ffc9a760e01b6001600160e01b0319831614610545565b606060006115df836002611cdb565b6115ea906002611cc3565b67ffffffffffffffff81111561160257611602611dbb565b6040519080825280601f01601f19166020018201604052801561162c576020820181803683370190505b509050600360fc1b8160008151811061164757611647611da5565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061167657611676611da5565b60200101906001600160f81b031916908160001a905350600061169a846002611cdb565b6116a5906001611cc3565b90505b600181111561171d576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106116d9576116d9611da5565b1a60f81b8282815181106116ef576116ef611da5565b60200101906001600160f81b031916908160001a90535060049490941c9361171681611d3d565b90506116a8565b50831561060f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106a4565b7f00000000000000000000000000000000000000000000000000000000000000008161179760025490565b6117a19190611cc3565b11156117ef5760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a206361702065786365656465640000000000000060448201526064016106a4565b6107868282610c65565b6005805460ff191660011790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a1565b80356001600160a01b038116811461184857600080fd5b919050565b600082601f83011261185e57600080fd5b813567ffffffffffffffff8082111561187957611879611dbb565b604051601f8301601f19908116603f011681019082821181831017156118a1576118a1611dbb565b816040528381528660208588010111156118ba57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156118ec57600080fd5b61060f82611831565b6000806040838503121561190857600080fd5b61191183611831565b915061191f60208401611831565b90509250929050565b60008060006060848603121561193d57600080fd5b61194684611831565b925061195460208501611831565b9150604084013590509250925092565b6000806000806080858703121561197a57600080fd5b61198385611831565b935061199160208601611831565b925060408501359150606085013567ffffffffffffffff8111156119b457600080fd5b6119c08782880161184d565b91505092959194509250565b600080604083850312156119df57600080fd5b6119e883611831565b946020939093013593505050565b600080600060608486031215611a0b57600080fd5b611a1484611831565b925060208401359150604084013567ffffffffffffffff811115611a3757600080fd5b611a438682870161184d565b9150509250925092565b600060208284031215611a5f57600080fd5b8151801515811461060f57600080fd5b600060208284031215611a8157600080fd5b5035919050565b60008060408385031215611a9b57600080fd5b8235915061191f60208401611831565b600060208284031215611abd57600080fd5b813561060f81611dd1565b600060208284031215611ada57600080fd5b815161060f81611dd1565b60008151808452611afd816020860160208601611d11565b601f01601f19169290920160200192915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611b49816017850160208801611d11565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611b7a816028840160208801611d11565b01602801949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611bb990830184611ae5565b9695505050505050565b60018060a01b0384168152826020820152606060408201526000611bea6060830184611ae5565b95945050505050565b60208152600061060f6020830184611ae5565b60208082526026908201527f455243313336333a205f636865636b416e6443616c6c5472616e73666572207260408201526565766572747360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526022908201527f45524332304d696e7461626c653a206d696e74696e672069732066696e697368604082015261195960f21b606082015260800190565b60008219821115611cd657611cd6611d8f565b500190565b6000816000190483118215151615611cf557611cf5611d8f565b500290565b600082821015611d0c57611d0c611d8f565b500390565b60005b83811015611d2c578181015183820152602001611d14565b838111156110575750506000910152565b600081611d4c57611d4c611d8f565b506000190190565b600181811c90821680611d6857607f821691505b60208210811415611d8957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461083c57600080fdfea26469706673582212209b2fb09debf7e0aa0e22cd0cd2bb367a298a796070fb6f19d213286fdf504e6e64736f6c63430008070033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH3 0x2447 CODESIZE DUP2 SWAP1 SUB SWAP1 DUP2 SWAP1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x2F SWAP2 PUSH3 0x4EA JUMP JUMPDEST DUP2 DUP4 DUP7 DUP7 DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4B SWAP3 SWAP2 SWAP1 PUSH3 0x38D JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x61 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x38D JUMP JUMPDEST POP POP POP PUSH1 0xF8 SHL PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 AND PUSH1 0x80 MSTORE DUP1 PUSH3 0xDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304361707065643A2063617020697320300000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA0 MSTORE PUSH3 0xED CALLER PUSH3 0x19A JUMP JUMPDEST PUSH3 0xFA PUSH1 0x0 CALLER PUSH3 0x1F4 JUMP JUMPDEST PUSH3 0x126 PUSH32 0xF0887BA65EE2024EA881D91B74C2450EF19E1557F03BED3EA9F16B037CBE2DC9 CALLER PUSH3 0x1F4 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH3 0x178 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304361707065643A2063617020657863656564656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xD6 JUMP JUMPDEST PUSH3 0x18F CALLER DUP3 PUSH3 0x204 PUSH1 0x20 SHL PUSH3 0xC65 OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP PUSH3 0x5FA JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x200 DUP3 DUP3 PUSH3 0x2E9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x25C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xD6 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x270 SWAP2 SWAP1 PUSH3 0x580 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x29F SWAP1 DUP5 SWAP1 PUSH3 0x580 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x200 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x349 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x39B SWAP1 PUSH3 0x5A7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x3BF JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x40A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x3DA JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x40A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x40A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x40A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x3ED JUMP JUMPDEST POP PUSH3 0x418 SWAP3 SWAP2 POP PUSH3 0x41C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x418 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x41D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x462 JUMPI PUSH3 0x462 PUSH3 0x5E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x48D JUMPI PUSH3 0x48D PUSH3 0x5E4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x4CE JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x4AF JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x4E0 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x529 DUP10 DUP4 DUP11 ADD PUSH3 0x433 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x54F DUP9 DUP3 DUP10 ADD PUSH3 0x433 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x80 SWAP1 SWAP8 ADD MLOAD SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x5A2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x5BC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x5DE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xF8 SHR PUSH1 0xA0 MLOAD PUSH2 0x1E1D PUSH3 0x62A PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x327 ADD MSTORE PUSH2 0x176E ADD MSTORE PUSH1 0x0 PUSH2 0x2E8 ADD MSTORE PUSH2 0x1E1D PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x211 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x4C8 JUMPI DUP1 PUSH4 0xD8FBE994 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0xC1D34B89 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8980F11F GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x8980F11F EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x44D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x7D64BCB4 EQ PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x4000AEA0 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x3177029F EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1296EE62 GT PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x1296EE62 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x5D2035B EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x25E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0x53A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x229 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x54B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x229 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x2A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0x616 JUMP JUMPDEST PUSH2 0x288 PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1A88 JUMP JUMPDEST PUSH2 0x6C5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x320 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0x6F0 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x288 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x359 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A88 JUMP JUMPDEST PUSH2 0x70C JUMP JUMPDEST PUSH2 0x229 PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0x78A JUMP JUMPDEST PUSH2 0x229 PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x19F6 JUMP JUMPDEST PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x392 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0x805 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST PUSH2 0x288 PUSH2 0x3B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x83F JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x3E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0x87B JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x8FC JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x404 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x440 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A88 JUMP JUMPDEST PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x251 PUSH2 0xA29 JUMP JUMPDEST PUSH2 0x288 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x463 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0xA38 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x476 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x489 CALLDATASIZE PUSH1 0x4 PUSH2 0x1964 JUMP JUMPDEST PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x49C CALLDATASIZE PUSH1 0x4 PUSH2 0x19F6 JUMP JUMPDEST PUSH2 0xB12 JUMP JUMPDEST PUSH2 0x288 PUSH32 0xF0887BA65EE2024EA881D91B74C2450EF19E1557F03BED3EA9F16B037CBE2DC9 DUP2 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x4D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A88 JUMP JUMPDEST PUSH2 0xB84 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x4E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0xBAA JUMP JUMPDEST PUSH2 0x288 PUSH2 0x4FC CALLDATASIZE PUSH1 0x4 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x535 CALLDATASIZE PUSH1 0x4 PUSH2 0x18DA JUMP JUMPDEST PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x545 DUP3 PUSH2 0xD44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x55A SWAP1 PUSH2 0x1D54 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x586 SWAP1 PUSH2 0x1D54 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EA CALLER DUP5 DUP5 PUSH2 0xD69 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x623 DUP5 DUP5 DUP5 PUSH2 0xE8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6BA DUP6 CALLER DUP6 DUP5 SUB PUSH2 0xD69 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x6E1 DUP2 CALLER PUSH2 0x105D JUMP JUMPDEST PUSH2 0x6EB DUP4 DUP4 PUSH2 0x10C1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x77C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH2 0x786 DUP3 DUP3 PUSH2 0x1147 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x5EA SWAP2 DUP6 SWAP1 PUSH2 0x7C1 SWAP1 DUP7 SWAP1 PUSH2 0x1CC3 JUMP JUMPDEST PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D2 DUP5 DUP5 PUSH2 0xAC7 JUMP JUMPDEST POP PUSH2 0x7DF CALLER DUP6 DUP6 DUP6 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x7FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A4 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x828 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A4 SWAP1 PUSH2 0x1C81 JUMP JUMPDEST PUSH2 0x786 DUP3 DUP3 PUSH2 0x126C JUMP JUMPDEST PUSH2 0x83C CALLER DUP3 PUSH2 0x1300 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A4 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x879 PUSH1 0x0 PUSH2 0x144E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x887 DUP4 CALLER PUSH2 0x4FC JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH2 0x8F2 DUP4 CALLER DUP5 DUP5 SUB PUSH2 0xD69 JUMP JUMPDEST PUSH2 0x6EB DUP4 DUP4 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x91F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A4 SWAP1 PUSH2 0x1C81 JUMP JUMPDEST PUSH2 0x879 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x957 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A4 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x97E PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6EB SWAP2 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x55A SWAP1 PUSH2 0x1D54 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xABA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH2 0x7FB CALLER DUP6 DUP6 DUP5 SUB PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EA CALLER DUP5 DUP5 PUSH2 0xE8D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE1 DUP6 DUP6 DUP6 PUSH2 0x616 JUMP JUMPDEST POP PUSH2 0xAEE DUP6 DUP6 DUP6 DUP6 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x6BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A4 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB1E DUP5 DUP5 PUSH2 0x5DD JUMP JUMPDEST POP PUSH2 0xB2A DUP5 DUP5 DUP5 PUSH2 0x14E0 JUMP JUMPDEST PUSH2 0x7FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313336333A205F636865636B416E6443616C6C417070726F7665207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x7665727473 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xBA0 DUP2 CALLER PUSH2 0x105D JUMP JUMPDEST PUSH2 0x6EB DUP4 DUP4 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0A DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xBF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A4 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH2 0x83C DUP2 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCBB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6A4 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCCD SWAP2 SWAP1 PUSH2 0x1CC3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xCFA SWAP1 DUP5 SWAP1 PUSH2 0x1CC3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x545 JUMPI POP PUSH2 0x545 DUP3 PUSH2 0x159B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xFCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1002 SWAP1 DUP5 SWAP1 PUSH2 0x1CC3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x104E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1067 DUP3 DUP3 PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x786 JUMPI PUSH2 0x107F DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x15D0 JUMP JUMPDEST PUSH2 0x108A DUP4 PUSH1 0x20 PUSH2 0x15D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x109B SWAP3 SWAP2 SWAP1 PUSH2 0x1B11 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x6A4 SWAP2 PUSH1 0x4 ADD PUSH2 0x1BF3 JUMP JUMPDEST PUSH2 0x10CB DUP3 DUP3 PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x786 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1103 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1151 DUP3 DUP3 PUSH2 0x9FE JUMP JUMPDEST ISZERO PUSH2 0x786 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE PUSH2 0x11C7 JUMPI POP PUSH1 0x0 PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2229F297 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x88A7CA5C SWAP1 PUSH2 0x11FC SWAP1 CALLER SWAP1 DUP11 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1B86 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x122A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x124E SWAP2 SWAP1 PUSH2 0x1AC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x2229F297 PUSH1 0xE2 SHL EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1296 PUSH32 0xF0887BA65EE2024EA881D91B74C2450EF19E1557F03BED3EA9F16B037CBE2DC9 CALLER PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x12F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A2063616C6C657220646F6573206E6F7420686176652074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x4D494E54455220726F6C65 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH2 0x786 DUP3 DUP3 PUSH2 0x176C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1360 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x13D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1403 SWAP1 DUP5 SWAP1 PUSH2 0x1CFA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x14D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A4 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x879 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE PUSH2 0x14F9 JUMPI POP PUSH1 0x0 PUSH2 0x60F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7B04A2D PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x7B04A2D0 SWAP1 PUSH2 0x152C SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1BC3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x155A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x157E SWAP2 SWAP1 PUSH2 0x1AC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x7B04A2D PUSH1 0xE4 SHL EQ SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xB0202A11 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x545 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x545 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x15DF DUP4 PUSH1 0x2 PUSH2 0x1CDB JUMP JUMPDEST PUSH2 0x15EA SWAP1 PUSH1 0x2 PUSH2 0x1CC3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1602 JUMPI PUSH2 0x1602 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x162C JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1647 JUMPI PUSH2 0x1647 PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1676 JUMPI PUSH2 0x1676 PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x169A DUP5 PUSH1 0x2 PUSH2 0x1CDB JUMP JUMPDEST PUSH2 0x16A5 SWAP1 PUSH1 0x1 PUSH2 0x1CC3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x171D JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x16D9 JUMPI PUSH2 0x16D9 PUSH2 0x1DA5 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x16EF JUMPI PUSH2 0x16EF PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1716 DUP2 PUSH2 0x1D3D JUMP JUMPDEST SWAP1 POP PUSH2 0x16A8 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x60F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH32 0x0 DUP2 PUSH2 0x1797 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x17A1 SWAP2 SWAP1 PUSH2 0x1CC3 JUMP JUMPDEST GT ISZERO PUSH2 0x17EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304361707065643A2063617020657863656564656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH2 0x786 DUP3 DUP3 PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xAE5184FBA832CB2B1F702ACA6117B8D265EAF03AD33EB133F19DDE0F5920FA08 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1848 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x185E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1879 JUMPI PUSH2 0x1879 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x18A1 JUMPI PUSH2 0x18A1 PUSH2 0x1DBB JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x18BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60F DUP3 PUSH2 0x1831 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1911 DUP4 PUSH2 0x1831 JUMP JUMPDEST SWAP2 POP PUSH2 0x191F PUSH1 0x20 DUP5 ADD PUSH2 0x1831 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x193D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1946 DUP5 PUSH2 0x1831 JUMP JUMPDEST SWAP3 POP PUSH2 0x1954 PUSH1 0x20 DUP6 ADD PUSH2 0x1831 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x197A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1983 DUP6 PUSH2 0x1831 JUMP JUMPDEST SWAP4 POP PUSH2 0x1991 PUSH1 0x20 DUP7 ADD PUSH2 0x1831 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19C0 DUP8 DUP3 DUP9 ADD PUSH2 0x184D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19E8 DUP4 PUSH2 0x1831 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A14 DUP5 PUSH2 0x1831 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A43 DUP7 DUP3 DUP8 ADD PUSH2 0x184D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x191F PUSH1 0x20 DUP5 ADD PUSH2 0x1831 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ABD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x60F DUP2 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ADA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x60F DUP2 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1AFD DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1B49 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1D11 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1B7A DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1D11 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1BB9 SWAP1 DUP4 ADD DUP5 PUSH2 0x1AE5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1BEA PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1AE5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x60F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313336333A205F636865636B416E6443616C6C5472616E736665722072 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x657665727473 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332304D696E7461626C653A206D696E74696E672069732066696E697368 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1CD6 JUMPI PUSH2 0x1CD6 PUSH2 0x1D8F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1CF5 JUMPI PUSH2 0x1CF5 PUSH2 0x1D8F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1D0C JUMPI PUSH2 0x1D0C PUSH2 0x1D8F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D2C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D14 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1057 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1D4C JUMPI PUSH2 0x1D4C PUSH2 0x1D8F JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1D68 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1D89 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x83C JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0x2F 0xB0 SWAP14 0xEB 0xF7 0xE0 0xAA 0xE 0x22 0xCD 0xC 0xD2 0xBB CALLDATASIZE PUSH27 0x298A796070FB6F19D213286FDF504E6E64736F6C63430008070033 ",
							"sourceMap": "59699:1754:0:-:0;;;;;45556:37;;;-1:-1:-1;;45556:37:0;;;59846:498;;;;;;;;59699:1754;59846:498;;;;;;;;;;:::i;:::-;60071:4;60048:9;60018:5;60025:7;6193:5;6185;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6208:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;;45118:21:0;;;;;;18024:8;18016:42;;;;-1:-1:-1;;;18016:42:0;;1947:2:1;18016:42:0;;;1929:21:1;1986:2;1966:18;;;1959:30;2025:23;2005:18;;;1998:51;2066:18;;18016:42:0;;;;;;;;;18068:11;;42612:23;4164:10;42612:9;:23::i;:::-;59266:44;53806:4;4164:10;59266;:44::i;:::-;59320:37;59216:19;4164:10;59266;:44::i;59320:37::-;60251:4:::3;60232:15;:23;;60224:61;;;::::0;-1:-1:-1;;;60224:61:0;;2297:2:1;60224:61:0::3;::::0;::::3;2279:21:1::0;2336:2;2316:18;;;2309:30;2375:27;2355:18;;;2348:55;2420:18;;60224:61:0::3;2095:349:1::0;60224:61:0::3;60295:42;4164:10:::0;60321:15:::3;60295:11;;;;;:42;;:::i;:::-;59846:498:::0;;;;;59699:1754;;43820:169;43894:6;;;-1:-1:-1;;;;;43910:17:0;;;43894:6;43910:17;;;-1:-1:-1;;;;;;43910:17:0;;;;;;43942:40;;43894:6;;;;;;;;43942:40;;43875:16;;43942:40;43865:124;43820:169;:::o;58131:110::-;58209:25;58220:4;58226:7;58209:10;:25::i;:::-;58131:110;;:::o;12831:389::-;-1:-1:-1;;;;;12914:21:0;;12906:65;;;;-1:-1:-1;;;12906:65:0;;2651:2:1;12906:65:0;;;2633:21:1;2690:2;2670:18;;;2663:30;2729:33;2709:18;;;2702:61;2780:18;;12906:65:0;2449:355:1;12906:65:0;13058:6;13042:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;13074:18:0;;:9;:18;;;;;;;;;;:28;;13096:6;;13074:9;:28;;13096:6;;13074:28;:::i;:::-;;;;-1:-1:-1;;13117:37:0;;2955:25:1;;;-1:-1:-1;;;;;13117:37:0;;;13134:1;;13117:37;;2943:2:1;2928:18;13117:37:0;;;;;;;58131:110;;:::o;58619:224::-;54821:4;54848:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;54848:29:0;;;;;;;;;;;;58688:149;;58731:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;58731:29:0;;;;;;;;;:36;;-1:-1:-1;;58731:36:0;58763:4;58731:36;;;58813:12;4164:10;;4085:96;58813:12;-1:-1:-1;;;;;58786:40:0;58804:7;-1:-1:-1;;;;;58786:40:0;58798:4;58786:40;;;;;;;;;;58619:224;;:::o;59699:1754::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;59699:1754:0;;;-1:-1:-1;59699:1754:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:1;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:1;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:1;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:1:o;904:836::-;1028:6;1036;1044;1052;1060;1113:3;1101:9;1092:7;1088:23;1084:33;1081:53;;;1130:1;1127;1120:12;1081:53;1157:16;;-1:-1:-1;;;;;1222:14:1;;;1219:34;;;1249:1;1246;1239:12;1219:34;1272:61;1325:7;1316:6;1305:9;1301:22;1272:61;:::i;:::-;1262:71;;1379:2;1368:9;1364:18;1358:25;1342:41;;1408:2;1398:8;1395:16;1392:36;;;1424:1;1421;1414:12;1392:36;;1447:63;1502:7;1491:8;1480:9;1476:24;1447:63;:::i;:::-;1437:73;;;1553:2;1542:9;1538:18;1532:25;1597:4;1590:5;1586:16;1579:5;1576:27;1566:55;;1617:1;1614;1607:12;1566:55;1685:2;1670:18;;1664:25;1729:3;1714:19;;;1708:26;904:836;;;;-1:-1:-1;1640:5:1;1664:25;1708:26;904:836;-1:-1:-1;;;904:836:1:o;2991:225::-;3031:3;3062:1;3058:6;3055:1;3052:13;3049:136;;;3107:10;3102:3;3098:20;3095:1;3088:31;3142:4;3139:1;3132:15;3170:4;3167:1;3160:15;3049:136;-1:-1:-1;3201:9:1;;2991:225::o;3221:380::-;3300:1;3296:12;;;;3343;;;3364:61;;3418:4;3410:6;3406:17;3396:27;;3364:61;3471:2;3463:6;3460:14;3440:18;3437:38;3434:161;;;3517:10;3512:3;3508:20;3505:1;3498:31;3552:4;3549:1;3542:15;3580:4;3577:1;3570:15;3434:161;;3221:380;;;:::o;3606:127::-;3667:10;3662:3;3658:20;3655:1;3648:31;3698:4;3695:1;3688:15;3722:4;3719:1;3712:15;3606:127;59699:1754:0;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_2019": {
									"entryPoint": null,
									"id": 2019,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_2306": {
									"entryPoint": null,
									"id": 2306,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_662": {
									"entryPoint": null,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_640": {
									"entryPoint": 3433,
									"id": 640,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_651": {
									"entryPoint": null,
									"id": 651,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_595": {
									"entryPoint": 4864,
									"id": 595,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkAndCallApprove_1498": {
									"entryPoint": 5344,
									"id": 1498,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_checkAndCallTransfer_1456": {
									"entryPoint": 4526,
									"id": 1456,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_checkRole_2116": {
									"entryPoint": 4189,
									"id": 2116,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_finishMinting_1721": {
									"entryPoint": 6137,
									"id": 1721,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_finishMinting_2454": {
									"entryPoint": 5288,
									"id": 2454,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_2267": {
									"entryPoint": 4289,
									"id": 2267,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_2441": {
									"entryPoint": 4716,
									"id": 2441,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_523": {
									"entryPoint": 3173,
									"id": 523,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_784": {
									"entryPoint": 5996,
									"id": 784,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_2297": {
									"entryPoint": 4423,
									"id": 2297,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setOwner_1600": {
									"entryPoint": 5198,
									"id": 1600,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_467": {
									"entryPoint": 3725,
									"id": 467,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_255": {
									"entryPoint": null,
									"id": 255,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approveAndCall_1381": {
									"entryPoint": 1776,
									"id": 1381,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approveAndCall_1411": {
									"entryPoint": 2834,
									"id": 1411,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_276": {
									"entryPoint": 1501,
									"id": 276,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_216": {
									"entryPoint": null,
									"id": 216,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_721": {
									"entryPoint": 2171,
									"id": 721,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_682": {
									"entryPoint": 2098,
									"id": 682,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@cap_755": {
									"entryPoint": null,
									"id": 755,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_1652": {
									"entryPoint": null,
									"id": 1652,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_2404": {
									"entryPoint": null,
									"id": 2404,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_390": {
									"entryPoint": 2616,
									"id": 390,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@finishMinting_1709": {
									"entryPoint": 2300,
									"id": 1709,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getRoleAdmin_2131": {
									"entryPoint": null,
									"id": 2131,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_2151": {
									"entryPoint": 1733,
									"id": 2151,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_2073": {
									"entryPoint": 2558,
									"id": 2073,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_351": {
									"entryPoint": 1930,
									"id": 351,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_804": {
									"entryPoint": null,
									"id": 804,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_1699": {
									"entryPoint": 2053,
									"id": 1699,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mintingFinished_1683": {
									"entryPoint": null,
									"id": 1683,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_172": {
									"entryPoint": 1355,
									"id": 172,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_1530": {
									"entryPoint": null,
									"id": 1530,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@recoverERC20_1625": {
									"entryPoint": 2343,
									"id": 1625,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_1558": {
									"entryPoint": 2111,
									"id": 1558,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_2194": {
									"entryPoint": 1804,
									"id": 2194,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_2171": {
									"entryPoint": 2948,
									"id": 2171,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1113": {
									"entryPoint": null,
									"id": 1113,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1258": {
									"entryPoint": 5531,
									"id": 1258,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2054": {
									"entryPoint": 3396,
									"id": 2054,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2420": {
									"entryPoint": 1338,
									"id": 2420,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_182": {
									"entryPoint": 2601,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toHexString_1995": {
									"entryPoint": 5584,
									"id": 1995,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferAndCall_1276": {
									"entryPoint": 1523,
									"id": 1276,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transferAndCall_1308": {
									"entryPoint": 1990,
									"id": 1308,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFromAndCall_1329": {
									"entryPoint": 2986,
									"id": 1329,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFromAndCall_1363": {
									"entryPoint": 2772,
									"id": 1363,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@transferFrom_324": {
									"entryPoint": 1558,
									"id": 324,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_1581": {
									"entryPoint": 3015,
									"id": 1581,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_237": {
									"entryPoint": 2759,
									"id": 237,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 6193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 6221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 6767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 6792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 6885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6929,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7046,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7107,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24c05224b594f2da9addf5e8c7d8c0b134accd47c2c66f2be695c0776a0387b9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d4eac389b100ca6a7240e4a1075be8a5e69fbe89e551e43c6fef394240e24fc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_76406793cf8b9e5cb67a0bad2386ad7900e8f178a44697631206894529378d14__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f0296ba1e0cd26c09d97cb12c7a2251bdeb7854af8141b03b7f1306fbe6b4984__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 7441,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 7485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7567,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7589,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7611,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 7633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:17470:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "244:666:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "293:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "302:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "305:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "295:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "295:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "295:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "272:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "280:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "268:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "268:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "287:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "264:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "264:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "257:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "257:35:1"
															},
															"nodeType": "YulIf",
															"src": "254:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "318:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "341:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "328:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "328:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "322:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "357:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "367:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "361:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "408:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "410:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "410:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "410:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "400:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "404:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "397:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "397:10:1"
															},
															"nodeType": "YulIf",
															"src": "394:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "439:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "453:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "449:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "449:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "443:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "465:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "485:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "479:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "479:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "469:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "497:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "519:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "543:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "547:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "539:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "539:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "554:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "535:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "535:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "559:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "531:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "531:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "564:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "527:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "527:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "515:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "515:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "501:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "627:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "629:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "629:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "629:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "586:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "598:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "583:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "583:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "606:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "618:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "603:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "603:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "580:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "580:46:1"
															},
															"nodeType": "YulIf",
															"src": "577:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "665:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "669:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "658:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "658:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "658:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "696:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "704:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "689:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "689:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "689:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "755:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "764:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "767:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "757:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "757:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "757:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "730:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "738:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "726:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "726:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "743:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "722:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "722:26:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "750:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "719:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "719:35:1"
															},
															"nodeType": "YulIf",
															"src": "716:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "797:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "805:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "793:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "793:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "816:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "824:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "812:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "812:17:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "831:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "780:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "780:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "780:54:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "858:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "866:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "854:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "854:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "871:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "850:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "850:26:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "878:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "843:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "843:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "843:37:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "889:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "898:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "889:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "218:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "226:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "234:5:1",
														"type": ""
													}
												],
												"src": "192:718:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "985:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1031:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1043:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1033:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1033:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1033:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1006:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1015:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1002:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1002:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1027:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "998:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "998:32:1"
															},
															"nodeType": "YulIf",
															"src": "995:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1056:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1085:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1066:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1066:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1056:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "951:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "962:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "974:6:1",
														"type": ""
													}
												],
												"src": "915:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1193:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1239:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1248:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1251:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1241:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1241:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1241:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1214:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1223:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1235:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1206:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:32:1"
															},
															"nodeType": "YulIf",
															"src": "1203:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1264:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1293:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1274:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1264:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1312:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1345:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1356:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1341:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1341:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1322:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1322:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1312:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1151:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1162:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1174:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1182:6:1",
														"type": ""
													}
												],
												"src": "1106:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1475:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1521:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1530:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1533:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1523:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1523:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1523:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1496:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1505:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1492:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1492:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1517:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1488:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1488:32:1"
															},
															"nodeType": "YulIf",
															"src": "1485:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1546:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1575:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1556:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1556:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1546:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1594:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1627:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1638:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1623:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1604:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1604:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1594:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1651:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1678:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1689:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1674:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1661:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1661:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1651:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1425:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1436:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1448:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1456:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1464:6:1",
														"type": ""
													}
												],
												"src": "1371:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1834:407:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1881:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1890:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1893:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1883:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1883:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1883:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1855:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1864:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1851:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1851:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1876:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1847:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1847:33:1"
															},
															"nodeType": "YulIf",
															"src": "1844:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1906:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1935:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1916:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1916:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1906:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1954:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1987:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1998:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1983:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1983:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1964:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1964:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1954:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2011:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2038:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2049:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2034:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2034:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2021:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2021:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2062:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2093:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2104:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2089:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2089:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2076:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2076:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2066:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2151:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2160:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2163:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2153:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2153:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2153:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2123:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2131:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:30:1"
															},
															"nodeType": "YulIf",
															"src": "2117:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2176:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2207:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2218:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2203:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2203:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2227:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2186:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2186:49:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2176:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1776:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1787:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1799:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1807:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1815:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1823:6:1",
														"type": ""
													}
												],
												"src": "1704:537:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2333:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2379:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2388:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2391:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2381:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2381:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2381:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2354:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2363:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2350:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2350:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2375:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2346:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2346:32:1"
															},
															"nodeType": "YulIf",
															"src": "2343:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2404:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2433:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2414:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2414:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2404:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2452:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2479:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2490:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2475:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2475:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2462:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2462:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2452:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2291:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2302:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2314:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2322:6:1",
														"type": ""
													}
												],
												"src": "2246:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2618:349:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2664:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2673:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2676:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2666:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2666:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2666:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2639:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2648:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2635:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2635:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2660:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2631:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2631:32:1"
															},
															"nodeType": "YulIf",
															"src": "2628:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2689:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2718:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2699:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2699:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2689:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2737:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2764:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2775:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2760:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2760:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2747:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2747:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2737:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2788:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2819:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2830:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2815:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2802:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2802:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2792:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2877:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2886:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2889:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2879:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2879:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2879:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2849:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2857:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2846:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2846:30:1"
															},
															"nodeType": "YulIf",
															"src": "2843:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2902:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2933:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2944:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2929:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2929:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2953:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2912:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2912:49:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2902:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2568:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2579:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2591:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2599:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2607:6:1",
														"type": ""
													}
												],
												"src": "2505:462:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3050:199:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3096:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3105:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3108:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3098:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3098:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3098:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3071:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3080:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3067:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3067:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3092:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3063:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3063:32:1"
															},
															"nodeType": "YulIf",
															"src": "3060:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3121:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3140:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3134:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3134:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3125:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3203:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3212:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3215:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3205:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3205:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3205:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3172:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3193:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3186:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3186:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3179:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3169:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3169:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3162:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3162:40:1"
															},
															"nodeType": "YulIf",
															"src": "3159:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3228:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3238:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3228:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3016:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3027:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3039:6:1",
														"type": ""
													}
												],
												"src": "2972:277:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3324:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3370:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3379:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3382:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3372:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3372:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3372:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3345:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3354:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3341:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3341:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3366:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3337:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3337:32:1"
															},
															"nodeType": "YulIf",
															"src": "3334:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3395:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3418:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3405:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3405:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3395:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3290:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3301:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3313:6:1",
														"type": ""
													}
												],
												"src": "3254:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3526:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3572:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3581:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3584:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3574:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3574:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3574:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3547:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3556:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3543:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3543:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3568:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3539:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3539:32:1"
															},
															"nodeType": "YulIf",
															"src": "3536:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3597:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3620:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3607:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3607:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3597:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3639:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3672:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3683:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3668:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3668:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3649:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3649:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3639:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3484:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3495:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3507:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3515:6:1",
														"type": ""
													}
												],
												"src": "3439:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3767:176:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3813:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3822:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3825:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3815:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3815:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3815:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3788:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3797:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3784:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3784:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3809:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3780:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3780:32:1"
															},
															"nodeType": "YulIf",
															"src": "3777:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3838:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3864:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3851:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3851:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3842:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3907:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3883:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3883:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3883:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3922:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3932:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3922:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3733:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3744:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3756:6:1",
														"type": ""
													}
												],
												"src": "3698:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4028:169:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4074:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4083:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4086:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4076:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4076:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4076:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4049:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4058:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4045:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4045:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4070:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:32:1"
															},
															"nodeType": "YulIf",
															"src": "4038:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4099:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4118:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4112:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4112:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4103:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4161:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "4137:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4137:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4137:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4176:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4186:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4176:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3994:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4005:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4017:6:1",
														"type": ""
													}
												],
												"src": "3948:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4272:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4318:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4327:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4330:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4320:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4320:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4320:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4293:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4302:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4289:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4289:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4314:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4285:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4285:32:1"
															},
															"nodeType": "YulIf",
															"src": "4282:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4343:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4366:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4353:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4353:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4343:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4238:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4249:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4261:6:1",
														"type": ""
													}
												],
												"src": "4202:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4436:208:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4446:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4466:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4460:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4460:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4450:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4488:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4493:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4481:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4481:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4481:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4535:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4542:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4531:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4531:16:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4553:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4558:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4549:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4549:14:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4565:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4509:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4509:63:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4509:63:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4581:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4596:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "4609:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4617:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4605:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4605:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4626:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4622:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4622:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4601:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4601:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4592:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4592:39:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4633:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4588:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4588:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4581:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4413:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4420:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4428:3:1",
														"type": ""
													}
												],
												"src": "4387:257:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5038:397:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5055:3:1"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5060:25:1",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5048:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5048:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5048:38:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5095:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5115:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5109:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5109:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5099:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5157:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5165:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5153:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5153:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5176:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5181:2:1",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5172:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5172:12:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5186:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5131:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5131:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5131:62:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5202:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5216:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5221:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5212:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:16:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5206:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5248:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5252:2:1",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5244:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5244:11:1"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5257:19:1",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5237:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5237:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5237:40:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5286:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5308:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5302:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5302:13:1"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "5290:8:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5350:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5358:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5346:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5346:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5369:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5373:2:1",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5365:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5365:11:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "5378:8:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5324:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5324:63:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5324:63:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5396:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5411:2:1"
																			},
																			{
																				"name": "length_1",
																				"nodeType": "YulIdentifier",
																				"src": "5415:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5407:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5407:17:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5426:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5403:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5403:26:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5396:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5006:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5011:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5019:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5030:3:1",
														"type": ""
													}
												],
												"src": "4649:786:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5541:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5551:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5563:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5574:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5559:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5559:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5551:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5593:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5608:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5624:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5629:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5620:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5620:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5633:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5616:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5616:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5604:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5604:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5586:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5510:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5521:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5532:4:1",
														"type": ""
													}
												],
												"src": "5440:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5851:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5861:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5879:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5884:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5875:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5875:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5888:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5871:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5871:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5865:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5906:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5921:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5929:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5917:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5917:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5899:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5899:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5899:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5953:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5964:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5949:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5949:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5973:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5981:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5969:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5969:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5942:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5942:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5942:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6005:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6016:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6001:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6001:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6021:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5994:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5994:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5994:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6048:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6059:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6044:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6044:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6064:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6037:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6037:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6037:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6077:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6102:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6114:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6125:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6110:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6110:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "6085:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6085:45:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6077:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5796:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5807:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5815:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5823:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5831:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5842:4:1",
														"type": ""
													}
												],
												"src": "5648:488:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6270:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6280:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6292:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6303:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6288:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6288:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6280:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6322:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6337:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6353:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6358:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6349:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6349:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6362:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6345:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6345:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6333:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6333:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6315:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6315:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6315:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6386:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6397:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6382:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6382:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6402:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6375:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6375:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6375:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6231:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6242:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6250:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6261:4:1",
														"type": ""
													}
												],
												"src": "6141:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6595:210:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6612:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6627:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6643:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6648:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6639:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6639:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6652:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6635:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6635:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6623:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6623:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6605:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6605:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6605:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6676:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6687:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6672:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6672:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6692:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6665:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6665:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6665:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6719:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6730:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6715:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6715:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6735:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6708:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6708:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6708:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6747:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6772:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6784:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6795:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6780:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6780:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "6755:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6755:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6747:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6548:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6559:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6567:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6575:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6586:4:1",
														"type": ""
													}
												],
												"src": "6420:385:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6905:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6915:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6927:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6938:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6923:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6923:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6915:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6957:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "6982:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6975:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6975:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6968:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6968:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6950:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6950:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6950:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6874:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6885:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6896:4:1",
														"type": ""
													}
												],
												"src": "6810:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7103:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7113:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7125:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7136:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7121:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7121:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7113:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7155:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7166:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7148:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7148:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7148:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7072:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7083:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7094:4:1",
														"type": ""
													}
												],
												"src": "7002:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7305:98:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7322:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7333:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7315:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7315:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7315:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7345:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7370:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7382:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7393:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7378:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7378:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7353:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7353:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7345:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7274:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7285:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7296:4:1",
														"type": ""
													}
												],
												"src": "7184:219:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7582:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7599:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7610:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7592:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7592:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7592:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7633:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7644:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7629:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7629:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7649:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7622:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7622:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7672:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7683:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7668:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7668:18:1"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7688:34:1",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7661:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7661:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7661:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7732:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7744:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7755:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7740:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7740:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7732:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7559:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7573:4:1",
														"type": ""
													}
												],
												"src": "7408:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7943:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7960:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7971:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7953:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7953:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7953:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7994:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8005:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7990:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7990:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8010:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7983:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7983:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7983:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8033:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8044:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8029:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8029:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8049:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8022:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8022:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8022:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8104:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8115:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8100:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8100:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8120:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8093:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8093:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8093:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8135:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8147:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8158:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8143:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8143:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8135:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7920:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7934:4:1",
														"type": ""
													}
												],
												"src": "7769:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8347:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8364:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8375:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8357:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8357:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8357:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8398:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8409:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8394:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8394:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8414:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8387:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8387:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8387:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8437:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8448:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8433:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8433:18:1"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8453:34:1",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8426:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8426:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8426:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8508:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8519:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8504:18:1"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8524:4:1",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8497:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8497:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8497:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8538:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8550:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8561:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8546:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8546:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8538:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8324:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8338:4:1",
														"type": ""
													}
												],
												"src": "8173:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8750:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8767:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8778:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8760:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8760:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8760:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8801:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8812:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8797:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8797:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8817:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8790:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8790:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8790:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8840:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8851:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8836:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8836:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8856:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8829:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8829:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8829:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8911:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8922:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8907:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8907:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8927:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8900:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8900:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8900:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8945:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8957:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8968:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8953:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8953:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8945:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8727:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8741:4:1",
														"type": ""
													}
												],
												"src": "8576:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9157:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9174:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9185:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9167:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9167:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9167:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9208:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9219:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9204:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9204:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9224:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9197:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9197:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9197:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9247:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9258:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9243:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9243:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9263:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9236:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9236:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9236:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9318:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9329:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9314:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9314:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9334:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9307:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9307:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9307:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9348:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9360:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9371:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9356:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9356:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9348:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9134:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9148:4:1",
														"type": ""
													}
												],
												"src": "8983:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9560:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9577:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9588:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9570:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9570:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9570:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9611:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9622:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9607:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9607:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9627:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9600:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9600:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9600:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9650:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9661:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9646:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9646:18:1"
																	},
																	{
																		"hexValue": "455243313336333a205f636865636b416e6443616c6c417070726f7665207265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9666:34:1",
																		"type": "",
																		"value": "ERC1363: _checkAndCallApprove re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9639:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9639:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9639:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9721:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9732:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9717:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9717:18:1"
																	},
																	{
																		"hexValue": "7665727473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9737:7:1",
																		"type": "",
																		"value": "verts"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9710:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9710:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9710:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9754:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9766:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9777:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9762:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9762:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9754:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24c05224b594f2da9addf5e8c7d8c0b134accd47c2c66f2be695c0776a0387b9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9537:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9551:4:1",
														"type": ""
													}
												],
												"src": "9386:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9966:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9983:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9994:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9976:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9976:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9976:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10017:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10028:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10013:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10013:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10033:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10006:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10006:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10006:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10056:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10067:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10052:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10052:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10072:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10045:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10045:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10045:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10127:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10138:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10123:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10123:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10143:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10116:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10116:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10161:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10173:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10184:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10169:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10169:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10161:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9943:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9957:4:1",
														"type": ""
													}
												],
												"src": "9792:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10373:233:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10390:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10401:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10383:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10383:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10383:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10424:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10435:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10420:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10420:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10440:2:1",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10413:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10413:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10413:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10463:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10474:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10459:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10459:18:1"
																	},
																	{
																		"hexValue": "526f6c65733a2063616c6c657220646f6573206e6f7420686176652074686520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10479:34:1",
																		"type": "",
																		"value": "Roles: caller does not have the "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10452:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10452:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10452:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10534:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10545:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10530:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10530:18:1"
																	},
																	{
																		"hexValue": "4d494e54455220726f6c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10550:13:1",
																		"type": "",
																		"value": "MINTER role"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10523:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10523:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10523:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10573:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10585:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10596:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10581:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10581:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10573:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d4eac389b100ca6a7240e4a1075be8a5e69fbe89e551e43c6fef394240e24fc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10350:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10364:4:1",
														"type": ""
													}
												],
												"src": "10199:407:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10785:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10802:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10813:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10795:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10795:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10795:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10836:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10847:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10832:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10832:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10852:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10825:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10825:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10825:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10875:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10886:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10871:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10871:18:1"
																	},
																	{
																		"hexValue": "455243313336333a205f636865636b416e6443616c6c5472616e736665722072",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10891:34:1",
																		"type": "",
																		"value": "ERC1363: _checkAndCallTransfer r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10864:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10864:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10864:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10946:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10957:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10942:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10942:18:1"
																	},
																	{
																		"hexValue": "657665727473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10962:8:1",
																		"type": "",
																		"value": "everts"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10935:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10935:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10935:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10980:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10992:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11003:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10988:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10988:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10980:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_76406793cf8b9e5cb67a0bad2386ad7900e8f178a44697631206894529378d14__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10762:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10776:4:1",
														"type": ""
													}
												],
												"src": "10611:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11192:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11209:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11220:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11202:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11202:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11202:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11243:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11254:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11239:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11259:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11232:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11232:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11282:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11293:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11278:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11278:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11298:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11271:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11271:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11271:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11353:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11364:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11349:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11349:18:1"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11369:10:1",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11342:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11342:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11389:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11401:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11412:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11397:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11397:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11389:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11169:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11183:4:1",
														"type": ""
													}
												],
												"src": "11018:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11601:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11618:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11629:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11611:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11611:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11611:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11652:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11663:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11648:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11648:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11668:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11641:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11641:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11641:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11691:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11702:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11687:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11687:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11707:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11680:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11680:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11680:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11751:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11763:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11774:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11759:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11759:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11751:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11578:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11592:4:1",
														"type": ""
													}
												],
												"src": "11427:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11962:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11979:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11990:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11972:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11972:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11972:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12013:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12024:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12009:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12009:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12029:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12002:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12002:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12002:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12052:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12063:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12048:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12048:18:1"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12068:34:1",
																		"type": "",
																		"value": "ERC20: burn amount exceeds allow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12041:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12041:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12041:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12123:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12134:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12119:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12119:18:1"
																	},
																	{
																		"hexValue": "616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12139:6:1",
																		"type": "",
																		"value": "ance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12112:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12112:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12112:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12155:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12167:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12178:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12163:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12163:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12155:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11939:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11953:4:1",
														"type": ""
													}
												],
												"src": "11788:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12367:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12384:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12395:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12377:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12377:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12377:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12418:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12429:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12414:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12414:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12434:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12407:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12407:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12407:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12457:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12468:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12453:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12453:18:1"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12473:34:1",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12446:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12446:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12446:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12528:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12539:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12524:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12524:18:1"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12544:3:1",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12517:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12517:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12517:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12557:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12569:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12580:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12565:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12565:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12557:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12344:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12358:4:1",
														"type": ""
													}
												],
												"src": "12193:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12769:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12786:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12797:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12779:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12779:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12779:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12820:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12831:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12816:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12816:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12836:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12809:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12809:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12809:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12859:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12870:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12855:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12855:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12875:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12848:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12848:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12848:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12930:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12941:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12926:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12926:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12946:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12919:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12919:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12919:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12963:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12975:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12986:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12971:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12971:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12963:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12746:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12760:4:1",
														"type": ""
													}
												],
												"src": "12595:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13175:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13192:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13203:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13185:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13185:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13185:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13226:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13237:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13222:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13222:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13242:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13215:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13215:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13215:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13265:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13276:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13261:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13261:18:1"
																	},
																	{
																		"hexValue": "45524332304361707065643a20636170206578636565646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13281:27:1",
																		"type": "",
																		"value": "ERC20Capped: cap exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13254:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13254:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13254:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13318:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13330:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13341:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13326:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13326:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13318:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13152:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13166:4:1",
														"type": ""
													}
												],
												"src": "13001:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13529:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13546:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13557:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13539:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13539:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13539:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13580:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13591:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13576:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13576:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13596:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13569:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13569:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13569:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13619:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13630:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13615:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13615:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13635:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13608:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13608:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13608:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13690:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13701:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13686:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13686:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13706:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13679:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13679:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13679:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13722:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13734:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13745:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13730:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13730:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13722:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13506:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13520:4:1",
														"type": ""
													}
												],
												"src": "13355:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13934:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13951:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13962:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13944:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13944:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13944:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13985:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13996:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13981:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13981:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14001:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13974:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13974:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13974:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14024:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14035:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14020:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14020:18:1"
																	},
																	{
																		"hexValue": "45524332304d696e7461626c653a206d696e74696e672069732066696e697368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14040:34:1",
																		"type": "",
																		"value": "ERC20Mintable: minting is finish"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14013:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14013:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14013:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14095:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14106:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14091:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14091:18:1"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14111:4:1",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14084:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14084:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14084:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14125:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14148:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14133:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14125:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f0296ba1e0cd26c09d97cb12c7a2251bdeb7854af8141b03b7f1306fbe6b4984__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13911:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13925:4:1",
														"type": ""
													}
												],
												"src": "13760:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14337:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14354:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14365:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14347:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14347:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14347:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14388:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14399:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14384:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14384:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14404:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14377:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14377:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14377:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14427:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14438:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14423:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14423:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14443:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14416:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14416:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14416:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14498:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14509:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14494:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14494:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14514:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14487:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14487:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14487:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14531:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14543:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14554:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14539:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14539:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14531:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14314:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14328:4:1",
														"type": ""
													}
												],
												"src": "14163:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14743:237:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14760:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14771:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14753:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14753:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14753:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14794:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14805:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14790:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14790:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14810:2:1",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14783:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14783:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14783:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14833:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14844:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14829:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14829:18:1"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14849:34:1",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14822:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14822:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14822:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14904:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14915:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14900:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14900:18:1"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14920:17:1",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14893:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14893:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14893:45:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14947:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14959:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14970:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14955:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14955:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14947:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14720:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14734:4:1",
														"type": ""
													}
												],
												"src": "14569:411:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15159:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15176:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15187:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15169:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15169:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15169:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15210:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15221:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15206:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15226:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15199:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15199:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15199:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15249:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15260:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15245:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15245:18:1"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15265:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15238:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15238:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15238:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15308:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15320:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15331:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15316:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15316:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15308:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15136:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15150:4:1",
														"type": ""
													}
												],
												"src": "14985:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15446:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15456:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15468:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15479:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15464:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15464:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15456:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15498:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15509:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15491:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15491:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15491:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15415:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15426:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15437:4:1",
														"type": ""
													}
												],
												"src": "15345:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15624:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15634:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15646:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15657:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15642:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15642:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15634:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15676:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15691:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15699:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15687:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15687:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15669:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15669:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15669:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15593:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15604:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15615:4:1",
														"type": ""
													}
												],
												"src": "15527:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15764:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15791:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15793:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15793:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15793:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15780:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "15787:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "15783:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15783:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15777:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15777:13:1"
															},
															"nodeType": "YulIf",
															"src": "15774:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15822:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15833:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15836:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15829:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15829:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "15822:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15747:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15750:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "15756:3:1",
														"type": ""
													}
												],
												"src": "15716:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15901:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15960:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15962:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15962:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15962:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "15932:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "15925:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15925:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "15918:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15918:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "15940:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15951:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "15947:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15947:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "15955:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "15943:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15943:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15937:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15937:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15914:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15914:45:1"
															},
															"nodeType": "YulIf",
															"src": "15911:71:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15991:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16006:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16009:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "16002:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16002:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "15991:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15880:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15883:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "15889:7:1",
														"type": ""
													}
												],
												"src": "15849:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16071:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16093:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16095:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16095:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16095:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16087:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16090:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "16084:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16084:8:1"
															},
															"nodeType": "YulIf",
															"src": "16081:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16124:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16136:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16139:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "16132:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16132:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "16124:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16053:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16056:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "16062:4:1",
														"type": ""
													}
												],
												"src": "16022:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16205:205:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16215:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16224:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "16219:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16284:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "16309:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "16314:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "16305:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16305:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "16328:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "16333:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "16324:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "16324:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "16318:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16318:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16298:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16298:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16298:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "16245:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16248:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "16242:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16242:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "16256:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16258:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "16267:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16270:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "16263:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16263:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "16258:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "16238:3:1",
																"statements": []
															},
															"src": "16234:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16373:31:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "16386:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "16391:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "16382:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16382:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16400:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16375:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16375:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16375:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "16362:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16365:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16359:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16359:13:1"
															},
															"nodeType": "YulIf",
															"src": "16356:48:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "16183:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "16188:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16193:6:1",
														"type": ""
													}
												],
												"src": "16152:258:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16462:89:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16489:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16491:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16491:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16491:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16482:5:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16475:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16475:13:1"
															},
															"nodeType": "YulIf",
															"src": "16472:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16520:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16531:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16542:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "16538:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16538:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16527:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16527:18:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16520:3:1"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16444:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16454:3:1",
														"type": ""
													}
												],
												"src": "16415:136:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16611:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16621:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16635:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16638:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "16631:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16631:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "16621:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16652:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16682:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16688:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16678:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16678:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "16656:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16729:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16731:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "16745:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16753:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "16741:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16741:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16731:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "16709:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16702:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16702:26:1"
															},
															"nodeType": "YulIf",
															"src": "16699:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16819:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16840:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "16847:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "16852:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "16843:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16843:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16833:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16833:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16833:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16884:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16887:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16877:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16877:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16877:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16912:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16915:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16905:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16905:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16905:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "16775:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16798:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16806:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "16795:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16795:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "16772:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16772:38:1"
															},
															"nodeType": "YulIf",
															"src": "16769:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "16591:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16600:6:1",
														"type": ""
													}
												],
												"src": "16556:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16973:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16990:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16997:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17002:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16993:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16993:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16983:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16983:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16983:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17030:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17033:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17023:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17023:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17023:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17054:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17057:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17047:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17047:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17047:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "16941:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17105:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17122:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17129:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17134:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "17125:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17125:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17115:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17115:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17115:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17162:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17165:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17155:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17155:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17155:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17186:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17189:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17179:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17179:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17179:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "17073:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17237:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17254:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17261:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17266:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "17257:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17257:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17247:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17247:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17247:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17294:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17297:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17287:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17287:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17287:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17318:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17321:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17311:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17311:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17311:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "17205:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17381:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17446:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17455:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17458:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17448:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17448:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17448:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17404:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17415:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "17426:3:1",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "17431:10:1",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "17422:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17422:20:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "17411:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17411:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17401:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17401:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17394:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17394:51:1"
															},
															"nodeType": "YulIf",
															"src": "17391:71:1"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17370:5:1",
														"type": ""
													}
												],
												"src": "17337:131:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_bytes(value2, add(headStart, 96))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24c05224b594f2da9addf5e8c7d8c0b134accd47c2c66f2be695c0776a0387b9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1363: _checkAndCallApprove re\")\n        mstore(add(headStart, 96), \"verts\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d4eac389b100ca6a7240e4a1075be8a5e69fbe89e551e43c6fef394240e24fc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Roles: caller does not have the \")\n        mstore(add(headStart, 96), \"MINTER role\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76406793cf8b9e5cb67a0bad2386ad7900e8f178a44697631206894529378d14__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC1363: _checkAndCallTransfer r\")\n        mstore(add(headStart, 96), \"everts\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds allow\")\n        mstore(add(headStart, 96), \"ance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC20Capped: cap exceeded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f0296ba1e0cd26c09d97cb12c7a2251bdeb7854af8141b03b7f1306fbe6b4984__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20Mintable: minting is finish\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"728": [
									{
										"length": 32,
										"start": 807
									},
									{
										"length": 32,
										"start": 5998
									}
								],
								"1632": [
									{
										"length": 32,
										"start": 744
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106102115760003560e01c806370a0823111610125578063a457c2d7116100ad578063d53913931161007c578063d5391393146104a1578063d547741f146104c8578063d8fbe994146104db578063dd62ed3e146104ee578063f2fde38b1461052757600080fd5b8063a457c2d714610455578063a9059cbb14610468578063c1d34b891461047b578063cae9ca511461048e57600080fd5b80638980f11f116100f45780638980f11f146103f65780638da5cb5b1461040957806391d148541461043257806395d89b4114610445578063a217fddf1461044d57600080fd5b806370a08231146103aa578063715018a6146103d357806379cc6790146103db5780637d64bcb4146103ee57600080fd5b80632f2ff15d116101a857806336568abe1161017757806336568abe1461034b578063395093511461035e5780634000aea01461037157806340c10f191461038457806342966c681461039757600080fd5b80632f2ff15d146102cc578063313ce567146102e15780633177029f14610312578063355274ea1461032557600080fd5b80631296ee62116101e45780631296ee621461027157806318160ddd1461028457806323b872dd14610296578063248a9ca3146102a957600080fd5b806301ffc9a71461021657806305d2035b1461023e57806306fdde0314610249578063095ea7b31461025e575b600080fd5b610229610224366004611aab565b61053a565b60405190151581526020015b60405180910390f35b60055460ff16610229565b61025161054b565b6040516102359190611bf3565b61022961026c3660046119cc565b6105dd565b61022961027f3660046119cc565b6105f3565b6002545b604051908152602001610235565b6102296102a4366004611928565b610616565b6102886102b7366004611a6f565b60009081526006602052604090206001015490565b6102df6102da366004611a88565b6106c5565b005b60405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610235565b6102296103203660046119cc565b6106f0565b7f0000000000000000000000000000000000000000000000000000000000000000610288565b6102df610359366004611a88565b61070c565b61022961036c3660046119cc565b61078a565b61022961037f3660046119f6565b6107c6565b6102df6103923660046119cc565b610805565b6102df6103a5366004611a6f565b610832565b6102886103b83660046118da565b6001600160a01b031660009081526020819052604090205490565b6102df61083f565b6102df6103e93660046119cc565b61087b565b6102df6108fc565b6102df6104043660046119cc565b610927565b60055461010090046001600160a01b03166040516001600160a01b039091168152602001610235565b610229610440366004611a88565b6109fe565b610251610a29565b610288600081565b6102296104633660046119cc565b610a38565b6102296104763660046119cc565b610ac7565b610229610489366004611964565b610ad4565b61022961049c3660046119f6565b610b12565b6102887ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc981565b6102df6104d6366004611a88565b610b84565b6102296104e9366004611928565b610baa565b6102886104fc3660046118f5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102df6105353660046118da565b610bc7565b600061054582610d44565b92915050565b60606003805461055a90611d54565b80601f016020809104026020016040519081016040528092919081815260200182805461058690611d54565b80156105d35780601f106105a8576101008083540402835291602001916105d3565b820191906000526020600020905b8154815290600101906020018083116105b657829003601f168201915b5050505050905090565b60006105ea338484610d69565b50600192915050565b600061060f8383604051806020016040528060008152506107c6565b9392505050565b6000610623848484610e8d565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156106ad5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6106ba8533858403610d69565b506001949350505050565b6000828152600660205260409020600101546106e1813361105d565b6106eb83836110c1565b505050565b600061060f838360405180602001604052806000815250610b12565b6001600160a01b038116331461077c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016106a4565b6107868282611147565b5050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916105ea9185906107c1908690611cc3565b610d69565b60006107d28484610ac7565b506107df338585856111ae565b6107fb5760405162461bcd60e51b81526004016106a490611c06565b5060019392505050565b60055460ff16156108285760405162461bcd60e51b81526004016106a490611c81565b610786828261126c565b61083c3382611300565b50565b6005546001600160a01b0361010090910416331461086f5760405162461bcd60e51b81526004016106a490611c4c565b610879600061144e565b565b600061088783336104fc565b9050818110156108e55760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b60648201526084016106a4565b6108f28333848403610d69565b6106eb8383611300565b60055460ff161561091f5760405162461bcd60e51b81526004016106a490611c81565b6108796114a8565b6005546001600160a01b036101009091041633146109575760405162461bcd60e51b81526004016106a490611c4c565b816001600160a01b031663a9059cbb61097e6005546001600160a01b036101009091041690565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b1580156109c657600080fd5b505af11580156109da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106eb9190611a4d565b60009182526006602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606004805461055a90611d54565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610aba5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106a4565b6107fb3385858403610d69565b60006105ea338484610e8d565b6000610ae1858585610616565b50610aee858585856111ae565b6106ba5760405162461bcd60e51b81526004016106a490611c06565b949350505050565b6000610b1e84846105dd565b50610b2a8484846114e0565b6107fb5760405162461bcd60e51b815260206004820152602560248201527f455243313336333a205f636865636b416e6443616c6c417070726f7665207265604482015264766572747360d81b60648201526084016106a4565b600082815260066020526040902060010154610ba0813361105d565b6106eb8383611147565b6000610b0a84848460405180602001604052806000815250610ad4565b6005546001600160a01b03610100909104163314610bf75760405162461bcd60e51b81526004016106a490611c4c565b6001600160a01b038116610c5c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106a4565b61083c8161144e565b6001600160a01b038216610cbb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106a4565b8060026000828254610ccd9190611cc3565b90915550506001600160a01b03821660009081526020819052604081208054839290610cfa908490611cc3565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60006001600160e01b03198216637965db0b60e01b148061054557506105458261159b565b6001600160a01b038316610dcb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106a4565b6001600160a01b038216610e2c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106a4565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610ef15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106a4565b6001600160a01b038216610f535760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106a4565b6001600160a01b03831660009081526020819052604090205481811015610fcb5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106a4565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611002908490611cc3565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161104e91815260200190565b60405180910390a35b50505050565b61106782826109fe565b6107865761107f816001600160a01b031660146115d0565b61108a8360206115d0565b60405160200161109b929190611b11565b60408051601f198184030181529082905262461bcd60e51b82526106a491600401611bf3565b6110cb82826109fe565b6107865760008281526006602090815260408083206001600160a01b03851684529091529020805460ff191660011790556111033390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61115182826109fe565b156107865760008281526006602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60006001600160a01b0384163b6111c757506000610b0a565b604051632229f29760e21b81526000906001600160a01b038616906388a7ca5c906111fc9033908a9089908990600401611b86565b602060405180830381600087803b15801561121657600080fd5b505af115801561122a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124e9190611ac8565b6001600160e01b031916632229f29760e21b14915050949350505050565b6112967ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc9336109fe565b6112f65760405162461bcd60e51b815260206004820152602b60248201527f526f6c65733a2063616c6c657220646f6573206e6f742068617665207468652060448201526a4d494e54455220726f6c6560a81b60648201526084016106a4565b610786828261176c565b6001600160a01b0382166113605760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106a4565b6001600160a01b038216600090815260208190526040902054818110156113d45760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106a4565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611403908490611cfa565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6005546001600160a01b036101009091041633146114d85760405162461bcd60e51b81526004016106a490611c4c565b6108796117f9565b60006001600160a01b0384163b6114f95750600061060f565b6040516307b04a2d60e41b81526000906001600160a01b03861690637b04a2d09061152c90339088908890600401611bc3565b602060405180830381600087803b15801561154657600080fd5b505af115801561155a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157e9190611ac8565b6001600160e01b0319166307b04a2d60e41b149150509392505050565b60006001600160e01b0319821663b0202a1160e01b148061054557506301ffc9a760e01b6001600160e01b0319831614610545565b606060006115df836002611cdb565b6115ea906002611cc3565b67ffffffffffffffff81111561160257611602611dbb565b6040519080825280601f01601f19166020018201604052801561162c576020820181803683370190505b509050600360fc1b8160008151811061164757611647611da5565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061167657611676611da5565b60200101906001600160f81b031916908160001a905350600061169a846002611cdb565b6116a5906001611cc3565b90505b600181111561171d576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106116d9576116d9611da5565b1a60f81b8282815181106116ef576116ef611da5565b60200101906001600160f81b031916908160001a90535060049490941c9361171681611d3d565b90506116a8565b50831561060f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106a4565b7f00000000000000000000000000000000000000000000000000000000000000008161179760025490565b6117a19190611cc3565b11156117ef5760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a206361702065786365656465640000000000000060448201526064016106a4565b6107868282610c65565b6005805460ff191660011790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a1565b80356001600160a01b038116811461184857600080fd5b919050565b600082601f83011261185e57600080fd5b813567ffffffffffffffff8082111561187957611879611dbb565b604051601f8301601f19908116603f011681019082821181831017156118a1576118a1611dbb565b816040528381528660208588010111156118ba57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156118ec57600080fd5b61060f82611831565b6000806040838503121561190857600080fd5b61191183611831565b915061191f60208401611831565b90509250929050565b60008060006060848603121561193d57600080fd5b61194684611831565b925061195460208501611831565b9150604084013590509250925092565b6000806000806080858703121561197a57600080fd5b61198385611831565b935061199160208601611831565b925060408501359150606085013567ffffffffffffffff8111156119b457600080fd5b6119c08782880161184d565b91505092959194509250565b600080604083850312156119df57600080fd5b6119e883611831565b946020939093013593505050565b600080600060608486031215611a0b57600080fd5b611a1484611831565b925060208401359150604084013567ffffffffffffffff811115611a3757600080fd5b611a438682870161184d565b9150509250925092565b600060208284031215611a5f57600080fd5b8151801515811461060f57600080fd5b600060208284031215611a8157600080fd5b5035919050565b60008060408385031215611a9b57600080fd5b8235915061191f60208401611831565b600060208284031215611abd57600080fd5b813561060f81611dd1565b600060208284031215611ada57600080fd5b815161060f81611dd1565b60008151808452611afd816020860160208601611d11565b601f01601f19169290920160200192915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611b49816017850160208801611d11565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611b7a816028840160208801611d11565b01602801949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611bb990830184611ae5565b9695505050505050565b60018060a01b0384168152826020820152606060408201526000611bea6060830184611ae5565b95945050505050565b60208152600061060f6020830184611ae5565b60208082526026908201527f455243313336333a205f636865636b416e6443616c6c5472616e73666572207260408201526565766572747360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526022908201527f45524332304d696e7461626c653a206d696e74696e672069732066696e697368604082015261195960f21b606082015260800190565b60008219821115611cd657611cd6611d8f565b500190565b6000816000190483118215151615611cf557611cf5611d8f565b500290565b600082821015611d0c57611d0c611d8f565b500390565b60005b83811015611d2c578181015183820152602001611d14565b838111156110575750506000910152565b600081611d4c57611d4c611d8f565b506000190190565b600181811c90821680611d6857607f821691505b60208210811415611d8957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461083c57600080fdfea26469706673582212209b2fb09debf7e0aa0e22cd0cd2bb367a298a796070fb6f19d213286fdf504e6e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x211 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x4C8 JUMPI DUP1 PUSH4 0xD8FBE994 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0xC1D34B89 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8980F11F GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x8980F11F EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x44D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x7D64BCB4 EQ PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x4000AEA0 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x3177029F EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1296EE62 GT PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x1296EE62 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x5D2035B EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x25E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0x53A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x229 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x54B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x229 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x2A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0x616 JUMP JUMPDEST PUSH2 0x288 PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1A88 JUMP JUMPDEST PUSH2 0x6C5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x320 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0x6F0 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x288 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x359 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A88 JUMP JUMPDEST PUSH2 0x70C JUMP JUMPDEST PUSH2 0x229 PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0x78A JUMP JUMPDEST PUSH2 0x229 PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x19F6 JUMP JUMPDEST PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x392 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0x805 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST PUSH2 0x288 PUSH2 0x3B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x83F JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x3E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0x87B JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x8FC JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x404 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x440 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A88 JUMP JUMPDEST PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x251 PUSH2 0xA29 JUMP JUMPDEST PUSH2 0x288 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x463 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0xA38 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x476 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x489 CALLDATASIZE PUSH1 0x4 PUSH2 0x1964 JUMP JUMPDEST PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x49C CALLDATASIZE PUSH1 0x4 PUSH2 0x19F6 JUMP JUMPDEST PUSH2 0xB12 JUMP JUMPDEST PUSH2 0x288 PUSH32 0xF0887BA65EE2024EA881D91B74C2450EF19E1557F03BED3EA9F16B037CBE2DC9 DUP2 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x4D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A88 JUMP JUMPDEST PUSH2 0xB84 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x4E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0xBAA JUMP JUMPDEST PUSH2 0x288 PUSH2 0x4FC CALLDATASIZE PUSH1 0x4 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x535 CALLDATASIZE PUSH1 0x4 PUSH2 0x18DA JUMP JUMPDEST PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x545 DUP3 PUSH2 0xD44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x55A SWAP1 PUSH2 0x1D54 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x586 SWAP1 PUSH2 0x1D54 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EA CALLER DUP5 DUP5 PUSH2 0xD69 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x623 DUP5 DUP5 DUP5 PUSH2 0xE8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6BA DUP6 CALLER DUP6 DUP5 SUB PUSH2 0xD69 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x6E1 DUP2 CALLER PUSH2 0x105D JUMP JUMPDEST PUSH2 0x6EB DUP4 DUP4 PUSH2 0x10C1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x77C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH2 0x786 DUP3 DUP3 PUSH2 0x1147 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x5EA SWAP2 DUP6 SWAP1 PUSH2 0x7C1 SWAP1 DUP7 SWAP1 PUSH2 0x1CC3 JUMP JUMPDEST PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D2 DUP5 DUP5 PUSH2 0xAC7 JUMP JUMPDEST POP PUSH2 0x7DF CALLER DUP6 DUP6 DUP6 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x7FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A4 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x828 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A4 SWAP1 PUSH2 0x1C81 JUMP JUMPDEST PUSH2 0x786 DUP3 DUP3 PUSH2 0x126C JUMP JUMPDEST PUSH2 0x83C CALLER DUP3 PUSH2 0x1300 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A4 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x879 PUSH1 0x0 PUSH2 0x144E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x887 DUP4 CALLER PUSH2 0x4FC JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH2 0x8F2 DUP4 CALLER DUP5 DUP5 SUB PUSH2 0xD69 JUMP JUMPDEST PUSH2 0x6EB DUP4 DUP4 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x91F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A4 SWAP1 PUSH2 0x1C81 JUMP JUMPDEST PUSH2 0x879 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x957 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A4 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x97E PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6EB SWAP2 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x55A SWAP1 PUSH2 0x1D54 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xABA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH2 0x7FB CALLER DUP6 DUP6 DUP5 SUB PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EA CALLER DUP5 DUP5 PUSH2 0xE8D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE1 DUP6 DUP6 DUP6 PUSH2 0x616 JUMP JUMPDEST POP PUSH2 0xAEE DUP6 DUP6 DUP6 DUP6 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x6BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A4 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB1E DUP5 DUP5 PUSH2 0x5DD JUMP JUMPDEST POP PUSH2 0xB2A DUP5 DUP5 DUP5 PUSH2 0x14E0 JUMP JUMPDEST PUSH2 0x7FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313336333A205F636865636B416E6443616C6C417070726F7665207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x7665727473 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xBA0 DUP2 CALLER PUSH2 0x105D JUMP JUMPDEST PUSH2 0x6EB DUP4 DUP4 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0A DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xBF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A4 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH2 0x83C DUP2 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCBB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6A4 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCCD SWAP2 SWAP1 PUSH2 0x1CC3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xCFA SWAP1 DUP5 SWAP1 PUSH2 0x1CC3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x545 JUMPI POP PUSH2 0x545 DUP3 PUSH2 0x159B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xFCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1002 SWAP1 DUP5 SWAP1 PUSH2 0x1CC3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x104E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1067 DUP3 DUP3 PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x786 JUMPI PUSH2 0x107F DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x15D0 JUMP JUMPDEST PUSH2 0x108A DUP4 PUSH1 0x20 PUSH2 0x15D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x109B SWAP3 SWAP2 SWAP1 PUSH2 0x1B11 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x6A4 SWAP2 PUSH1 0x4 ADD PUSH2 0x1BF3 JUMP JUMPDEST PUSH2 0x10CB DUP3 DUP3 PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x786 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1103 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1151 DUP3 DUP3 PUSH2 0x9FE JUMP JUMPDEST ISZERO PUSH2 0x786 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE PUSH2 0x11C7 JUMPI POP PUSH1 0x0 PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2229F297 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x88A7CA5C SWAP1 PUSH2 0x11FC SWAP1 CALLER SWAP1 DUP11 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1B86 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x122A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x124E SWAP2 SWAP1 PUSH2 0x1AC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x2229F297 PUSH1 0xE2 SHL EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1296 PUSH32 0xF0887BA65EE2024EA881D91B74C2450EF19E1557F03BED3EA9F16B037CBE2DC9 CALLER PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x12F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A2063616C6C657220646F6573206E6F7420686176652074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x4D494E54455220726F6C65 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH2 0x786 DUP3 DUP3 PUSH2 0x176C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1360 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x13D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1403 SWAP1 DUP5 SWAP1 PUSH2 0x1CFA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x14D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A4 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x879 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE PUSH2 0x14F9 JUMPI POP PUSH1 0x0 PUSH2 0x60F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7B04A2D PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x7B04A2D0 SWAP1 PUSH2 0x152C SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1BC3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x155A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x157E SWAP2 SWAP1 PUSH2 0x1AC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x7B04A2D PUSH1 0xE4 SHL EQ SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xB0202A11 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x545 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x545 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x15DF DUP4 PUSH1 0x2 PUSH2 0x1CDB JUMP JUMPDEST PUSH2 0x15EA SWAP1 PUSH1 0x2 PUSH2 0x1CC3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1602 JUMPI PUSH2 0x1602 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x162C JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1647 JUMPI PUSH2 0x1647 PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1676 JUMPI PUSH2 0x1676 PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x169A DUP5 PUSH1 0x2 PUSH2 0x1CDB JUMP JUMPDEST PUSH2 0x16A5 SWAP1 PUSH1 0x1 PUSH2 0x1CC3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x171D JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x16D9 JUMPI PUSH2 0x16D9 PUSH2 0x1DA5 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x16EF JUMPI PUSH2 0x16EF PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1716 DUP2 PUSH2 0x1D3D JUMP JUMPDEST SWAP1 POP PUSH2 0x16A8 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x60F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH32 0x0 DUP2 PUSH2 0x1797 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x17A1 SWAP2 SWAP1 PUSH2 0x1CC3 JUMP JUMPDEST GT ISZERO PUSH2 0x17EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304361707065643A2063617020657863656564656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH2 0x786 DUP3 DUP3 PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xAE5184FBA832CB2B1F702ACA6117B8D265EAF03AD33EB133F19DDE0F5920FA08 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1848 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x185E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1879 JUMPI PUSH2 0x1879 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x18A1 JUMPI PUSH2 0x18A1 PUSH2 0x1DBB JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x18BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60F DUP3 PUSH2 0x1831 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1911 DUP4 PUSH2 0x1831 JUMP JUMPDEST SWAP2 POP PUSH2 0x191F PUSH1 0x20 DUP5 ADD PUSH2 0x1831 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x193D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1946 DUP5 PUSH2 0x1831 JUMP JUMPDEST SWAP3 POP PUSH2 0x1954 PUSH1 0x20 DUP6 ADD PUSH2 0x1831 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x197A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1983 DUP6 PUSH2 0x1831 JUMP JUMPDEST SWAP4 POP PUSH2 0x1991 PUSH1 0x20 DUP7 ADD PUSH2 0x1831 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19C0 DUP8 DUP3 DUP9 ADD PUSH2 0x184D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19E8 DUP4 PUSH2 0x1831 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A14 DUP5 PUSH2 0x1831 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A43 DUP7 DUP3 DUP8 ADD PUSH2 0x184D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x191F PUSH1 0x20 DUP5 ADD PUSH2 0x1831 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ABD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x60F DUP2 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ADA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x60F DUP2 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1AFD DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1B49 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1D11 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1B7A DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1D11 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1BB9 SWAP1 DUP4 ADD DUP5 PUSH2 0x1AE5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1BEA PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1AE5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x60F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313336333A205F636865636B416E6443616C6C5472616E736665722072 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x657665727473 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332304D696E7461626C653A206D696E74696E672069732066696E697368 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1CD6 JUMPI PUSH2 0x1CD6 PUSH2 0x1D8F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1CF5 JUMPI PUSH2 0x1CF5 PUSH2 0x1D8F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1D0C JUMPI PUSH2 0x1D0C PUSH2 0x1D8F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D2C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D14 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1057 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1D4C JUMPI PUSH2 0x1D4C PUSH2 0x1D8F JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1D68 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1D89 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x83C JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0x2F 0xB0 SWAP14 0xEB 0xF7 0xE0 0xAA 0xE 0x22 0xCD 0xC 0xD2 0xBB CALLDATASIZE PUSH27 0x298A796070FB6F19D213286FDF504E6E64736F6C63430008070033 ",
							"sourceMap": "59699:1754:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;60527:219;;;;;;:::i;:::-;;:::i;:::-;;;6975:14:1;;6968:22;6950:41;;6938:2;6923:18;60527:219:0;;;;;;;;45943:96;46016:16;;;;45943:96;;6297:98;;;:::i;:::-;;;;;;;:::i;8518:202::-;;;;;;:::i;:::-;;:::i;36194:197::-;;;;;;:::i;:::-;;:::i;7385:106::-;7472:12;;7385:106;;;7148:25:1;;;7136:2;7121:18;7385:106:0;7002:177:1;9187:512:0;;;;;;:::i;:::-;;:::i;55830:121::-;;;;;;:::i;:::-;55896:7;55922:12;;;:6;:12;;;;;:22;;;;55830:121;56201:181;;;;;;:::i;:::-;;:::i;:::-;;60350:171;;;15699:4:1;45234:9:0;15687:17:1;15669:36;;15657:2;15642:18;60350:171:0;15527:184:1;38866:191:0;;;;;;:::i;:::-;;:::i;18165:81::-;18235:4;18165:81;;57290:276;;;;;;:::i;:::-;;:::i;10094:286::-;;;;;;:::i;:::-;;:::i;36740:368::-;;;;;;:::i;:::-;;:::i;46341:103::-;;;;;;:::i;:::-;;:::i;16794:89::-;;;;;;:::i;:::-;;:::i;7549:169::-;;;;;;:::i;:::-;-1:-1:-1;;;;;7693:18:0;7663:7;7693:18;;;;;;;;;;;;7549:169;43350:92;;;:::i;17189:395::-;;;;;;:::i;:::-;;:::i;46630:75::-;;;:::i;44446:186::-;;;;;;:::i;:::-;;:::i;42718:85::-;42790:6;;;;;-1:-1:-1;;;;;42790:6:0;42718:85;;-1:-1:-1;;;;;5604:32:1;;;5586:51;;5574:2;5559:18;42718:85:0;5440:203:1;54711:173:0;;;;;;:::i;:::-;;:::i;6508:102::-;;;:::i;53761:49::-;;53806:4;53761:49;;10867:467;;;;;;:::i;:::-;;:::i;7921:208::-;;;;;;:::i;:::-;;:::i;38165:402::-;;;;;;:::i;:::-;;:::i;39419:344::-;;;;;;:::i;:::-;;:::i;59178:57::-;;59216:19;59178:57;;56616:183;;;;;;:::i;:::-;;:::i;37495:223::-;;;;;;:::i;:::-;;:::i;8187:193::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8346:18:0;;;8316:7;8346:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8187:193;43591:223;;;;;;:::i;:::-;;:::i;60527:219::-;60676:4;60703:36;60727:11;60703:23;:36::i;:::-;60696:43;60527:219;-1:-1:-1;;60527:219:0:o;6297:98::-;6351:13;6383:5;6376:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6297:98;:::o;8518:202::-;8633:4;8653:39;4164:10;8676:7;8685:6;8653:8;:39::i;:::-;-1:-1:-1;8709:4:0;8518:202;;;;:::o;36194:197::-;36319:4;36346:38;36362:9;36373:6;36346:38;;;;;;;;;;;;:15;:38::i;:::-;36339:45;36194:197;-1:-1:-1;;;36194:197:0:o;9187:512::-;9323:4;9339:36;9349:6;9357:9;9368:6;9339:9;:36::i;:::-;-1:-1:-1;;;;;9413:19:0;;9386:24;9413:19;;;:11;:19;;;;;;;;4164:10;9413:33;;;;;;;;9477:26;;;;9456:113;;;;-1:-1:-1;;;9456:113:0;;11220:2:1;9456:113:0;;;11202:21:1;11259:2;11239:18;;;11232:30;11298:34;11278:18;;;11271:62;-1:-1:-1;;;11349:18:1;;;11342:38;11397:19;;9456:113:0;;;;;;;;;9603:57;9612:6;4164:10;9653:6;9634:16;:25;9603:8;:57::i;:::-;-1:-1:-1;9688:4:0;;9187:512;-1:-1:-1;;;;9187:512:0:o;56201:181::-;55896:7;55922:12;;;:6;:12;;;;;:22;;;54239:30;54250:4;4164:10;54239;:30::i;:::-;56350:25:::1;56361:4;56367:7;56350:10;:25::i;:::-;56201:181:::0;;;:::o;38866:191::-;38988:4;39015:35;39030:7;39039:6;39015:35;;;;;;;;;;;;:14;:35::i;57290:276::-;-1:-1:-1;;;;;57426:23:0;;4164:10;57426:23;57405:117;;;;-1:-1:-1;;;57405:117:0;;14771:2:1;57405:117:0;;;14753:21:1;14810:2;14790:18;;;14783:30;14849:34;14829:18;;;14822:62;-1:-1:-1;;;14900:18:1;;;14893:45;14955:19;;57405:117:0;14569:411:1;57405:117:0;57533:26;57545:4;57551:7;57533:11;:26::i;:::-;57290:276;;:::o;10094:286::-;4164:10;10206:4;10295:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;10295:34:0;;;;;;;;;;10206:4;;10226:126;;10274:7;;10295:47;;10332:10;;10295:47;:::i;:::-;10226:8;:126::i;36740:368::-;36882:4;36898:27;36907:9;36918:6;36898:8;:27::i;:::-;-1:-1:-1;36956:60:0;4164:10;36992:9;37003:6;37011:4;36956:21;:60::i;:::-;36935:145;;;;-1:-1:-1;;;36935:145:0;;;;;;;:::i;:::-;-1:-1:-1;37097:4:0;36740:368;;;;;:::o;46341:103::-;45802:16;;;;45801:17;45793:64;;;;-1:-1:-1;;;45793:64:0;;;;;;;:::i;:::-;46415:22:::1;46421:7;46430:6;46415:5;:22::i;16794:89::-:0;16849:27;4164:10;16869:6;16849:5;:27::i;:::-;16794:89;:::o;43350:92::-;42790:6;;-1:-1:-1;;;;;42790:6:0;;;;;4164:10;42930:23;42922:68;;;;-1:-1:-1;;;42922:68:0;;;;;;;:::i;:::-;43414:21:::1;43432:1;43414:9;:21::i;:::-;43350:92::o:0;17189:395::-;17265:24;17292:32;17302:7;4164:10;8187:193;:::i;17292:32::-;17265:59;;17375:6;17355:16;:26;;17334:109;;;;-1:-1:-1;;;17334:109:0;;11990:2:1;17334:109:0;;;11972:21:1;12029:2;12009:18;;;12002:30;12068:34;12048:18;;;12041:62;-1:-1:-1;;;12119:18:1;;;12112:34;12163:19;;17334:109:0;11788:400:1;17334:109:0;17477:58;17486:7;4164:10;17528:6;17509:16;:25;17477:8;:58::i;:::-;17555:22;17561:7;17570:6;17555:5;:22::i;46630:75::-;45802:16;;;;45801:17;45793:64;;;;-1:-1:-1;;;45793:64:0;;;;;;;:::i;:::-;46682:16:::1;:14;:16::i;44446:186::-:0;42790:6;;-1:-1:-1;;;;;42790:6:0;;;;;4164:10;42930:23;42922:68;;;;-1:-1:-1;;;42922:68:0;;;;;;;:::i;:::-;44581:12:::1;-1:-1:-1::0;;;;;44574:29:0::1;;44604:7;42790:6:::0;;-1:-1:-1;;;;;42790:6:0;;;;;;42718:85;44604:7:::1;44574:51;::::0;-1:-1:-1;;;;;;44574:51:0::1;::::0;;;;;;-1:-1:-1;;;;;6333:32:1;;;44574:51:0::1;::::0;::::1;6315::1::0;6382:18;;;6375:34;;;6288:18;;44574:51:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;54711:173::-:0;54821:4;54848:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;54848:29:0;;;;;;;;;;;;;;;54711:173::o;6508:102::-;6564:13;6596:7;6589:14;;;;;:::i;10867:467::-;4164:10;10984:4;11031:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;11031:34:0;;;;;;;;;;11096:35;;;;11075:119;;;;-1:-1:-1;;;11075:119:0;;14365:2:1;11075:119:0;;;14347:21:1;14404:2;14384:18;;;14377:30;14443:34;14423:18;;;14416:62;-1:-1:-1;;;14494:18:1;;;14487:35;14539:19;;11075:119:0;14163:401:1;11075:119:0;11228:67;4164:10;11251:7;11279:15;11260:16;:34;11228:8;:67::i;7921:208::-;8039:4;8059:42;4164:10;8083:9;8094:6;8059:9;:42::i;38165:402::-;38335:4;38351:39;38364:6;38372:9;38383:6;38351:12;:39::i;:::-;;38421:54;38443:6;38451:9;38462:6;38470:4;38421:21;:54::i;:::-;38400:139;;;;-1:-1:-1;;;38400:139:0;;;;;;;:::i;38165:402::-;;;;;;;:::o;39419:344::-;39558:4;39574:24;39582:7;39591:6;39574:7;:24::i;:::-;;39629:43;39650:7;39659:6;39667:4;39629:20;:43::i;:::-;39608:127;;;;-1:-1:-1;;;39608:127:0;;9588:2:1;39608:127:0;;;9570:21:1;9627:2;9607:18;;;9600:30;9666:34;9646:18;;;9639:62;-1:-1:-1;;;9717:18:1;;;9710:35;9762:19;;39608:127:0;9386:401:1;56616:183:0;55896:7;55922:12;;;:6;:12;;;;;:22;;;54239:30;54250:4;4164:10;54239;:30::i;:::-;56766:26:::1;56778:4;56784:7;56766:11;:26::i;37495:223::-:0;37638:4;37661:50;37681:6;37689:9;37700:6;37661:50;;;;;;;;;;;;:19;:50::i;43591:223::-;42790:6;;-1:-1:-1;;;;;42790:6:0;;;;;4164:10;42930:23;42922:68;;;;-1:-1:-1;;;42922:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;43692:22:0;::::1;43671:107;;;::::0;-1:-1:-1;;;43671:107:0;;8778:2:1;43671:107:0::1;::::0;::::1;8760:21:1::0;8817:2;8797:18;;;8790:30;8856:34;8836:18;;;8829:62;-1:-1:-1;;;8907:18:1;;;8900:36;8953:19;;43671:107:0::1;8576:402:1::0;43671:107:0::1;43788:19;43798:8;43788:9;:19::i;12831:389::-:0;-1:-1:-1;;;;;12914:21:0;;12906:65;;;;-1:-1:-1;;;12906:65:0;;15187:2:1;12906:65:0;;;15169:21:1;15226:2;15206:18;;;15199:30;15265:33;15245:18;;;15238:61;15316:18;;12906:65:0;14985:355:1;12906:65:0;13058:6;13042:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;13074:18:0;;:9;:18;;;;;;;;;;:28;;13096:6;;13074:9;:28;;13096:6;;13074:28;:::i;:::-;;;;-1:-1:-1;;13117:37:0;;7148:25:1;;;-1:-1:-1;;;;;13117:37:0;;;13134:1;;13117:37;;7136:2:1;7121:18;13117:37:0;;;;;;;57290:276;;:::o;54354:270::-;54479:4;-1:-1:-1;;;;;;54518:47:0;;-1:-1:-1;;;54518:47:0;;:99;;;54581:36;54605:11;54581:23;:36::i;14539:370::-;-1:-1:-1;;;;;14670:19:0;;14662:68;;;;-1:-1:-1;;;14662:68:0;;13557:2:1;14662:68:0;;;13539:21:1;13596:2;13576:18;;;13569:30;13635:34;13615:18;;;13608:62;-1:-1:-1;;;13686:18:1;;;13679:34;13730:19;;14662:68:0;13355:400:1;14662:68:0;-1:-1:-1;;;;;14748:21:0;;14740:68;;;;-1:-1:-1;;;14740:68:0;;9185:2:1;14740:68:0;;;9167:21:1;9224:2;9204:18;;;9197:30;9263:34;9243:18;;;9236:62;-1:-1:-1;;;9314:18:1;;;9307:32;9356:19;;14740:68:0;8983:398:1;14740:68:0;-1:-1:-1;;;;;14819:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;14870:32;;7148:25:1;;;14870:32:0;;7121:18:1;14870:32:0;;;;;;;14539:370;;;:::o;11808:747::-;-1:-1:-1;;;;;11943:20:0;;11935:70;;;;-1:-1:-1;;;11935:70:0;;12797:2:1;11935:70:0;;;12779:21:1;12836:2;12816:18;;;12809:30;12875:34;12855:18;;;12848:62;-1:-1:-1;;;12926:18:1;;;12919:35;12971:19;;11935:70:0;12595:401:1;11935:70:0;-1:-1:-1;;;;;12023:23:0;;12015:71;;;;-1:-1:-1;;;12015:71:0;;7971:2:1;12015:71:0;;;7953:21:1;8010:2;7990:18;;;7983:30;8049:34;8029:18;;;8022:62;-1:-1:-1;;;8100:18:1;;;8093:33;8143:19;;12015:71:0;7769:399:1;12015:71:0;-1:-1:-1;;;;;12179:17:0;;12155:21;12179:17;;;;;;;;;;;12227:23;;;;12206:108;;;;-1:-1:-1;;;12206:108:0;;9994:2:1;12206:108:0;;;9976:21:1;10033:2;10013:18;;;10006:30;10072:34;10052:18;;;10045:62;-1:-1:-1;;;10123:18:1;;;10116:36;10169:19;;12206:108:0;9792:402:1;12206:108:0;-1:-1:-1;;;;;12348:17:0;;;:9;:17;;;;;;;;;;;12368:22;;;12348:42;;12410:20;;;;;;;;:30;;12384:6;;12348:9;12410:30;;12384:6;;12410:30;:::i;:::-;;;;;;;;12473:9;-1:-1:-1;;;;;12456:35:0;12465:6;-1:-1:-1;;;;;12456:35:0;;12484:6;12456:35;;;;7148:25:1;;7136:2;7121:18;;7002:177;12456:35:0;;;;;;;;12502:46;11925:630;11808:747;;;:::o;55165:484::-;55245:22;55253:4;55259:7;55245;:22::i;:::-;55240:403;;55428:41;55456:7;-1:-1:-1;;;;;55428:41:0;55466:2;55428:19;:41::i;:::-;55540:38;55568:4;55575:2;55540:19;:38::i;:::-;55335:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;55335:265:0;;;;;;;;;;-1:-1:-1;;;55283:349:0;;;;;;;:::i;58619:224::-;58693:22;58701:4;58707:7;58693;:22::i;:::-;58688:149;;58731:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;58731:29:0;;;;;;;;;:36;;-1:-1:-1;;58731:36:0;58763:4;58731:36;;;58813:12;4164:10;;4085:96;58813:12;-1:-1:-1;;;;;58786:40:0;58804:7;-1:-1:-1;;;;;58786:40:0;58798:4;58786:40;;;;;;;;;;58619:224;;:::o;58849:225::-;58923:22;58931:4;58937:7;58923;:22::i;:::-;58919:149;;;58993:5;58961:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;58961:29:0;;;;;;;;;;:37;;-1:-1:-1;;58961:37:0;;;59017:40;4164:10;;58961:12;;59017:40;;58993:5;59017:40;58849:225;;:::o;40318:515::-;40483:4;-1:-1:-1;;;;;40504:20:0;;19594;40499:66;;-1:-1:-1;40549:5:0;40542:12;;40499:66;40590:140;;-1:-1:-1;;;40590:140:0;;40574:13;;-1:-1:-1;;;;;40590:46:0;;;;;:140;;4164:10;;40676:6;;40696;;40716:4;;40590:140;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;40748:77:0;-1:-1:-1;;;40748:77:0;;-1:-1:-1;;40318:515:0;;;;;;:::o;61028:170::-;59423:34;59216:19;4164:10;54711:173;:::i;59423:34::-;59402:124;;;;-1:-1:-1;;;59402:124:0;;10401:2:1;59402:124:0;;;10383:21:1;10440:2;10420:18;;;10413:30;10479:34;10459:18;;;10452:62;-1:-1:-1;;;10530:18:1;;;10523:41;10581:19;;59402:124:0;10199:407:1;59402:124:0;61163:28:::1;61175:7;61184:6;61163:11;:28::i;13540:576::-:0;-1:-1:-1;;;;;13623:21:0;;13615:67;;;;-1:-1:-1;;;13615:67:0;;12395:2:1;13615:67:0;;;12377:21:1;12434:2;12414:18;;;12407:30;12473:34;12453:18;;;12446:62;-1:-1:-1;;;12524:18:1;;;12517:31;12565:19;;13615:67:0;12193:397:1;13615:67:0;-1:-1:-1;;;;;13778:18:0;;13753:22;13778:18;;;;;;;;;;;13814:24;;;;13806:71;;;;-1:-1:-1;;;13806:71:0;;8375:2:1;13806:71:0;;;8357:21:1;8414:2;8394:18;;;8387:30;8453:34;8433:18;;;8426:62;-1:-1:-1;;;8504:18:1;;;8497:32;8546:19;;13806:71:0;8173:398:1;13806:71:0;-1:-1:-1;;;;;13911:18:0;;:9;:18;;;;;;;;;;13932:23;;;13911:44;;13975:12;:22;;13949:6;;13911:9;13975:22;;13949:6;;13975:22;:::i;:::-;;;;-1:-1:-1;;14013:37:0;;7148:25:1;;;14039:1:0;;-1:-1:-1;;;;;14013:37:0;;;;;7136:2:1;7121:18;14013:37:0;;;;;;;56201:181;;;:::o;43820:169::-;43894:6;;;-1:-1:-1;;;;;43910:17:0;;;43894:6;43910:17;;;-1:-1:-1;;;;;;43910:17:0;;;;;;43942:40;;43894:6;;;;;;;;43942:40;;43875:16;;43942:40;43865:124;43820:169;:::o;61358:93::-;42790:6;;-1:-1:-1;;;;;42790:6:0;;;;;4164:10;42930:23;42922:68;;;;-1:-1:-1;;;42922:68:0;;;;;;;:::i;:::-;61422:22:::1;:20;:22::i;41283:448::-:0;41421:4;-1:-1:-1;;;;;41442:18:0;;19594:20;41437:64;;-1:-1:-1;41485:5:0;41478:12;;41437:64;41526:117;;-1:-1:-1;;;41526:117:0;;41510:13;;-1:-1:-1;;;;;41526:43:0;;;;;:117;;4164:10;;41609:6;;41629:4;;41526:117;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;41661:62:0;-1:-1:-1;;;41661:62:0;;-1:-1:-1;;41283:448:0;;;;;:::o;35622:281::-;35764:4;-1:-1:-1;;;;;;35803:41:0;;-1:-1:-1;;;35803:41:0;;:93;;-1:-1:-1;;;;;;;;;;28589:40:0;;;35860:36;28437:199;51448:469;51547:13;51576:19;51608:10;51612:6;51608:1;:10;:::i;:::-;:14;;51621:1;51608:14;:::i;:::-;51598:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;51598:25:0;;51576:47;;-1:-1:-1;;;51633:6:0;51640:1;51633:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;51633:15:0;;;;;;;;;-1:-1:-1;;;51658:6:0;51665:1;51658:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;51658:15:0;;;;;;;;-1:-1:-1;51688:9:0;51700:10;51704:6;51700:1;:10;:::i;:::-;:14;;51713:1;51700:14;:::i;:::-;51688:26;;51683:132;51720:1;51716;:5;51683:132;;;-1:-1:-1;;;51767:5:0;51775:3;51767:11;51754:25;;;;;;;:::i;:::-;;;;51742:6;51749:1;51742:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;51742:37:0;;;;;;;;-1:-1:-1;51803:1:0;51793:11;;;;;51723:3;;;:::i;:::-;;;51683:132;;;-1:-1:-1;51832:10:0;;51824:55;;;;-1:-1:-1;;;51824:55:0;;7610:2:1;51824:55:0;;;7592:21:1;;;7629:18;;;7622:30;7688:34;7668:18;;;7661:62;7740:18;;51824:55:0;7408:356:1;18299:238:0;18235:4;18426:6;18404:19;7472:12;;;7385:106;18404:19;:28;;;;:::i;:::-;:37;;18383:109;;;;-1:-1:-1;;;18383:109:0;;13203:2:1;18383:109:0;;;13185:21:1;13242:2;13222:18;;;13215:30;13281:27;13261:18;;;13254:55;13326:18;;18383:109:0;13001:349:1;18383:109:0;18502:28;18514:7;18523:6;18502:11;:28::i;46776:113::-;46829:16;:23;;-1:-1:-1;;46829:23:0;46848:4;46829:23;;;46868:14;;;;46829:16;;46868:14;46776:113::o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:718::-;234:5;287:3;280:4;272:6;268:17;264:27;254:55;;305:1;302;295:12;254:55;341:6;328:20;367:18;404:2;400;397:10;394:36;;;410:18;;:::i;:::-;485:2;479:9;453:2;539:13;;-1:-1:-1;;535:22:1;;;559:2;531:31;527:40;515:53;;;583:18;;;603:22;;;580:46;577:72;;;629:18;;:::i;:::-;669:10;665:2;658:22;704:2;696:6;689:18;750:3;743:4;738:2;730:6;726:15;722:26;719:35;716:55;;;767:1;764;757:12;716:55;831:2;824:4;816:6;812:17;805:4;797:6;793:17;780:54;878:1;871:4;866:2;858:6;854:15;850:26;843:37;898:6;889:15;;;;;;192:718;;;;:::o;915:186::-;974:6;1027:2;1015:9;1006:7;1002:23;998:32;995:52;;;1043:1;1040;1033:12;995:52;1066:29;1085:9;1066:29;:::i;1106:260::-;1174:6;1182;1235:2;1223:9;1214:7;1210:23;1206:32;1203:52;;;1251:1;1248;1241:12;1203:52;1274:29;1293:9;1274:29;:::i;:::-;1264:39;;1322:38;1356:2;1345:9;1341:18;1322:38;:::i;:::-;1312:48;;1106:260;;;;;:::o;1371:328::-;1448:6;1456;1464;1517:2;1505:9;1496:7;1492:23;1488:32;1485:52;;;1533:1;1530;1523:12;1485:52;1556:29;1575:9;1556:29;:::i;:::-;1546:39;;1604:38;1638:2;1627:9;1623:18;1604:38;:::i;:::-;1594:48;;1689:2;1678:9;1674:18;1661:32;1651:42;;1371:328;;;;;:::o;1704:537::-;1799:6;1807;1815;1823;1876:3;1864:9;1855:7;1851:23;1847:33;1844:53;;;1893:1;1890;1883:12;1844:53;1916:29;1935:9;1916:29;:::i;:::-;1906:39;;1964:38;1998:2;1987:9;1983:18;1964:38;:::i;:::-;1954:48;;2049:2;2038:9;2034:18;2021:32;2011:42;;2104:2;2093:9;2089:18;2076:32;2131:18;2123:6;2120:30;2117:50;;;2163:1;2160;2153:12;2117:50;2186:49;2227:7;2218:6;2207:9;2203:22;2186:49;:::i;:::-;2176:59;;;1704:537;;;;;;;:::o;2246:254::-;2314:6;2322;2375:2;2363:9;2354:7;2350:23;2346:32;2343:52;;;2391:1;2388;2381:12;2343:52;2414:29;2433:9;2414:29;:::i;:::-;2404:39;2490:2;2475:18;;;;2462:32;;-1:-1:-1;;;2246:254:1:o;2505:462::-;2591:6;2599;2607;2660:2;2648:9;2639:7;2635:23;2631:32;2628:52;;;2676:1;2673;2666:12;2628:52;2699:29;2718:9;2699:29;:::i;:::-;2689:39;;2775:2;2764:9;2760:18;2747:32;2737:42;;2830:2;2819:9;2815:18;2802:32;2857:18;2849:6;2846:30;2843:50;;;2889:1;2886;2879:12;2843:50;2912:49;2953:7;2944:6;2933:9;2929:22;2912:49;:::i;:::-;2902:59;;;2505:462;;;;;:::o;2972:277::-;3039:6;3092:2;3080:9;3071:7;3067:23;3063:32;3060:52;;;3108:1;3105;3098:12;3060:52;3140:9;3134:16;3193:5;3186:13;3179:21;3172:5;3169:32;3159:60;;3215:1;3212;3205:12;3254:180;3313:6;3366:2;3354:9;3345:7;3341:23;3337:32;3334:52;;;3382:1;3379;3372:12;3334:52;-1:-1:-1;3405:23:1;;3254:180;-1:-1:-1;3254:180:1:o;3439:254::-;3507:6;3515;3568:2;3556:9;3547:7;3543:23;3539:32;3536:52;;;3584:1;3581;3574:12;3536:52;3620:9;3607:23;3597:33;;3649:38;3683:2;3672:9;3668:18;3649:38;:::i;3698:245::-;3756:6;3809:2;3797:9;3788:7;3784:23;3780:32;3777:52;;;3825:1;3822;3815:12;3777:52;3864:9;3851:23;3883:30;3907:5;3883:30;:::i;3948:249::-;4017:6;4070:2;4058:9;4049:7;4045:23;4041:32;4038:52;;;4086:1;4083;4076:12;4038:52;4118:9;4112:16;4137:30;4161:5;4137:30;:::i;4387:257::-;4428:3;4466:5;4460:12;4493:6;4488:3;4481:19;4509:63;4565:6;4558:4;4553:3;4549:14;4542:4;4535:5;4531:16;4509:63;:::i;:::-;4626:2;4605:15;-1:-1:-1;;4601:29:1;4592:39;;;;4633:4;4588:50;;4387:257;-1:-1:-1;;4387:257:1:o;4649:786::-;5060:25;5055:3;5048:38;5030:3;5115:6;5109:13;5131:62;5186:6;5181:2;5176:3;5172:12;5165:4;5157:6;5153:17;5131:62;:::i;:::-;-1:-1:-1;;;5252:2:1;5212:16;;;5244:11;;;5237:40;5302:13;;5324:63;5302:13;5373:2;5365:11;;5358:4;5346:17;;5324:63;:::i;:::-;5407:17;5426:2;5403:26;;4649:786;-1:-1:-1;;;;4649:786:1:o;5648:488::-;-1:-1:-1;;;;;5917:15:1;;;5899:34;;5969:15;;5964:2;5949:18;;5942:43;6016:2;6001:18;;5994:34;;;6064:3;6059:2;6044:18;;6037:31;;;5842:4;;6085:45;;6110:19;;6102:6;6085:45;:::i;:::-;6077:53;5648:488;-1:-1:-1;;;;;;5648:488:1:o;6420:385::-;6652:1;6648;6643:3;6639:11;6635:19;6627:6;6623:32;6612:9;6605:51;6692:6;6687:2;6676:9;6672:18;6665:34;6735:2;6730;6719:9;6715:18;6708:30;6586:4;6755:44;6795:2;6784:9;6780:18;6772:6;6755:44;:::i;:::-;6747:52;6420:385;-1:-1:-1;;;;;6420:385:1:o;7184:219::-;7333:2;7322:9;7315:21;7296:4;7353:44;7393:2;7382:9;7378:18;7370:6;7353:44;:::i;10611:402::-;10813:2;10795:21;;;10852:2;10832:18;;;10825:30;10891:34;10886:2;10871:18;;10864:62;-1:-1:-1;;;10957:2:1;10942:18;;10935:36;11003:3;10988:19;;10611:402::o;11427:356::-;11629:2;11611:21;;;11648:18;;;11641:30;11707:34;11702:2;11687:18;;11680:62;11774:2;11759:18;;11427:356::o;13760:398::-;13962:2;13944:21;;;14001:2;13981:18;;;13974:30;14040:34;14035:2;14020:18;;14013:62;-1:-1:-1;;;14106:2:1;14091:18;;14084:32;14148:3;14133:19;;13760:398::o;15716:128::-;15756:3;15787:1;15783:6;15780:1;15777:13;15774:39;;;15793:18;;:::i;:::-;-1:-1:-1;15829:9:1;;15716:128::o;15849:168::-;15889:7;15955:1;15951;15947:6;15943:14;15940:1;15937:21;15932:1;15925:9;15918:17;15914:45;15911:71;;;15962:18;;:::i;:::-;-1:-1:-1;16002:9:1;;15849:168::o;16022:125::-;16062:4;16090:1;16087;16084:8;16081:34;;;16095:18;;:::i;:::-;-1:-1:-1;16132:9:1;;16022:125::o;16152:258::-;16224:1;16234:113;16248:6;16245:1;16242:13;16234:113;;;16324:11;;;16318:18;16305:11;;;16298:39;16270:2;16263:10;16234:113;;;16365:6;16362:1;16359:13;16356:48;;;-1:-1:-1;;16400:1:1;16382:16;;16375:27;16152:258::o;16415:136::-;16454:3;16482:5;16472:39;;16491:18;;:::i;:::-;-1:-1:-1;;;16527:18:1;;16415:136::o;16556:380::-;16635:1;16631:12;;;;16678;;;16699:61;;16753:4;16745:6;16741:17;16731:27;;16699:61;16806:2;16798:6;16795:14;16775:18;16772:38;16769:161;;;16852:10;16847:3;16843:20;16840:1;16833:31;16887:4;16884:1;16877:15;16915:4;16912:1;16905:15;16769:161;;16556:380;;;:::o;16941:127::-;17002:10;16997:3;16993:20;16990:1;16983:31;17033:4;17030:1;17023:15;17057:4;17054:1;17047:15;17073:127;17134:10;17129:3;17125:20;17122:1;17115:31;17165:4;17162:1;17155:15;17189:4;17186:1;17179:15;17205:127;17266:10;17261:3;17257:20;17254:1;17247:31;17297:4;17294:1;17287:15;17321:4;17318:1;17311:15;17337:131;-1:-1:-1;;;;;;17411:32:1;;17401:43;;17391:71;;17458:1;17455;17448:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1541800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "328",
								"MINTER_ROLE()": "239",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24698",
								"approveAndCall(address,uint256)": "infinite",
								"approveAndCall(address,uint256,bytes)": "infinite",
								"balanceOf(address)": "2586",
								"burn(uint256)": "50982",
								"burnFrom(address,uint256)": "77584",
								"cap()": "infinite",
								"decimals()": "infinite",
								"decreaseAllowance(address,uint256)": "26922",
								"finishMinting()": "infinite",
								"getRoleAdmin(bytes32)": "2556",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "2743",
								"increaseAllowance(address,uint256)": "26990",
								"mint(address,uint256)": "infinite",
								"mintingFinished()": "2362",
								"name()": "infinite",
								"owner()": "2397",
								"recoverERC20(address,uint256)": "infinite",
								"renounceOwnership()": "28218",
								"renounceRole(bytes32,address)": "29046",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2349",
								"transfer(address,uint256)": "51222",
								"transferAndCall(address,uint256)": "infinite",
								"transferAndCall(address,uint256,bytes)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferFromAndCall(address,address,uint256)": "infinite",
								"transferFromAndCall(address,address,uint256,bytes)": "infinite",
								"transferOwnership(address)": "28477"
							},
							"internal": {
								"_finishMinting()": "infinite",
								"_mint(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 45556,
									"end": 45593,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 45556,
									"end": 45593,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 45556,
									"end": 45593,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 45556,
									"end": 45593,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 45556,
									"end": 45593,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 45556,
									"end": 45593,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60071,
									"end": 60075,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60048,
									"end": 60057,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 60018,
									"end": 60023,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 60025,
									"end": 60032,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 6193,
									"end": 6198,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6185,
									"end": 6190,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6185,
									"end": 6198,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6208,
									"end": 6215,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6208,
									"end": 6215,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6208,
									"end": 6225,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 45118,
									"end": 45139,
									"name": "PUSH",
									"source": 0,
									"value": "F8"
								},
								{
									"begin": 45118,
									"end": 45139,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 45118,
									"end": 45139,
									"name": "PUSH",
									"source": 0,
									"value": "FF00000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 45118,
									"end": 45139,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 45118,
									"end": 45139,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 45118,
									"end": 45139,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18024,
									"end": 18032,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18016,
									"end": 18058,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 18016,
									"end": 18058,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18016,
									"end": 18058,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18016,
									"end": 18058,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 18016,
									"end": 18058,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18016,
									"end": 18058,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1947,
									"end": 1949,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 18016,
									"end": 18058,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18016,
									"end": 18058,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18016,
									"end": 18058,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1929,
									"end": 1950,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1986,
									"end": 1988,
									"name": "PUSH",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1966,
									"end": 1984,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1966,
									"end": 1984,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1966,
									"end": 1984,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1959,
									"end": 1989,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2025,
									"end": 2048,
									"name": "PUSH",
									"source": 1,
									"value": "45524332304361707065643A2063617020697320300000000000000000000000"
								},
								{
									"begin": 2005,
									"end": 2023,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2005,
									"end": 2023,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2023,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1998,
									"end": 2049,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2066,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2066,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 18016,
									"end": 18058,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 18016,
									"end": 18058,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18016,
									"end": 18058,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18016,
									"end": 18058,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18016,
									"end": 18058,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18016,
									"end": 18058,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18016,
									"end": 18058,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18016,
									"end": 18058,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18016,
									"end": 18058,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18016,
									"end": 18058,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 18016,
									"end": 18058,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18068,
									"end": 18079,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 18068,
									"end": 18079,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 42612,
									"end": 42635,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 4164,
									"end": 4174,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 42612,
									"end": 42621,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 42612,
									"end": 42635,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 42612,
									"end": 42635,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 42612,
									"end": 42635,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59266,
									"end": 59310,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 53806,
									"end": 53810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4164,
									"end": 4174,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 59266,
									"end": 59276,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 59266,
									"end": 59310,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 59266,
									"end": 59310,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 59266,
									"end": 59310,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59320,
									"end": 59357,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 59216,
									"end": 59235,
									"name": "PUSH",
									"source": 0,
									"value": "F0887BA65EE2024EA881D91B74C2450EF19E1557F03BED3EA9F16B037CBE2DC9"
								},
								{
									"begin": 4164,
									"end": 4174,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 59266,
									"end": 59276,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 59266,
									"end": 59310,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 59320,
									"end": 59357,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 59320,
									"end": 59357,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60251,
									"end": 60255,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60232,
									"end": 60247,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60232,
									"end": 60255,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 60232,
									"end": 60255,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 60224,
									"end": 60285,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 60224,
									"end": 60285,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60224,
									"end": 60285,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60224,
									"end": 60285,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 60224,
									"end": 60285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60224,
									"end": 60285,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2297,
									"end": 2299,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 60224,
									"end": 60285,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 60224,
									"end": 60285,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60224,
									"end": 60285,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2279,
									"end": 2300,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2336,
									"end": 2338,
									"name": "PUSH",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 2316,
									"end": 2334,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2316,
									"end": 2334,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2316,
									"end": 2334,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2309,
									"end": 2339,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2375,
									"end": 2402,
									"name": "PUSH",
									"source": 1,
									"value": "45524332304361707065643A2063617020657863656564656400000000000000"
								},
								{
									"begin": 2355,
									"end": 2373,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2355,
									"end": 2373,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2355,
									"end": 2373,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2348,
									"end": 2403,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2420,
									"end": 2438,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2420,
									"end": 2438,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 60224,
									"end": 60285,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2095,
									"end": 2444,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 60224,
									"end": 60285,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 60224,
									"end": 60285,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60295,
									"end": 60337,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 4164,
									"end": 4174,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 60321,
									"end": 60336,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60295,
									"end": 60306,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 60295,
									"end": 60306,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 60295,
									"end": 60306,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 60295,
									"end": 60306,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551796"
								},
								{
									"begin": 60295,
									"end": 60306,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 60295,
									"end": 60337,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 60295,
									"end": 60337,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 60295,
									"end": 60337,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 60295,
									"end": 60337,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 60295,
									"end": 60337,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 59846,
									"end": 60344,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "74"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 43820,
									"end": 43989,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 43820,
									"end": 43989,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43894,
									"end": 43900,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 43894,
									"end": 43900,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43894,
									"end": 43900,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 43910,
									"end": 43927,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 43910,
									"end": 43927,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43910,
									"end": 43927,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43894,
									"end": 43900,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 43910,
									"end": 43927,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43910,
									"end": 43927,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43910,
									"end": 43927,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 43910,
									"end": 43927,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 43910,
									"end": 43927,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43910,
									"end": 43927,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 43910,
									"end": 43927,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43910,
									"end": 43927,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 43910,
									"end": 43927,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 43942,
									"end": 43982,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 43942,
									"end": 43982,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 43894,
									"end": 43900,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 43894,
									"end": 43900,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43894,
									"end": 43900,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 43894,
									"end": 43900,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 43894,
									"end": 43900,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43894,
									"end": 43900,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 43894,
									"end": 43900,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 43894,
									"end": 43900,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43942,
									"end": 43982,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 43942,
									"end": 43982,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43875,
									"end": 43891,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43875,
									"end": 43891,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43942,
									"end": 43982,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 43865,
									"end": 43989,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43820,
									"end": 43989,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43820,
									"end": 43989,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 58131,
									"end": 58241,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 58131,
									"end": 58241,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58209,
									"end": 58234,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58220,
									"end": 58224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 58226,
									"end": 58233,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 58209,
									"end": 58219,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 58209,
									"end": 58234,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 58209,
									"end": 58234,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58209,
									"end": 58234,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58131,
									"end": 58241,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58131,
									"end": 58241,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58131,
									"end": 58241,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 12831,
									"end": 13220,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 12831,
									"end": 13220,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 12914,
									"end": 12935,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12914,
									"end": 12935,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12906,
									"end": 12971,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 12906,
									"end": 12971,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12906,
									"end": 12971,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12906,
									"end": 12971,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12906,
									"end": 12971,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12906,
									"end": 12971,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2651,
									"end": 2653,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 12906,
									"end": 12971,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12906,
									"end": 12971,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12906,
									"end": 12971,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2633,
									"end": 2654,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2690,
									"end": 2692,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2670,
									"end": 2688,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2670,
									"end": 2688,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2670,
									"end": 2688,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2663,
									"end": 2693,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2729,
									"end": 2762,
									"name": "PUSH",
									"source": 1,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 2709,
									"end": 2727,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2709,
									"end": 2727,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2709,
									"end": 2727,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2702,
									"end": 2763,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2780,
									"end": 2798,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2780,
									"end": 2798,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 12906,
									"end": 12971,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2449,
									"end": 2804,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12906,
									"end": 12971,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 12906,
									"end": 12971,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13058,
									"end": 13064,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13042,
									"end": 13054,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 13042,
									"end": 13054,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13042,
									"end": 13064,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13042,
									"end": 13064,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13042,
									"end": 13064,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13042,
									"end": 13064,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 13042,
									"end": 13064,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13042,
									"end": 13064,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13042,
									"end": 13064,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 13042,
									"end": 13064,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 13042,
									"end": 13064,
									"name": "tag",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 13042,
									"end": 13064,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13042,
									"end": 13064,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13042,
									"end": 13064,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13042,
									"end": 13064,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13074,
									"end": 13092,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13074,
									"end": 13092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13074,
									"end": 13083,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13074,
									"end": 13092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13074,
									"end": 13092,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13074,
									"end": 13092,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13074,
									"end": 13092,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13074,
									"end": 13092,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13074,
									"end": 13092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13074,
									"end": 13092,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13074,
									"end": 13092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13074,
									"end": 13092,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13074,
									"end": 13092,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 13074,
									"end": 13102,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13074,
									"end": 13102,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13096,
									"end": 13102,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13096,
									"end": 13102,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 13074,
									"end": 13083,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13074,
									"end": 13102,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 13074,
									"end": 13102,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13096,
									"end": 13102,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 13096,
									"end": 13102,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13074,
									"end": 13102,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 13074,
									"end": 13102,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 13074,
									"end": 13102,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 13074,
									"end": 13102,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13074,
									"end": 13102,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13074,
									"end": 13102,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13074,
									"end": 13102,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 13117,
									"end": 13154,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13117,
									"end": 13154,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2955,
									"end": 2980,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2955,
									"end": 2980,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2955,
									"end": 2980,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13117,
									"end": 13154,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13117,
									"end": 13154,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13117,
									"end": 13154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13134,
									"end": 13135,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13134,
									"end": 13135,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13117,
									"end": 13154,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 13117,
									"end": 13154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2943,
									"end": 2945,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2928,
									"end": 2946,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13117,
									"end": 13154,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13117,
									"end": 13154,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13117,
									"end": 13154,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13117,
									"end": 13154,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13117,
									"end": 13154,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 13117,
									"end": 13154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13117,
									"end": 13154,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 58131,
									"end": 58241,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58131,
									"end": 58241,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58131,
									"end": 58241,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 58619,
									"end": 58843,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 58619,
									"end": 58843,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 54821,
									"end": 54825,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 54848,
									"end": 54860,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54860,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54860,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54854,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 54848,
									"end": 54860,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 54848,
									"end": 54860,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54860,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54860,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54860,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 54848,
									"end": 54860,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54860,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54860,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 54848,
									"end": 54877,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54877,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54877,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54877,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54877,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54877,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54877,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54877,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54877,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54877,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54877,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 54848,
									"end": 54877,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 58688,
									"end": 58837,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58688,
									"end": 58837,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58743,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58731,
									"end": 58743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58737,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 58731,
									"end": 58743,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 58731,
									"end": 58743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58743,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58731,
									"end": 58743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58743,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58743,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 58731,
									"end": 58760,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58760,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58760,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58760,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58760,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58760,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58760,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58760,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58760,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58767,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58767,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 58731,
									"end": 58767,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 58763,
									"end": 58767,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58731,
									"end": 58767,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58767,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58767,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 58813,
									"end": 58825,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 4164,
									"end": 4174,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 4164,
									"end": 4174,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4085,
									"end": 4181,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 58813,
									"end": 58825,
									"name": "tag",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 58813,
									"end": 58825,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 58786,
									"end": 58826,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 58804,
									"end": 58811,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 58786,
									"end": 58826,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 58798,
									"end": 58802,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 58786,
									"end": 58826,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 58786,
									"end": 58826,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58786,
									"end": 58826,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 58786,
									"end": 58826,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58786,
									"end": 58826,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 58786,
									"end": 58826,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58786,
									"end": 58826,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 58786,
									"end": 58826,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 58786,
									"end": 58826,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 58786,
									"end": 58826,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 58619,
									"end": 58843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58619,
									"end": 58843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58619,
									"end": 58843,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "63"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "tag",
									"source": 0,
									"value": "63"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "tag",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "67"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "tag",
									"source": 0,
									"value": "67"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "tag",
									"source": 0,
									"value": "68"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "68"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "tag",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "70"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "71"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "tag",
									"source": 0,
									"value": "70"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "tag",
									"source": 0,
									"value": "71"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "tag",
									"source": 0,
									"value": "72"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "70"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "72"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1740,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 904,
									"end": 1740,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1028,
									"end": 1034,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1036,
									"end": 1042,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1044,
									"end": 1050,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1052,
									"end": 1058,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1060,
									"end": 1066,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1113,
									"end": 1116,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 1101,
									"end": 1110,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1099,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1088,
									"end": 1111,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1084,
									"end": 1117,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1134,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1134,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 1081,
									"end": 1134,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1130,
									"end": 1131,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1127,
									"end": 1128,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1120,
									"end": 1132,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1134,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 1081,
									"end": 1134,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1157,
									"end": 1173,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1157,
									"end": 1173,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1222,
									"end": 1236,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1236,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1236,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1219,
									"end": 1253,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1219,
									"end": 1253,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 1219,
									"end": 1253,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1249,
									"end": 1250,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1246,
									"end": 1247,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1239,
									"end": 1251,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1219,
									"end": 1253,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 1219,
									"end": 1253,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1333,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 1325,
									"end": 1332,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 1316,
									"end": 1322,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1305,
									"end": 1314,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 1301,
									"end": 1323,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1333,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 1272,
									"end": 1333,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1272,
									"end": 1333,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 1272,
									"end": 1333,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1262,
									"end": 1333,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 1262,
									"end": 1333,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1381,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1368,
									"end": 1377,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1364,
									"end": 1382,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1383,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1383,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1383,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1408,
									"end": 1410,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1398,
									"end": 1406,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1395,
									"end": 1411,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1392,
									"end": 1428,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1392,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 1392,
									"end": 1428,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1424,
									"end": 1425,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1421,
									"end": 1422,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1414,
									"end": 1426,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1392,
									"end": 1428,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 1392,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1392,
									"end": 1428,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 1502,
									"end": 1509,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1491,
									"end": 1499,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1480,
									"end": 1489,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 1476,
									"end": 1500,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 1447,
									"end": 1510,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1447,
									"end": 1510,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 1447,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1437,
									"end": 1510,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1437,
									"end": 1510,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1437,
									"end": 1510,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1555,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1542,
									"end": 1551,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1538,
									"end": 1556,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 1557,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1597,
									"end": 1601,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1590,
									"end": 1595,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1586,
									"end": 1602,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1579,
									"end": 1584,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1576,
									"end": 1603,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1566,
									"end": 1621,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 1566,
									"end": 1621,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1617,
									"end": 1618,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1614,
									"end": 1615,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1607,
									"end": 1619,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1566,
									"end": 1621,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 1566,
									"end": 1621,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1685,
									"end": 1687,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1670,
									"end": 1688,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1670,
									"end": 1688,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1664,
									"end": 1689,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1729,
									"end": 1732,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1714,
									"end": 1733,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1714,
									"end": 1733,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": 1714,
									"end": 1733,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1708,
									"end": 1734,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1740,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1740,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1740,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1740,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1640,
									"end": 1645,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1664,
									"end": 1689,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1708,
									"end": 1734,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1740,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 904,
									"end": 1740,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2991,
									"end": 3216,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 2991,
									"end": 3216,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3031,
									"end": 3034,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3062,
									"end": 3063,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3058,
									"end": 3064,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3055,
									"end": 3056,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3065,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3049,
									"end": 3185,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3049,
									"end": 3185,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3049,
									"end": 3185,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3107,
									"end": 3117,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 3102,
									"end": 3105,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 3098,
									"end": 3118,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3096,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3088,
									"end": 3119,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3142,
									"end": 3146,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 3139,
									"end": 3140,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3132,
									"end": 3147,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3170,
									"end": 3174,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3167,
									"end": 3168,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3160,
									"end": 3175,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3049,
									"end": 3185,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3049,
									"end": 3185,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3201,
									"end": 3210,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3201,
									"end": 3210,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2991,
									"end": 3216,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 3221,
									"end": 3601,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 3221,
									"end": 3601,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3300,
									"end": 3301,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3296,
									"end": 3308,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3296,
									"end": 3308,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3296,
									"end": 3308,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3296,
									"end": 3308,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3343,
									"end": 3355,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3343,
									"end": 3355,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3343,
									"end": 3355,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3364,
									"end": 3425,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 3364,
									"end": 3425,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3418,
									"end": 3422,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 3410,
									"end": 3416,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3406,
									"end": 3423,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3396,
									"end": 3423,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3396,
									"end": 3423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3364,
									"end": 3425,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 3364,
									"end": 3425,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3471,
									"end": 3473,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3463,
									"end": 3469,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3460,
									"end": 3474,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3440,
									"end": 3458,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3437,
									"end": 3475,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3434,
									"end": 3595,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3434,
									"end": 3595,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 3434,
									"end": 3595,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3517,
									"end": 3527,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 3512,
									"end": 3515,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 3508,
									"end": 3528,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3505,
									"end": 3506,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3498,
									"end": 3529,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3552,
									"end": 3556,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 3549,
									"end": 3550,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3542,
									"end": 3557,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3580,
									"end": 3584,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3577,
									"end": 3578,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3570,
									"end": 3585,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3434,
									"end": 3595,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 3434,
									"end": 3595,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3434,
									"end": 3595,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3221,
									"end": 3601,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3221,
									"end": 3601,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3221,
									"end": 3601,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3221,
									"end": 3601,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 3606,
									"end": 3733,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3606,
									"end": 3733,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3667,
									"end": 3677,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 3662,
									"end": 3665,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 3658,
									"end": 3678,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3655,
									"end": 3656,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3648,
									"end": 3679,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3698,
									"end": 3702,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 3695,
									"end": 3696,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3688,
									"end": 3703,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3722,
									"end": 3726,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3719,
									"end": 3720,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3712,
									"end": 3727,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3606,
									"end": 3733,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 3606,
									"end": 3733,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH",
									"source": 0,
									"value": "F8"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "728"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1632"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59699,
									"end": 61453,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209b2fb09debf7e0aa0e22cd0cd2bb367a298a796070fb6f19d213286fdf504e6e64736f6c63430008070033",
									".code": [
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "D5391393"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "D5391393"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "D8FBE994"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "C1D34B89"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "CAE9CA51"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "8980F11F"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "8980F11F"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "7D64BCB4"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "4000AEA0"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "3177029F"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "355274EA"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "1296EE62"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "1296EE62"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "5D2035B"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59699,
											"end": 61453,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6975,
											"end": 6989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6975,
											"end": 6989,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6968,
											"end": 6990,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6950,
											"end": 6991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6950,
											"end": 6991,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6938,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6923,
											"end": 6941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 45943,
											"end": 46039,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45943,
											"end": 46039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46016,
											"end": 46032,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 46016,
											"end": 46032,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46016,
											"end": 46032,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 46016,
											"end": 46032,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45943,
											"end": 46039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 45943,
											"end": 46039,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36194,
											"end": 36391,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 36194,
											"end": 36391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36194,
											"end": 36391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 36194,
											"end": 36391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 36194,
											"end": 36391,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36194,
											"end": 36391,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36194,
											"end": 36391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36194,
											"end": 36391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36194,
											"end": 36391,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 36194,
											"end": 36391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36194,
											"end": 36391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 36194,
											"end": 36391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7385,
											"end": 7491,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7385,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7472,
											"end": 7484,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7472,
											"end": 7484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7385,
											"end": 7491,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7385,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7385,
											"end": 7491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7385,
											"end": 7491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7148,
											"end": 7173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7136,
											"end": 7138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7121,
											"end": 7139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7385,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 7002,
											"end": 7179,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55896,
											"end": 55903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55928,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55944,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55922,
											"end": 55944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55944,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 60350,
											"end": 60521,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 60350,
											"end": 60521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60350,
											"end": 60521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60350,
											"end": 60521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15699,
											"end": 15703,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 45234,
											"end": 45243,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1632"
										},
										{
											"begin": 15687,
											"end": 15704,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15669,
											"end": 15705,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15669,
											"end": 15705,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15657,
											"end": 15659,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15642,
											"end": 15660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 60350,
											"end": 60521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 15527,
											"end": 15711,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 38866,
											"end": 39057,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 38866,
											"end": 39057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38866,
											"end": 39057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 38866,
											"end": 39057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 38866,
											"end": 39057,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38866,
											"end": 39057,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38866,
											"end": 39057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 38866,
											"end": 39057,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38866,
											"end": 39057,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 38866,
											"end": 39057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38866,
											"end": 39057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 38866,
											"end": 39057,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18165,
											"end": 18246,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 18165,
											"end": 18246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18235,
											"end": 18239,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "728"
										},
										{
											"begin": 18165,
											"end": 18246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 18165,
											"end": 18246,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36740,
											"end": 37108,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 36740,
											"end": 37108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36740,
											"end": 37108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 36740,
											"end": 37108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 36740,
											"end": 37108,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36740,
											"end": 37108,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36740,
											"end": 37108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 36740,
											"end": 37108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36740,
											"end": 37108,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 36740,
											"end": 37108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36740,
											"end": 37108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 36740,
											"end": 37108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46341,
											"end": 46444,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 46341,
											"end": 46444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46341,
											"end": 46444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 46341,
											"end": 46444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 46341,
											"end": 46444,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 46341,
											"end": 46444,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46341,
											"end": 46444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 46341,
											"end": 46444,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46341,
											"end": 46444,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 46341,
											"end": 46444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46341,
											"end": 46444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 46341,
											"end": 46444,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16794,
											"end": 16883,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 16794,
											"end": 16883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16794,
											"end": 16883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 16794,
											"end": 16883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 16794,
											"end": 16883,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16794,
											"end": 16883,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16794,
											"end": 16883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 16794,
											"end": 16883,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16794,
											"end": 16883,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 16794,
											"end": 16883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16794,
											"end": 16883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 16794,
											"end": 16883,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7549,
											"end": 7718,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7549,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7549,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7549,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 7549,
											"end": 7718,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7549,
											"end": 7718,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7549,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 7549,
											"end": 7718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7549,
											"end": 7718,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 7549,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7663,
											"end": 7670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7549,
											"end": 7718,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43350,
											"end": 43442,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 43350,
											"end": 43442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43350,
											"end": 43442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 43350,
											"end": 43442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 43350,
											"end": 43442,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17189,
											"end": 17584,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 17189,
											"end": 17584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17189,
											"end": 17584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 17189,
											"end": 17584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 17189,
											"end": 17584,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17189,
											"end": 17584,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17189,
											"end": 17584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17189,
											"end": 17584,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17189,
											"end": 17584,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 17189,
											"end": 17584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17189,
											"end": 17584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 17189,
											"end": 17584,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46630,
											"end": 46705,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 46630,
											"end": 46705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46630,
											"end": 46705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 46630,
											"end": 46705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 46630,
											"end": 46705,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42718,
											"end": 42803,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 42718,
											"end": 42803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42718,
											"end": 42803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42718,
											"end": 42803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5604,
											"end": 5636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5604,
											"end": 5636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5604,
											"end": 5636,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5576,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5559,
											"end": 5577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 42718,
											"end": 42803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5440,
											"end": 5643,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6508,
											"end": 6610,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6508,
											"end": 6610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6508,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 6508,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6508,
											"end": 6610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53761,
											"end": 53810,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 53761,
											"end": 53810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53761,
											"end": 53810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 53806,
											"end": 53810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53761,
											"end": 53810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53761,
											"end": 53810,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38165,
											"end": 38567,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 38165,
											"end": 38567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38165,
											"end": 38567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 38165,
											"end": 38567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 38165,
											"end": 38567,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38165,
											"end": 38567,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38165,
											"end": 38567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 38165,
											"end": 38567,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38165,
											"end": 38567,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 38165,
											"end": 38567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38165,
											"end": 38567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 38165,
											"end": 38567,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39419,
											"end": 39763,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 39419,
											"end": 39763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39419,
											"end": 39763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 39419,
											"end": 39763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 39419,
											"end": 39763,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39419,
											"end": 39763,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39419,
											"end": 39763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 39419,
											"end": 39763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39419,
											"end": 39763,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 39419,
											"end": 39763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39419,
											"end": 39763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 39419,
											"end": 39763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59178,
											"end": 59235,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 59178,
											"end": 59235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59178,
											"end": 59235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 59216,
											"end": 59235,
											"name": "PUSH",
											"source": 0,
											"value": "F0887BA65EE2024EA881D91B74C2450EF19E1557F03BED3EA9F16B037CBE2DC9"
										},
										{
											"begin": 59178,
											"end": 59235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59178,
											"end": 59235,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37495,
											"end": 37718,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 37495,
											"end": 37718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37495,
											"end": 37718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 37495,
											"end": 37718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 37495,
											"end": 37718,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37495,
											"end": 37718,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37495,
											"end": 37718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 37495,
											"end": 37718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37495,
											"end": 37718,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 37495,
											"end": 37718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37495,
											"end": 37718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 37495,
											"end": 37718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8187,
											"end": 8380,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8187,
											"end": 8380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8187,
											"end": 8380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8187,
											"end": 8380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 8187,
											"end": 8380,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8187,
											"end": 8380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8187,
											"end": 8380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 8187,
											"end": 8380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8187,
											"end": 8380,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 8187,
											"end": 8380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8316,
											"end": 8323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8357,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8187,
											"end": 8380,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60676,
											"end": 60680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60703,
											"end": 60739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 60727,
											"end": 60738,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60703,
											"end": 60726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 60703,
											"end": 60739,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 60703,
											"end": 60739,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 60703,
											"end": 60739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60696,
											"end": 60739,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 60527,
											"end": 60746,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6351,
											"end": 6364,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6383,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6297,
											"end": 6395,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8633,
											"end": 8637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8653,
											"end": 8692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8676,
											"end": 8683,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8685,
											"end": 8691,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8653,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 8653,
											"end": 8692,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8653,
											"end": 8692,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 8653,
											"end": 8692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8709,
											"end": 8713,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8518,
											"end": 8720,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36194,
											"end": 36391,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 36194,
											"end": 36391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36319,
											"end": 36323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36346,
											"end": 36384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 36362,
											"end": 36371,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36373,
											"end": 36379,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36346,
											"end": 36384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36346,
											"end": 36384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36346,
											"end": 36384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36346,
											"end": 36384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36346,
											"end": 36384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36346,
											"end": 36384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36346,
											"end": 36384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36346,
											"end": 36384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36346,
											"end": 36384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36346,
											"end": 36384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36346,
											"end": 36384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36346,
											"end": 36384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36346,
											"end": 36361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 36346,
											"end": 36384,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36346,
											"end": 36384,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 36346,
											"end": 36384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36339,
											"end": 36384,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36194,
											"end": 36391,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36194,
											"end": 36391,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9323,
											"end": 9327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9339,
											"end": 9375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 9349,
											"end": 9355,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9357,
											"end": 9366,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9368,
											"end": 9374,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9339,
											"end": 9348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 9339,
											"end": 9375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9339,
											"end": 9375,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 9339,
											"end": 9375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9386,
											"end": 9410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9424,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9446,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9446,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 9446,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9477,
											"end": 9503,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9477,
											"end": 9503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9477,
											"end": 9503,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9477,
											"end": 9503,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11220,
											"end": 11222,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11202,
											"end": 11223,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11259,
											"end": 11261,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 11239,
											"end": 11257,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11239,
											"end": 11257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11239,
											"end": 11257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11232,
											"end": 11262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11298,
											"end": 11332,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 11278,
											"end": 11296,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11278,
											"end": 11296,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11278,
											"end": 11296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11271,
											"end": 11333,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11349,
											"end": 11367,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11349,
											"end": 11367,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11349,
											"end": 11367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11397,
											"end": 11416,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11397,
											"end": 11416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 9456,
											"end": 9569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 9612,
											"end": 9618,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9653,
											"end": 9659,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9634,
											"end": 9650,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9634,
											"end": 9659,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 9603,
											"end": 9660,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9603,
											"end": 9660,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 9603,
											"end": 9660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9688,
											"end": 9692,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9688,
											"end": 9692,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9187,
											"end": 9699,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55896,
											"end": 55903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55928,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55944,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55922,
											"end": 55944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55944,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54239,
											"end": 54269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 54250,
											"end": 54254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 54239,
											"end": 54249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 54239,
											"end": 54269,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54239,
											"end": 54269,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 54239,
											"end": 54269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56350,
											"end": 56375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 56361,
											"end": 56365,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56367,
											"end": 56374,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56350,
											"end": 56360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 56350,
											"end": 56375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56350,
											"end": 56375,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 56350,
											"end": 56375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38866,
											"end": 39057,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 38866,
											"end": 39057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38988,
											"end": 38992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39015,
											"end": 39050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 39030,
											"end": 39037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39039,
											"end": 39045,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39015,
											"end": 39050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39015,
											"end": 39050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39015,
											"end": 39050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39015,
											"end": 39050,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39015,
											"end": 39050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39015,
											"end": 39050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39015,
											"end": 39050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39015,
											"end": 39050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39015,
											"end": 39050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39015,
											"end": 39050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39015,
											"end": 39050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39015,
											"end": 39050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39015,
											"end": 39029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 39015,
											"end": 39050,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57426,
											"end": 57449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57426,
											"end": 57449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57426,
											"end": 57449,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14771,
											"end": 14773,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14753,
											"end": 14774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14810,
											"end": 14812,
											"name": "PUSH",
											"source": 1,
											"value": "2F"
										},
										{
											"begin": 14790,
											"end": 14808,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14790,
											"end": 14808,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14790,
											"end": 14808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14783,
											"end": 14813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14849,
											"end": 14883,
											"name": "PUSH",
											"source": 1,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 14829,
											"end": 14847,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14829,
											"end": 14847,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14829,
											"end": 14847,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14822,
											"end": 14884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103937B632B9903337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14900,
											"end": 14918,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14900,
											"end": 14918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14900,
											"end": 14918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14955,
											"end": 14974,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14955,
											"end": 14974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 14569,
											"end": 14980,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57533,
											"end": 57559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 57545,
											"end": 57549,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57551,
											"end": 57558,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57533,
											"end": 57544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 57533,
											"end": 57559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57533,
											"end": 57559,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 57533,
											"end": 57559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 10094,
											"end": 10380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10206,
											"end": 10210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10306,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10295,
											"end": 10329,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10206,
											"end": 10210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10206,
											"end": 10210,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10226,
											"end": 10352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 10226,
											"end": 10352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10274,
											"end": 10281,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10274,
											"end": 10281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 10295,
											"end": 10342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10342,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 10295,
											"end": 10342,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10295,
											"end": 10342,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 10295,
											"end": 10342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10226,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 10226,
											"end": 10352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36740,
											"end": 37108,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 36740,
											"end": 37108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36882,
											"end": 36886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36898,
											"end": 36925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 36907,
											"end": 36916,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36918,
											"end": 36924,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36898,
											"end": 36906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 36898,
											"end": 36925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36898,
											"end": 36925,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 36898,
											"end": 36925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36956,
											"end": 37016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 36992,
											"end": 37001,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37003,
											"end": 37009,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37011,
											"end": 37015,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36956,
											"end": 36977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 36956,
											"end": 37016,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36956,
											"end": 37016,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 36956,
											"end": 37016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36935,
											"end": 37080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 36935,
											"end": 37080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36935,
											"end": 37080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36935,
											"end": 37080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36935,
											"end": 37080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36935,
											"end": 37080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36935,
											"end": 37080,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36935,
											"end": 37080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36935,
											"end": 37080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 36935,
											"end": 37080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36935,
											"end": 37080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 36935,
											"end": 37080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36935,
											"end": 37080,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 36935,
											"end": 37080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37097,
											"end": 37101,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36740,
											"end": 37108,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36740,
											"end": 37108,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36740,
											"end": 37108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36740,
											"end": 37108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36740,
											"end": 37108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36740,
											"end": 37108,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 46341,
											"end": 46444,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 46341,
											"end": 46444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45802,
											"end": 45818,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 45802,
											"end": 45818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45802,
											"end": 45818,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 45802,
											"end": 45818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45801,
											"end": 45818,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46415,
											"end": 46437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 46421,
											"end": 46428,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46430,
											"end": 46436,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46415,
											"end": 46420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 46415,
											"end": 46437,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16794,
											"end": 16883,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 16794,
											"end": 16883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16849,
											"end": 16876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16869,
											"end": 16875,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16849,
											"end": 16854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 16849,
											"end": 16876,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16849,
											"end": 16876,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 16849,
											"end": 16876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16794,
											"end": 16883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16794,
											"end": 16883,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 43350,
											"end": 43442,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 43350,
											"end": 43442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 42930,
											"end": 42953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43414,
											"end": 43435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 43432,
											"end": 43433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43414,
											"end": 43423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 43414,
											"end": 43435,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43414,
											"end": 43435,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 43414,
											"end": 43435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43350,
											"end": 43442,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17189,
											"end": 17584,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 17189,
											"end": 17584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17265,
											"end": 17289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17292,
											"end": 17324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 17302,
											"end": 17309,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8187,
											"end": 8380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 8187,
											"end": 8380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17292,
											"end": 17324,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 17292,
											"end": 17324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17265,
											"end": 17324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17265,
											"end": 17324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17375,
											"end": 17381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17381,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17355,
											"end": 17381,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17334,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 17334,
											"end": 17443,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17334,
											"end": 17443,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17334,
											"end": 17443,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17334,
											"end": 17443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17334,
											"end": 17443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11990,
											"end": 11992,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17334,
											"end": 17443,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17334,
											"end": 17443,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17334,
											"end": 17443,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11972,
											"end": 11993,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12029,
											"end": 12031,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12009,
											"end": 12027,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12009,
											"end": 12027,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12009,
											"end": 12027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12002,
											"end": 12032,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12068,
											"end": 12102,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77"
										},
										{
											"begin": 12048,
											"end": 12066,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12048,
											"end": 12066,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12048,
											"end": 12066,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12041,
											"end": 12103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12119,
											"end": 12137,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12119,
											"end": 12137,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12119,
											"end": 12137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12112,
											"end": 12146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12163,
											"end": 12182,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12163,
											"end": 12182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17334,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 11788,
											"end": 12188,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17334,
											"end": 17443,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 17334,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17477,
											"end": 17535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 17486,
											"end": 17493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17528,
											"end": 17534,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17509,
											"end": 17525,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17509,
											"end": 17534,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17477,
											"end": 17485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 17477,
											"end": 17535,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17477,
											"end": 17535,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 17477,
											"end": 17535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 17561,
											"end": 17568,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17570,
											"end": 17576,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17555,
											"end": 17560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 17555,
											"end": 17577,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46630,
											"end": 46705,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 46630,
											"end": 46705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45802,
											"end": 45818,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 45802,
											"end": 45818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45802,
											"end": 45818,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 45802,
											"end": 45818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45801,
											"end": 45818,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 45793,
											"end": 45857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46682,
											"end": 46698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 46682,
											"end": 46696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 46682,
											"end": 46698,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 42930,
											"end": 42953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44581,
											"end": 44593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44574,
											"end": 44603,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44603,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 44604,
											"end": 44611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42718,
											"end": 42803,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44604,
											"end": 44611,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 44604,
											"end": 44611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6333,
											"end": 6365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6365,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6382,
											"end": 6400,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6382,
											"end": 6400,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6382,
											"end": 6400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6375,
											"end": 6409,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6375,
											"end": 6409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6375,
											"end": 6409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6306,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6288,
											"end": 6306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54821,
											"end": 54825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54848,
											"end": 54860,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54854,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 54848,
											"end": 54860,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54848,
											"end": 54860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54860,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54848,
											"end": 54860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54860,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54860,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6508,
											"end": 6610,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6508,
											"end": 6610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6564,
											"end": 6577,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6589,
											"end": 6603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6589,
											"end": 6603,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6589,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 6589,
											"end": 6603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6589,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 6589,
											"end": 6603,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 10867,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10984,
											"end": 10988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11031,
											"end": 11056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11042,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11031,
											"end": 11056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11031,
											"end": 11056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11031,
											"end": 11056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11056,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11056,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11031,
											"end": 11065,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11065,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11065,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11065,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11065,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11065,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11131,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11131,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11131,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11075,
											"end": 11194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 11075,
											"end": 11194,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11075,
											"end": 11194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11075,
											"end": 11194,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11075,
											"end": 11194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11075,
											"end": 11194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14365,
											"end": 14367,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11075,
											"end": 11194,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11075,
											"end": 11194,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11075,
											"end": 11194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14347,
											"end": 14368,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14404,
											"end": 14406,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 14384,
											"end": 14402,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14384,
											"end": 14402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14384,
											"end": 14402,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14377,
											"end": 14407,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14443,
											"end": 14477,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14416,
											"end": 14478,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14494,
											"end": 14512,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14494,
											"end": 14512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14494,
											"end": 14512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14487,
											"end": 14522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14539,
											"end": 14558,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14539,
											"end": 14558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11075,
											"end": 11194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 14163,
											"end": 14564,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11075,
											"end": 11194,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 11075,
											"end": 11194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11228,
											"end": 11295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11251,
											"end": 11258,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 11294,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11260,
											"end": 11276,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11260,
											"end": 11294,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11228,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 11228,
											"end": 11295,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 7921,
											"end": 8129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8039,
											"end": 8043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8059,
											"end": 8101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8083,
											"end": 8092,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8094,
											"end": 8100,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 8059,
											"end": 8101,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38165,
											"end": 38567,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 38165,
											"end": 38567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38335,
											"end": 38339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38351,
											"end": 38390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 38364,
											"end": 38370,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 38372,
											"end": 38381,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 38383,
											"end": 38389,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 38351,
											"end": 38363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 38351,
											"end": 38390,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38351,
											"end": 38390,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 38351,
											"end": 38390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38351,
											"end": 38390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38421,
											"end": 38475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 38443,
											"end": 38449,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 38451,
											"end": 38460,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 38462,
											"end": 38468,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 38470,
											"end": 38474,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 38421,
											"end": 38442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 38421,
											"end": 38475,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38421,
											"end": 38475,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 38421,
											"end": 38475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38400,
											"end": 38539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 38400,
											"end": 38539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38400,
											"end": 38539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38400,
											"end": 38539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38400,
											"end": 38539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38400,
											"end": 38539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38400,
											"end": 38539,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38400,
											"end": 38539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38400,
											"end": 38539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 38400,
											"end": 38539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38400,
											"end": 38539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 38400,
											"end": 38539,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38165,
											"end": 38567,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 38165,
											"end": 38567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38165,
											"end": 38567,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 38165,
											"end": 38567,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 38165,
											"end": 38567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38165,
											"end": 38567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38165,
											"end": 38567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38165,
											"end": 38567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38165,
											"end": 38567,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 39419,
											"end": 39763,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 39419,
											"end": 39763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39558,
											"end": 39562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39574,
											"end": 39598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 39582,
											"end": 39589,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39591,
											"end": 39597,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39574,
											"end": 39581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 39574,
											"end": 39598,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39574,
											"end": 39598,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 39574,
											"end": 39598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39574,
											"end": 39598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39629,
											"end": 39672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 39650,
											"end": 39657,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39659,
											"end": 39665,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39667,
											"end": 39671,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39629,
											"end": 39649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 39629,
											"end": 39672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39629,
											"end": 39672,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 39629,
											"end": 39672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39608,
											"end": 39735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 39608,
											"end": 39735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39608,
											"end": 39735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39608,
											"end": 39735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39608,
											"end": 39735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39608,
											"end": 39735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 39608,
											"end": 39735,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39608,
											"end": 39735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39608,
											"end": 39735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9570,
											"end": 9591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9627,
											"end": 9629,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 9607,
											"end": 9625,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9607,
											"end": 9625,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9607,
											"end": 9625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9600,
											"end": 9630,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9666,
											"end": 9700,
											"name": "PUSH",
											"source": 1,
											"value": "455243313336333A205F636865636B416E6443616C6C417070726F7665207265"
										},
										{
											"begin": 9646,
											"end": 9664,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9646,
											"end": 9664,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9646,
											"end": 9664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9639,
											"end": 9701,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7665727473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9717,
											"end": 9735,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9717,
											"end": 9735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9717,
											"end": 9735,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9745,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9762,
											"end": 9781,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9762,
											"end": 9781,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 39608,
											"end": 39735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 9386,
											"end": 9787,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55896,
											"end": 55903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55928,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55944,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55922,
											"end": 55944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55944,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54239,
											"end": 54269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 54250,
											"end": 54254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 54239,
											"end": 54249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 54239,
											"end": 54269,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54239,
											"end": 54269,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 54239,
											"end": 54269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56766,
											"end": 56792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 56778,
											"end": 56782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56784,
											"end": 56791,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56766,
											"end": 56777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 56766,
											"end": 56792,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37495,
											"end": 37718,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 37495,
											"end": 37718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37638,
											"end": 37642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37661,
											"end": 37711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 37681,
											"end": 37687,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37689,
											"end": 37698,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37700,
											"end": 37706,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37661,
											"end": 37711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37661,
											"end": 37711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37661,
											"end": 37711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37661,
											"end": 37711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37661,
											"end": 37680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 37661,
											"end": 37711,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 42930,
											"end": 42953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 43714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 43714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43671,
											"end": 43778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 43671,
											"end": 43778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43671,
											"end": 43778,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43671,
											"end": 43778,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43671,
											"end": 43778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43671,
											"end": 43778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8778,
											"end": 8780,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 43671,
											"end": 43778,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43671,
											"end": 43778,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43671,
											"end": 43778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8817,
											"end": 8819,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 8797,
											"end": 8815,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8797,
											"end": 8815,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8797,
											"end": 8815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8820,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8856,
											"end": 8890,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8836,
											"end": 8854,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8836,
											"end": 8854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8836,
											"end": 8854,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8829,
											"end": 8891,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8907,
											"end": 8925,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8907,
											"end": 8925,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8907,
											"end": 8925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8900,
											"end": 8936,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8953,
											"end": 8972,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8953,
											"end": 8972,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 43671,
											"end": 43778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 8576,
											"end": 8978,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 43671,
											"end": 43778,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 43671,
											"end": 43778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43788,
											"end": 43807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 43798,
											"end": 43806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43788,
											"end": 43797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 43788,
											"end": 43807,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12831,
											"end": 13220,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 12831,
											"end": 13220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12914,
											"end": 12935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 12935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12906,
											"end": 12971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 12906,
											"end": 12971,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12906,
											"end": 12971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12906,
											"end": 12971,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12906,
											"end": 12971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12906,
											"end": 12971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15189,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12906,
											"end": 12971,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12906,
											"end": 12971,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12906,
											"end": 12971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15169,
											"end": 15190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15226,
											"end": 15228,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15206,
											"end": 15224,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15206,
											"end": 15224,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15265,
											"end": 15298,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 15245,
											"end": 15263,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15245,
											"end": 15263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15263,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15238,
											"end": 15299,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15316,
											"end": 15334,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15316,
											"end": 15334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 14985,
											"end": 15340,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12971,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 12906,
											"end": 12971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13058,
											"end": 13064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13042,
											"end": 13054,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13042,
											"end": 13054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13042,
											"end": 13064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13042,
											"end": 13064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13042,
											"end": 13064,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13042,
											"end": 13064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 13042,
											"end": 13064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13042,
											"end": 13064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13042,
											"end": 13064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 13042,
											"end": 13064,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13042,
											"end": 13064,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 13042,
											"end": 13064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13042,
											"end": 13064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13042,
											"end": 13064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13042,
											"end": 13064,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13074,
											"end": 13092,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13074,
											"end": 13092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13074,
											"end": 13083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13074,
											"end": 13092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13074,
											"end": 13092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13074,
											"end": 13092,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13074,
											"end": 13092,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13074,
											"end": 13092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13074,
											"end": 13092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13074,
											"end": 13092,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13074,
											"end": 13092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13074,
											"end": 13092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13074,
											"end": 13092,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13074,
											"end": 13102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13074,
											"end": 13102,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13096,
											"end": 13102,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13096,
											"end": 13102,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13074,
											"end": 13083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13074,
											"end": 13102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 13074,
											"end": 13102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13096,
											"end": 13102,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13096,
											"end": 13102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13074,
											"end": 13102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 13074,
											"end": 13102,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13074,
											"end": 13102,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 13074,
											"end": 13102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13074,
											"end": 13102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13074,
											"end": 13102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13074,
											"end": 13102,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13117,
											"end": 13154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13117,
											"end": 13154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7148,
											"end": 7173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13117,
											"end": 13154,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13117,
											"end": 13154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13117,
											"end": 13154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13134,
											"end": 13135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13134,
											"end": 13135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13117,
											"end": 13154,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13117,
											"end": 13154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7121,
											"end": 7139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13117,
											"end": 13154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13117,
											"end": 13154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13117,
											"end": 13154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13117,
											"end": 13154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13117,
											"end": 13154,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13117,
											"end": 13154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13117,
											"end": 13154,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54479,
											"end": 54483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 54518,
											"end": 54565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54518,
											"end": 54565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 54518,
											"end": 54565,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54518,
											"end": 54565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54518,
											"end": 54617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 54518,
											"end": 54617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54518,
											"end": 54617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54581,
											"end": 54617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 54605,
											"end": 54616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54581,
											"end": 54604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 54581,
											"end": 54617,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14539,
											"end": 14909,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 14539,
											"end": 14909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14670,
											"end": 14689,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14670,
											"end": 14689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14662,
											"end": 14730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 14662,
											"end": 14730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14662,
											"end": 14730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14662,
											"end": 14730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14662,
											"end": 14730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14662,
											"end": 14730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13559,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14662,
											"end": 14730,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14662,
											"end": 14730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14662,
											"end": 14730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13539,
											"end": 13560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13596,
											"end": 13598,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13576,
											"end": 13594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13576,
											"end": 13594,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13576,
											"end": 13594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13569,
											"end": 13599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13635,
											"end": 13669,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 13615,
											"end": 13633,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13615,
											"end": 13633,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13615,
											"end": 13633,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13608,
											"end": 13670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13686,
											"end": 13704,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13686,
											"end": 13704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13686,
											"end": 13704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13679,
											"end": 13713,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13730,
											"end": 13749,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13730,
											"end": 13749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14662,
											"end": 14730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 13355,
											"end": 13755,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14662,
											"end": 14730,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 14662,
											"end": 14730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14748,
											"end": 14769,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14748,
											"end": 14769,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 14740,
											"end": 14808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14740,
											"end": 14808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14740,
											"end": 14808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9185,
											"end": 9187,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14740,
											"end": 14808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14740,
											"end": 14808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9188,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9224,
											"end": 9226,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9204,
											"end": 9222,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9204,
											"end": 9222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9204,
											"end": 9222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9197,
											"end": 9227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9263,
											"end": 9297,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 9243,
											"end": 9261,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9243,
											"end": 9261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9243,
											"end": 9261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9236,
											"end": 9298,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9314,
											"end": 9332,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9314,
											"end": 9332,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9314,
											"end": 9332,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9307,
											"end": 9339,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9356,
											"end": 9375,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9356,
											"end": 9375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14740,
											"end": 14808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 8983,
											"end": 9381,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14740,
											"end": 14808,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 14740,
											"end": 14808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14830,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14855,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14819,
											"end": 14855,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7148,
											"end": 7173,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14909,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11808,
											"end": 12555,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 11808,
											"end": 12555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11943,
											"end": 11963,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11943,
											"end": 11963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11935,
											"end": 12005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 11935,
											"end": 12005,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11935,
											"end": 12005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11935,
											"end": 12005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11935,
											"end": 12005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11935,
											"end": 12005,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12797,
											"end": 12799,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11935,
											"end": 12005,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11935,
											"end": 12005,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11935,
											"end": 12005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12779,
											"end": 12800,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12836,
											"end": 12838,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 12816,
											"end": 12834,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12816,
											"end": 12834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12816,
											"end": 12834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12809,
											"end": 12839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12875,
											"end": 12909,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 12855,
											"end": 12873,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12855,
											"end": 12873,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12855,
											"end": 12873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12910,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12926,
											"end": 12944,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12926,
											"end": 12944,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12926,
											"end": 12944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12919,
											"end": 12954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12971,
											"end": 12990,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12971,
											"end": 12990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11935,
											"end": 12005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 12595,
											"end": 12996,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11935,
											"end": 12005,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 11935,
											"end": 12005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12023,
											"end": 12046,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12023,
											"end": 12046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12015,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 12015,
											"end": 12086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12015,
											"end": 12086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12015,
											"end": 12086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12015,
											"end": 12086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12015,
											"end": 12086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7971,
											"end": 7973,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12015,
											"end": 12086,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12015,
											"end": 12086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12015,
											"end": 12086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7953,
											"end": 7974,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8010,
											"end": 8012,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7983,
											"end": 8013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8049,
											"end": 8083,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8022,
											"end": 8084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8100,
											"end": 8118,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8100,
											"end": 8118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8100,
											"end": 8118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8093,
											"end": 8126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8143,
											"end": 8162,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8143,
											"end": 8162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12015,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 7769,
											"end": 8168,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12015,
											"end": 12086,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 12015,
											"end": 12086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12155,
											"end": 12176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12179,
											"end": 12196,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12250,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12250,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12206,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 12206,
											"end": 12314,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12206,
											"end": 12314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12206,
											"end": 12314,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12206,
											"end": 12314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12206,
											"end": 12314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9994,
											"end": 9996,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12206,
											"end": 12314,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12206,
											"end": 12314,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12206,
											"end": 12314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9976,
											"end": 9997,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10033,
											"end": 10035,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10013,
											"end": 10031,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10013,
											"end": 10031,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10013,
											"end": 10031,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10072,
											"end": 10106,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 10052,
											"end": 10070,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10052,
											"end": 10070,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10052,
											"end": 10070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10045,
											"end": 10107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10123,
											"end": 10141,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10123,
											"end": 10141,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10123,
											"end": 10141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10116,
											"end": 10152,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10169,
											"end": 10188,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10169,
											"end": 10188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12206,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 9792,
											"end": 10194,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12206,
											"end": 12314,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 12206,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12365,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12368,
											"end": 12390,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12368,
											"end": 12390,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12368,
											"end": 12390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12390,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12430,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12430,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12390,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12390,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12348,
											"end": 12357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12390,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12410,
											"end": 12440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12473,
											"end": 12482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12465,
											"end": 12471,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12484,
											"end": 12490,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7148,
											"end": 7173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7136,
											"end": 7138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7121,
											"end": 7139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7121,
											"end": 7139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7179,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12456,
											"end": 12491,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12502,
											"end": 12548,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 12502,
											"end": 12548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 12555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11808,
											"end": 12555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11808,
											"end": 12555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11808,
											"end": 12555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11808,
											"end": 12555,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 55165,
											"end": 55649,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 55165,
											"end": 55649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55245,
											"end": 55267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 55253,
											"end": 55257,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55259,
											"end": 55266,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55245,
											"end": 55252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 55245,
											"end": 55267,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55245,
											"end": 55267,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 55245,
											"end": 55267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55240,
											"end": 55643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 55240,
											"end": 55643,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55428,
											"end": 55469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 55456,
											"end": 55463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55428,
											"end": 55469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55466,
											"end": 55468,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 55428,
											"end": 55447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 55428,
											"end": 55469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55428,
											"end": 55469,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 55428,
											"end": 55469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55540,
											"end": 55578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 55568,
											"end": 55572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55575,
											"end": 55577,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55540,
											"end": 55559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 55540,
											"end": 55578,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55540,
											"end": 55578,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 55540,
											"end": 55578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 55283,
											"end": 55632,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55283,
											"end": 55632,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55283,
											"end": 55632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 55283,
											"end": 55632,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55283,
											"end": 55632,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55283,
											"end": 55632,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55283,
											"end": 55632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 55283,
											"end": 55632,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58619,
											"end": 58843,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 58619,
											"end": 58843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58693,
											"end": 58715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 58701,
											"end": 58705,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58707,
											"end": 58714,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58693,
											"end": 58700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 58693,
											"end": 58715,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58693,
											"end": 58715,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 58693,
											"end": 58715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58688,
											"end": 58837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 58688,
											"end": 58837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58731,
											"end": 58743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58737,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 58731,
											"end": 58743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58731,
											"end": 58743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58731,
											"end": 58743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58731,
											"end": 58760,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58760,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58760,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58760,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58760,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58760,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58760,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58767,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 58731,
											"end": 58767,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58763,
											"end": 58767,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58731,
											"end": 58767,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58767,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 58813,
											"end": 58825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4085,
											"end": 4181,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58813,
											"end": 58825,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 58813,
											"end": 58825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58786,
											"end": 58826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58804,
											"end": 58811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58786,
											"end": 58826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58798,
											"end": 58802,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58786,
											"end": 58826,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 58786,
											"end": 58826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58786,
											"end": 58826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58786,
											"end": 58826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58786,
											"end": 58826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58786,
											"end": 58826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58786,
											"end": 58826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58786,
											"end": 58826,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58786,
											"end": 58826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58786,
											"end": 58826,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 58619,
											"end": 58843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58619,
											"end": 58843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58619,
											"end": 58843,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 58849,
											"end": 59074,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 58849,
											"end": 59074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58923,
											"end": 58945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 58931,
											"end": 58935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58937,
											"end": 58944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58923,
											"end": 58930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 58923,
											"end": 58945,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58923,
											"end": 58945,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 58923,
											"end": 58945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58919,
											"end": 59068,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58919,
											"end": 59068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 58919,
											"end": 59068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58993,
											"end": 58998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58967,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58961,
											"end": 58990,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58990,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58990,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58990,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58998,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 58961,
											"end": 58998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58998,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 59017,
											"end": 59057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59017,
											"end": 59057,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 59017,
											"end": 59057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58993,
											"end": 58998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59017,
											"end": 59057,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 58849,
											"end": 59074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58849,
											"end": 59074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58849,
											"end": 59074,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 40318,
											"end": 40833,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 40318,
											"end": 40833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40483,
											"end": 40487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40504,
											"end": 40524,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40504,
											"end": 40524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19594,
											"end": 19614,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 40499,
											"end": 40565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 40499,
											"end": 40565,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40549,
											"end": 40554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40542,
											"end": 40554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 40542,
											"end": 40554,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40499,
											"end": 40565,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 40499,
											"end": 40565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2229F297"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40574,
											"end": 40587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40574,
											"end": 40587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40590,
											"end": 40636,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40636,
											"name": "PUSH",
											"source": 0,
											"value": "88A7CA5C"
										},
										{
											"begin": 40590,
											"end": 40636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40676,
											"end": 40682,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 40676,
											"end": 40682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40696,
											"end": 40702,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 40696,
											"end": 40702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40716,
											"end": 40720,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 40716,
											"end": 40720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 40590,
											"end": 40730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 40748,
											"end": 40825,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2229F297"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40748,
											"end": 40825,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40748,
											"end": 40825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40318,
											"end": 40833,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 40318,
											"end": 40833,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 40318,
											"end": 40833,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40318,
											"end": 40833,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40318,
											"end": 40833,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40318,
											"end": 40833,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40318,
											"end": 40833,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 61028,
											"end": 61198,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 61028,
											"end": 61198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59423,
											"end": 59457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 59216,
											"end": 59235,
											"name": "PUSH",
											"source": 0,
											"value": "F0887BA65EE2024EA881D91B74C2450EF19E1557F03BED3EA9F16B037CBE2DC9"
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59423,
											"end": 59457,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 59423,
											"end": 59457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59402,
											"end": 59526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 59402,
											"end": 59526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59402,
											"end": 59526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59402,
											"end": 59526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 59402,
											"end": 59526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59402,
											"end": 59526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10401,
											"end": 10403,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 59402,
											"end": 59526,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59402,
											"end": 59526,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59402,
											"end": 59526,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10383,
											"end": 10404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10440,
											"end": 10442,
											"name": "PUSH",
											"source": 1,
											"value": "2B"
										},
										{
											"begin": 10420,
											"end": 10438,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10420,
											"end": 10438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10420,
											"end": 10438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10413,
											"end": 10443,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10479,
											"end": 10513,
											"name": "PUSH",
											"source": 1,
											"value": "526F6C65733A2063616C6C657220646F6573206E6F7420686176652074686520"
										},
										{
											"begin": 10459,
											"end": 10477,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10459,
											"end": 10477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10459,
											"end": 10477,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10452,
											"end": 10514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D494E54455220726F6C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10530,
											"end": 10548,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10530,
											"end": 10548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10530,
											"end": 10548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10523,
											"end": 10564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10581,
											"end": 10600,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10581,
											"end": 10600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 59402,
											"end": 59526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 10199,
											"end": 10606,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 59402,
											"end": 59526,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 59402,
											"end": 59526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61163,
											"end": 61191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 61175,
											"end": 61182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61184,
											"end": 61190,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61163,
											"end": 61174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 61163,
											"end": 61191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13540,
											"end": 14116,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 13540,
											"end": 14116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13623,
											"end": 13644,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13623,
											"end": 13644,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13615,
											"end": 13682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 13615,
											"end": 13682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13615,
											"end": 13682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13615,
											"end": 13682,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13615,
											"end": 13682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13615,
											"end": 13682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12395,
											"end": 12397,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13615,
											"end": 13682,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13615,
											"end": 13682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13615,
											"end": 13682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12377,
											"end": 12398,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12434,
											"end": 12436,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 12414,
											"end": 12432,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12414,
											"end": 12432,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12414,
											"end": 12432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12407,
											"end": 12437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12473,
											"end": 12507,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 12453,
											"end": 12471,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12453,
											"end": 12471,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12453,
											"end": 12471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12446,
											"end": 12508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12524,
											"end": 12542,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12524,
											"end": 12542,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12524,
											"end": 12542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12517,
											"end": 12548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12565,
											"end": 12584,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12565,
											"end": 12584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13615,
											"end": 13682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 12193,
											"end": 12590,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13615,
											"end": 13682,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 13615,
											"end": 13682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13778,
											"end": 13796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13778,
											"end": 13796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13753,
											"end": 13775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13778,
											"end": 13796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13778,
											"end": 13796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13778,
											"end": 13796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13778,
											"end": 13796,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13778,
											"end": 13796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13778,
											"end": 13796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13778,
											"end": 13796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13778,
											"end": 13796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13778,
											"end": 13796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13778,
											"end": 13796,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13778,
											"end": 13796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13814,
											"end": 13838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13814,
											"end": 13838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13814,
											"end": 13838,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13814,
											"end": 13838,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13806,
											"end": 13877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 13806,
											"end": 13877,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13806,
											"end": 13877,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13806,
											"end": 13877,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13806,
											"end": 13877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13806,
											"end": 13877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8375,
											"end": 8377,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13806,
											"end": 13877,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13806,
											"end": 13877,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13806,
											"end": 13877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8414,
											"end": 8416,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 8394,
											"end": 8412,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8394,
											"end": 8412,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8394,
											"end": 8412,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8387,
											"end": 8417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8487,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 8433,
											"end": 8451,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8433,
											"end": 8451,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8433,
											"end": 8451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8426,
											"end": 8488,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8504,
											"end": 8522,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8504,
											"end": 8522,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 8522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8497,
											"end": 8529,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8546,
											"end": 8565,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8546,
											"end": 8565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13806,
											"end": 13877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 8173,
											"end": 8571,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13806,
											"end": 13877,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 13806,
											"end": 13877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13911,
											"end": 13929,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13911,
											"end": 13929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13911,
											"end": 13920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13911,
											"end": 13929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13911,
											"end": 13929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13911,
											"end": 13929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13911,
											"end": 13929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13911,
											"end": 13929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13911,
											"end": 13929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13911,
											"end": 13929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13911,
											"end": 13929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13911,
											"end": 13929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13911,
											"end": 13929,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13932,
											"end": 13955,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13932,
											"end": 13955,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13932,
											"end": 13955,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13911,
											"end": 13955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13911,
											"end": 13955,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13975,
											"end": 13987,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13975,
											"end": 13997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13975,
											"end": 13997,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13949,
											"end": 13955,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13949,
											"end": 13955,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13911,
											"end": 13920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13975,
											"end": 13997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 13975,
											"end": 13997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13949,
											"end": 13955,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13949,
											"end": 13955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13975,
											"end": 13997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 13975,
											"end": 13997,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13975,
											"end": 13997,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 13975,
											"end": 13997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13975,
											"end": 13997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13975,
											"end": 13997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13975,
											"end": 13997,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14013,
											"end": 14050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14013,
											"end": 14050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7148,
											"end": 7173,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14039,
											"end": 14040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14039,
											"end": 14040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14013,
											"end": 14050,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14013,
											"end": 14050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14013,
											"end": 14050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14013,
											"end": 14050,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 14013,
											"end": 14050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7121,
											"end": 7139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14013,
											"end": 14050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14013,
											"end": 14050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14013,
											"end": 14050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14013,
											"end": 14050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14013,
											"end": 14050,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14013,
											"end": 14050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14013,
											"end": 14050,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 43820,
											"end": 43989,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 43820,
											"end": 43989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43894,
											"end": 43900,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 43894,
											"end": 43900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43894,
											"end": 43900,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43910,
											"end": 43927,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43910,
											"end": 43927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43910,
											"end": 43927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43894,
											"end": 43900,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43910,
											"end": 43927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43910,
											"end": 43927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43910,
											"end": 43927,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43910,
											"end": 43927,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43910,
											"end": 43927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43910,
											"end": 43927,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43910,
											"end": 43927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43910,
											"end": 43927,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 43910,
											"end": 43927,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43942,
											"end": 43982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43942,
											"end": 43982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43894,
											"end": 43900,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43894,
											"end": 43900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43894,
											"end": 43900,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43894,
											"end": 43900,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 43894,
											"end": 43900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43894,
											"end": 43900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43894,
											"end": 43900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43894,
											"end": 43900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43942,
											"end": 43982,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 43942,
											"end": 43982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43875,
											"end": 43891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43875,
											"end": 43891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43942,
											"end": 43982,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 43865,
											"end": 43989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43820,
											"end": 43989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43820,
											"end": 43989,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 61358,
											"end": 61451,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 61358,
											"end": 61451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 42930,
											"end": 42953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61422,
											"end": 61444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 61422,
											"end": 61442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 61422,
											"end": 61444,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41283,
											"end": 41731,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 41283,
											"end": 41731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41421,
											"end": 41425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41442,
											"end": 41460,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41442,
											"end": 41460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19594,
											"end": 19614,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 41437,
											"end": 41501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 41437,
											"end": 41501,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41485,
											"end": 41490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41478,
											"end": 41490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 41478,
											"end": 41490,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41437,
											"end": 41501,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 41437,
											"end": 41501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7B04A2D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41510,
											"end": 41523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41510,
											"end": 41523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41526,
											"end": 41569,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41569,
											"name": "PUSH",
											"source": 0,
											"value": "7B04A2D0"
										},
										{
											"begin": 41526,
											"end": 41569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41609,
											"end": 41615,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 41609,
											"end": 41615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41629,
											"end": 41633,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 41629,
											"end": 41633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "tag",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "tag",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "tag",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "tag",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 41526,
											"end": 41643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 41661,
											"end": 41723,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7B04A2D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41661,
											"end": 41723,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41661,
											"end": 41723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41283,
											"end": 41731,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41283,
											"end": 41731,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41283,
											"end": 41731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41283,
											"end": 41731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41283,
											"end": 41731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41283,
											"end": 41731,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35622,
											"end": 35903,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 35622,
											"end": 35903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35764,
											"end": 35768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 35803,
											"end": 35844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35803,
											"end": 35844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0202A11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35803,
											"end": 35844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35803,
											"end": 35844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35803,
											"end": 35896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 35803,
											"end": 35896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28589,
											"end": 28629,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28589,
											"end": 28629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28589,
											"end": 28629,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35860,
											"end": 35896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 28437,
											"end": 28636,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51448,
											"end": 51917,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 51448,
											"end": 51917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51547,
											"end": 51560,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 51576,
											"end": 51595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51608,
											"end": 51618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 51612,
											"end": 51618,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51608,
											"end": 51609,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 51608,
											"end": 51618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 51608,
											"end": 51618,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51608,
											"end": 51618,
											"name": "tag",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 51608,
											"end": 51618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51608,
											"end": 51622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 51608,
											"end": 51622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51621,
											"end": 51622,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 51608,
											"end": 51622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 51608,
											"end": 51622,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51608,
											"end": 51622,
											"name": "tag",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 51608,
											"end": 51622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "tag",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "tag",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51576,
											"end": 51623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51576,
											"end": 51623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51633,
											"end": 51639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51640,
											"end": 51641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "tag",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51633,
											"end": 51648,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51633,
											"end": 51648,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51648,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51658,
											"end": 51664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51665,
											"end": 51666,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51658,
											"end": 51673,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51673,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51658,
											"end": 51673,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51673,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51688,
											"end": 51697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51700,
											"end": 51710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 51704,
											"end": 51710,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51700,
											"end": 51701,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 51700,
											"end": 51710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 51700,
											"end": 51710,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51700,
											"end": 51710,
											"name": "tag",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 51700,
											"end": 51710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51700,
											"end": 51714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 51700,
											"end": 51714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51713,
											"end": 51714,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51700,
											"end": 51714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 51700,
											"end": 51714,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51700,
											"end": 51714,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 51700,
											"end": 51714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51688,
											"end": 51714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51688,
											"end": 51714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51683,
											"end": 51815,
											"name": "tag",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 51683,
											"end": 51815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51720,
											"end": 51721,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51716,
											"end": 51717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51716,
											"end": 51721,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51683,
											"end": 51815,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51683,
											"end": 51815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 51683,
											"end": 51815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51767,
											"end": 51772,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 51775,
											"end": 51778,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 51767,
											"end": 51778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "tag",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51748,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51749,
											"end": 51750,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "tag",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51742,
											"end": 51779,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51742,
											"end": 51779,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51779,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51803,
											"end": 51804,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51793,
											"end": 51804,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 51793,
											"end": 51804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51793,
											"end": 51804,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 51793,
											"end": 51804,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 51793,
											"end": 51804,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 51723,
											"end": 51726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 51723,
											"end": 51726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51723,
											"end": 51726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 51723,
											"end": 51726,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51723,
											"end": 51726,
											"name": "tag",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 51723,
											"end": 51726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51723,
											"end": 51726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51723,
											"end": 51726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51683,
											"end": 51815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 51683,
											"end": 51815,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51683,
											"end": 51815,
											"name": "tag",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 51683,
											"end": 51815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51832,
											"end": 51842,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51832,
											"end": 51842,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51824,
											"end": 51879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 51824,
											"end": 51879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51824,
											"end": 51879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51824,
											"end": 51879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51824,
											"end": 51879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51824,
											"end": 51879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7610,
											"end": 7612,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 51824,
											"end": 51879,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51824,
											"end": 51879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51824,
											"end": 51879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7592,
											"end": 7613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7592,
											"end": 7613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7592,
											"end": 7613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7629,
											"end": 7647,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7629,
											"end": 7647,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7629,
											"end": 7647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7652,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7688,
											"end": 7722,
											"name": "PUSH",
											"source": 1,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 7668,
											"end": 7686,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7668,
											"end": 7686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7668,
											"end": 7686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7661,
											"end": 7723,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7740,
											"end": 7758,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7740,
											"end": 7758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51824,
											"end": 51879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 7408,
											"end": 7764,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18299,
											"end": 18537,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 18299,
											"end": 18537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18235,
											"end": 18239,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "728"
										},
										{
											"begin": 18426,
											"end": 18432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18404,
											"end": 18423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 7472,
											"end": 7484,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7472,
											"end": 7484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7472,
											"end": 7484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7385,
											"end": 7491,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18404,
											"end": 18423,
											"name": "tag",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 18404,
											"end": 18423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18404,
											"end": 18432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 18404,
											"end": 18432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18404,
											"end": 18432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18404,
											"end": 18432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 18404,
											"end": 18432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18404,
											"end": 18432,
											"name": "tag",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 18404,
											"end": 18432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18404,
											"end": 18441,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18404,
											"end": 18441,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18383,
											"end": 18492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 18383,
											"end": 18492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18383,
											"end": 18492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18383,
											"end": 18492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18383,
											"end": 18492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18383,
											"end": 18492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13203,
											"end": 13205,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18383,
											"end": 18492,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18383,
											"end": 18492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18383,
											"end": 18492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13242,
											"end": 13244,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 13222,
											"end": 13240,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13222,
											"end": 13240,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13222,
											"end": 13240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13215,
											"end": 13245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13281,
											"end": 13308,
											"name": "PUSH",
											"source": 1,
											"value": "45524332304361707065643A2063617020657863656564656400000000000000"
										},
										{
											"begin": 13261,
											"end": 13279,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13261,
											"end": 13279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13261,
											"end": 13279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13254,
											"end": 13309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13326,
											"end": 13344,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13326,
											"end": 13344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18383,
											"end": 18492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 13001,
											"end": 13350,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18383,
											"end": 18492,
											"name": "tag",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 18383,
											"end": 18492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18502,
											"end": 18530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 18514,
											"end": 18521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18523,
											"end": 18529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18502,
											"end": 18513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 18502,
											"end": 18530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46776,
											"end": 46889,
											"name": "tag",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 46776,
											"end": 46889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46829,
											"end": 46845,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 46829,
											"end": 46852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46829,
											"end": 46852,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 46829,
											"end": 46852,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46848,
											"end": 46852,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 46829,
											"end": 46852,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 46829,
											"end": 46852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46829,
											"end": 46852,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46868,
											"end": 46882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46868,
											"end": 46882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46868,
											"end": 46882,
											"name": "PUSH",
											"source": 0,
											"value": "AE5184FBA832CB2B1F702ACA6117B8D265EAF03AD33EB133F19DDE0F5920FA08"
										},
										{
											"begin": 46868,
											"end": 46882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46829,
											"end": 46845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46829,
											"end": 46845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46868,
											"end": 46882,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46889,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 910,
											"name": "tag",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 192,
											"end": 910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 234,
											"end": 239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 290,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 280,
											"end": 284,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 272,
											"end": 278,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 268,
											"end": 285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 264,
											"end": 291,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 254,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 254,
											"end": 309,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 295,
											"end": 307,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 254,
											"end": 309,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 254,
											"end": 309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 341,
											"end": 347,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 348,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 367,
											"end": 385,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 400,
											"end": 402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 397,
											"end": 407,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 394,
											"end": 430,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 394,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 394,
											"end": 430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 485,
											"end": 487,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 479,
											"end": 488,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 453,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 535,
											"end": 557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 535,
											"end": 557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 535,
											"end": 557,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 559,
											"end": 561,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 531,
											"end": 562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 527,
											"end": 567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 515,
											"end": 568,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 515,
											"end": 568,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 515,
											"end": 568,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 601,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 583,
											"end": 601,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 583,
											"end": 601,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 603,
											"end": 625,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 603,
											"end": 625,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 603,
											"end": 625,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 580,
											"end": 626,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 577,
											"end": 649,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 577,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 577,
											"end": 649,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 629,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 629,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 629,
											"end": 647,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 629,
											"end": 647,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 629,
											"end": 647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 669,
											"end": 679,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 665,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 658,
											"end": 680,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 704,
											"end": 706,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 696,
											"end": 702,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 689,
											"end": 707,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 750,
											"end": 753,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 743,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 738,
											"end": 740,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 730,
											"end": 736,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 726,
											"end": 741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 722,
											"end": 748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 719,
											"end": 754,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 716,
											"end": 771,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 716,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 716,
											"end": 771,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 767,
											"end": 768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 765,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 757,
											"end": 769,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 716,
											"end": 771,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 716,
											"end": 771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 831,
											"end": 833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 824,
											"end": 828,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 816,
											"end": 822,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 812,
											"end": 829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 805,
											"end": 809,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 797,
											"end": 803,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 793,
											"end": 810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 780,
											"end": 834,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 878,
											"end": 879,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 875,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 868,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 858,
											"end": 864,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 854,
											"end": 869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 850,
											"end": 876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 843,
											"end": 880,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 898,
											"end": 904,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 889,
											"end": 904,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 889,
											"end": 904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 889,
											"end": 904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 889,
											"end": 904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 889,
											"end": 904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 889,
											"end": 904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 192,
											"end": 910,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 192,
											"end": 910,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 192,
											"end": 910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 192,
											"end": 910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 192,
											"end": 910,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 915,
											"end": 1101,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 915,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 974,
											"end": 980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1029,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1015,
											"end": 1024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1013,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1025,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1030,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1047,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 995,
											"end": 1047,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1043,
											"end": 1044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1041,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1033,
											"end": 1045,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1047,
											"name": "tag",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 995,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 1085,
											"end": 1094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 1066,
											"end": 1095,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1106,
											"end": 1366,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 1106,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1182,
											"end": 1188,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1237,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1232,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1221,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1233,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1238,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1253,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 1293,
											"end": 1302,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 1274,
											"end": 1303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1274,
											"end": 1303,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 1274,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 1356,
											"end": 1358,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "tag",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 1322,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1366,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1366,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1366,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1371,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1371,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1470,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1519,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1505,
											"end": 1514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1503,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1515,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1488,
											"end": 1520,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 1537,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 1485,
											"end": 1537,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1533,
											"end": 1534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1530,
											"end": 1531,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1523,
											"end": 1535,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 1537,
											"name": "tag",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 1485,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 1575,
											"end": 1584,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 1556,
											"end": 1585,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1556,
											"end": 1585,
											"name": "tag",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 1556,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1585,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1604,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 1638,
											"end": 1640,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1627,
											"end": 1636,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1604,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 1604,
											"end": 1642,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1604,
											"end": 1642,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 1604,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1678,
											"end": 1687,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1692,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1693,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1699,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1699,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1699,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1699,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1699,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1699,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1704,
											"end": 2241,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1704,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1799,
											"end": 1805,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1815,
											"end": 1821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1879,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1864,
											"end": 1873,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1874,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1880,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1897,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 1844,
											"end": 1897,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1891,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1883,
											"end": 1895,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1897,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 1844,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 1935,
											"end": 1944,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 1916,
											"end": 1945,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1916,
											"end": 1945,
											"name": "tag",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 1916,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1906,
											"end": 1945,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1906,
											"end": 1945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 1998,
											"end": 2000,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1987,
											"end": 1996,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 1964,
											"end": 2002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1964,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 1964,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1954,
											"end": 2002,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1954,
											"end": 2002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2051,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2053,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2053,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2106,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2093,
											"end": 2102,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2108,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2149,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2123,
											"end": 2129,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2150,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "tag",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 2117,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 2227,
											"end": 2234,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2224,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2216,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 2186,
											"end": 2235,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2186,
											"end": 2235,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 2186,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 2241,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 2241,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 2241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 2241,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 2241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 2241,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 2241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 2241,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2246,
											"end": 2500,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2246,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2377,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2363,
											"end": 2372,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2361,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2373,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2391,
											"end": 2392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2393,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 2433,
											"end": 2442,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 2414,
											"end": 2443,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2414,
											"end": 2443,
											"name": "tag",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 2414,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2443,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2492,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2475,
											"end": 2493,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2493,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2494,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2494,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2246,
											"end": 2500,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2505,
											"end": 2967,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2505,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 2597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2605,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2662,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2646,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2658,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2663,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2680,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 2628,
											"end": 2680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2677,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2678,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2680,
											"name": "tag",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 2628,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 2718,
											"end": 2727,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 2699,
											"end": 2728,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2699,
											"end": 2728,
											"name": "tag",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 2699,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2728,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2777,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2760,
											"end": 2778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2779,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2832,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2834,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2875,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2876,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2893,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 2843,
											"end": 2893,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2889,
											"end": 2890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2886,
											"end": 2887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2891,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2893,
											"name": "tag",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 2843,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 2953,
											"end": 2960,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2942,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 2951,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 2912,
											"end": 2961,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2912,
											"end": 2961,
											"name": "tag",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 2912,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 2961,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 2961,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 2961,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2967,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2967,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2967,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2967,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2972,
											"end": 3249,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 2972,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3080,
											"end": 3089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3078,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3090,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3063,
											"end": 3095,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3060,
											"end": 3112,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3060,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 3060,
											"end": 3112,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3108,
											"end": 3109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3098,
											"end": 3110,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3060,
											"end": 3112,
											"name": "tag",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 3060,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3140,
											"end": 3149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3150,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3199,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3200,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3172,
											"end": 3177,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3159,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 3159,
											"end": 3219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3212,
											"end": 3213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3217,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3434,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3254,
											"end": 3434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3313,
											"end": 3319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3366,
											"end": 3368,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3354,
											"end": 3363,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3345,
											"end": 3352,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3341,
											"end": 3364,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3369,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3386,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 3334,
											"end": 3386,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3379,
											"end": 3380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3384,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3386,
											"name": "tag",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 3334,
											"end": 3386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3405,
											"end": 3428,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3254,
											"end": 3434,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3439,
											"end": 3693,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3439,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3507,
											"end": 3513,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3515,
											"end": 3521,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3568,
											"end": 3570,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3556,
											"end": 3565,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3547,
											"end": 3554,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3543,
											"end": 3566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3571,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3588,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 3536,
											"end": 3588,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3581,
											"end": 3582,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3586,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3588,
											"name": "tag",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 3536,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3620,
											"end": 3629,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3630,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3630,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3649,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 3683,
											"end": 3685,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3681,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 3686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3649,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 3649,
											"end": 3687,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3698,
											"end": 3943,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3698,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3797,
											"end": 3806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3788,
											"end": 3795,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3807,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3812,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3829,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 3777,
											"end": 3829,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3825,
											"end": 3826,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3823,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3827,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3829,
											"name": "tag",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 3777,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3864,
											"end": 3873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3874,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3883,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 3907,
											"end": 3912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3883,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 3883,
											"end": 3913,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3948,
											"end": 4197,
											"name": "tag",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 3948,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4070,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4058,
											"end": 4067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4056,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4068,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4041,
											"end": 4073,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4090,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 4038,
											"end": 4090,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4088,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4090,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 4038,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4118,
											"end": 4127,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 4137,
											"end": 4167,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4387,
											"end": 4644,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 4387,
											"end": 4644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4466,
											"end": 4471,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4472,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4493,
											"end": 4499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4488,
											"end": 4491,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4481,
											"end": 4500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 4565,
											"end": 4571,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4553,
											"end": 4556,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4549,
											"end": 4563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4542,
											"end": 4546,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4535,
											"end": 4540,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4531,
											"end": 4547,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 4509,
											"end": 4572,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4509,
											"end": 4572,
											"name": "tag",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 4509,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4626,
											"end": 4628,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4605,
											"end": 4620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4601,
											"end": 4630,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4592,
											"end": 4631,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4592,
											"end": 4631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4592,
											"end": 4631,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4592,
											"end": 4631,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4637,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4588,
											"end": 4638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4588,
											"end": 4638,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4387,
											"end": 4644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4387,
											"end": 4644,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4649,
											"end": 5435,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 4649,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5085,
											"name": "PUSH",
											"source": 1,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 5055,
											"end": 5058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5048,
											"end": 5086,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5109,
											"end": 5122,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5131,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 5186,
											"end": 5192,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5183,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 5176,
											"end": 5179,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5172,
											"end": 5184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5165,
											"end": 5169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5153,
											"end": 5170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5131,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 5131,
											"end": 5193,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5131,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 5131,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1034B99036B4B9B9B4B733903937B6329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5252,
											"end": 5254,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 5212,
											"end": 5228,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5212,
											"end": 5228,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5212,
											"end": 5228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5244,
											"end": 5255,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5244,
											"end": 5255,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5244,
											"end": 5255,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5237,
											"end": 5277,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5324,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 5302,
											"end": 5315,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5375,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5365,
											"end": 5376,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5365,
											"end": 5376,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5346,
											"end": 5363,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5324,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 5324,
											"end": 5387,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5324,
											"end": 5387,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 5324,
											"end": 5387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5407,
											"end": 5424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5426,
											"end": 5428,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5403,
											"end": 5429,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5403,
											"end": 5429,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 5435,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4649,
											"end": 5435,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5648,
											"end": 6136,
											"name": "tag",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 5648,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5917,
											"end": 5932,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5917,
											"end": 5932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5917,
											"end": 5932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5969,
											"end": 5984,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5969,
											"end": 5984,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 5966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5949,
											"end": 5967,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5949,
											"end": 5967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5985,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6016,
											"end": 6018,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5994,
											"end": 6028,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5994,
											"end": 6028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5994,
											"end": 6028,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6064,
											"end": 6067,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6059,
											"end": 6061,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6044,
											"end": 6062,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6044,
											"end": 6062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6037,
											"end": 6068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6037,
											"end": 6068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6037,
											"end": 6068,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5842,
											"end": 5846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6085,
											"end": 6130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 6085,
											"end": 6130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6129,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6129,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6102,
											"end": 6108,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6085,
											"end": 6130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 6085,
											"end": 6130,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6085,
											"end": 6130,
											"name": "tag",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 6085,
											"end": 6130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6130,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 6136,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5648,
											"end": 6136,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6420,
											"end": 6805,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 6420,
											"end": 6805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6653,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6648,
											"end": 6649,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 6646,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 6639,
											"end": 6650,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6635,
											"end": 6654,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6633,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6655,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6605,
											"end": 6656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6692,
											"end": 6698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6689,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6676,
											"end": 6685,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6690,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6665,
											"end": 6699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6735,
											"end": 6737,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6730,
											"end": 6732,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6719,
											"end": 6728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 6738,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6586,
											"end": 6590,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6755,
											"end": 6799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 6795,
											"end": 6797,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6784,
											"end": 6793,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6755,
											"end": 6799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 6755,
											"end": 6799,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6755,
											"end": 6799,
											"name": "tag",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 6755,
											"end": 6799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6747,
											"end": 6799,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6805,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6420,
											"end": 6805,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7184,
											"end": 7403,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 7184,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7333,
											"end": 7335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7322,
											"end": 7331,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7315,
											"end": 7336,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 7300,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7353,
											"end": 7397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 7393,
											"end": 7395,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7382,
											"end": 7391,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7396,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7376,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7353,
											"end": 7397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 7353,
											"end": 7397,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10611,
											"end": 11013,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 10611,
											"end": 11013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10813,
											"end": 10815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10795,
											"end": 10816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10795,
											"end": 10816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10795,
											"end": 10816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10852,
											"end": 10854,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10832,
											"end": 10850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 10850,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 10850,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10825,
											"end": 10855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10891,
											"end": 10925,
											"name": "PUSH",
											"source": 1,
											"value": "455243313336333A205F636865636B416E6443616C6C5472616E736665722072"
										},
										{
											"begin": 10886,
											"end": 10888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10871,
											"end": 10889,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10871,
											"end": 10889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10864,
											"end": 10926,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657665727473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10957,
											"end": 10959,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10942,
											"end": 10960,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10942,
											"end": 10960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10935,
											"end": 10971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11003,
											"end": 11006,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10988,
											"end": 11007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10988,
											"end": 11007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10611,
											"end": 11013,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11427,
											"end": 11783,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 11427,
											"end": 11783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11629,
											"end": 11631,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11611,
											"end": 11632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11611,
											"end": 11632,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11611,
											"end": 11632,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11648,
											"end": 11666,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11648,
											"end": 11666,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11648,
											"end": 11666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11641,
											"end": 11671,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11707,
											"end": 11741,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11702,
											"end": 11704,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11687,
											"end": 11705,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11687,
											"end": 11705,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11680,
											"end": 11742,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11774,
											"end": 11776,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11759,
											"end": 11777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11759,
											"end": 11777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11427,
											"end": 11783,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13760,
											"end": 14158,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 13760,
											"end": 14158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13962,
											"end": 13964,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13944,
											"end": 13965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13944,
											"end": 13965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13944,
											"end": 13965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14003,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 13981,
											"end": 13999,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13981,
											"end": 13999,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13981,
											"end": 13999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13974,
											"end": 14004,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14040,
											"end": 14074,
											"name": "PUSH",
											"source": 1,
											"value": "45524332304D696E7461626C653A206D696E74696E672069732066696E697368"
										},
										{
											"begin": 14035,
											"end": 14037,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14020,
											"end": 14038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14020,
											"end": 14038,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14013,
											"end": 14075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14106,
											"end": 14108,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14091,
											"end": 14109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14091,
											"end": 14109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14084,
											"end": 14116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14148,
											"end": 14151,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14133,
											"end": 14152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14133,
											"end": 14152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13760,
											"end": 14158,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15716,
											"end": 15844,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 15716,
											"end": 15844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15756,
											"end": 15759,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15787,
											"end": 15788,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15783,
											"end": 15789,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15780,
											"end": 15781,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15777,
											"end": 15790,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 15774,
											"end": 15813,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15774,
											"end": 15813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 15774,
											"end": 15813,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15793,
											"end": 15811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 15793,
											"end": 15811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 15793,
											"end": 15811,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15793,
											"end": 15811,
											"name": "tag",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 15793,
											"end": 15811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15829,
											"end": 15838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15829,
											"end": 15838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15716,
											"end": 15844,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15849,
											"end": 16017,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 15849,
											"end": 16017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15889,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15955,
											"end": 15956,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15951,
											"end": 15952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15947,
											"end": 15953,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15943,
											"end": 15957,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 15940,
											"end": 15941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15937,
											"end": 15958,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 15932,
											"end": 15933,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15925,
											"end": 15934,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15918,
											"end": 15935,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15914,
											"end": 15959,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15911,
											"end": 15982,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15911,
											"end": 15982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 15911,
											"end": 15982,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15962,
											"end": 15980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 15962,
											"end": 15980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 15962,
											"end": 15980,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15962,
											"end": 15980,
											"name": "tag",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 15962,
											"end": 15980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16002,
											"end": 16011,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 16002,
											"end": 16011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15849,
											"end": 16017,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16022,
											"end": 16147,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 16022,
											"end": 16147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16062,
											"end": 16066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16090,
											"end": 16091,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16087,
											"end": 16088,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16084,
											"end": 16092,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 16081,
											"end": 16115,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16081,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 16081,
											"end": 16115,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16095,
											"end": 16113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 16095,
											"end": 16113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 16095,
											"end": 16113,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16095,
											"end": 16113,
											"name": "tag",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 16095,
											"end": 16113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16132,
											"end": 16141,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16132,
											"end": 16141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16022,
											"end": 16147,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16152,
											"end": 16410,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 16152,
											"end": 16410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16224,
											"end": 16225,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16234,
											"end": 16347,
											"name": "tag",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 16234,
											"end": 16347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16248,
											"end": 16254,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16245,
											"end": 16246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16242,
											"end": 16255,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 16234,
											"end": 16347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16234,
											"end": 16347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 16234,
											"end": 16347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16324,
											"end": 16335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16324,
											"end": 16335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16324,
											"end": 16335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16318,
											"end": 16336,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16305,
											"end": 16316,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16305,
											"end": 16316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16305,
											"end": 16316,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16298,
											"end": 16337,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16270,
											"end": 16272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16263,
											"end": 16273,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16234,
											"end": 16347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 16234,
											"end": 16347,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16234,
											"end": 16347,
											"name": "tag",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 16234,
											"end": 16347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16365,
											"end": 16371,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16362,
											"end": 16363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16359,
											"end": 16372,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 16356,
											"end": 16404,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16356,
											"end": 16404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 16356,
											"end": 16404,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16400,
											"end": 16401,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16382,
											"end": 16398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16382,
											"end": 16398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16375,
											"end": 16402,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16152,
											"end": 16410,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16415,
											"end": 16551,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 16415,
											"end": 16551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16454,
											"end": 16457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16482,
											"end": 16487,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16472,
											"end": 16511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 16472,
											"end": 16511,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16491,
											"end": 16509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 16491,
											"end": 16509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 16491,
											"end": 16509,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16491,
											"end": 16509,
											"name": "tag",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 16491,
											"end": 16509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16527,
											"end": 16545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16527,
											"end": 16545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16415,
											"end": 16551,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16556,
											"end": 16936,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 16556,
											"end": 16936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16635,
											"end": 16636,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16631,
											"end": 16643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16631,
											"end": 16643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16631,
											"end": 16643,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 16631,
											"end": 16643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16678,
											"end": 16690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16678,
											"end": 16690,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16678,
											"end": 16690,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16699,
											"end": 16760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 16699,
											"end": 16760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16753,
											"end": 16757,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 16745,
											"end": 16751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16741,
											"end": 16758,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16731,
											"end": 16758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16731,
											"end": 16758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16699,
											"end": 16760,
											"name": "tag",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 16699,
											"end": 16760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16806,
											"end": 16808,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16798,
											"end": 16804,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16795,
											"end": 16809,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 16775,
											"end": 16793,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16810,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 16769,
											"end": 16930,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16769,
											"end": 16930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 16769,
											"end": 16930,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16852,
											"end": 16862,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 16847,
											"end": 16850,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 16843,
											"end": 16863,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 16840,
											"end": 16841,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16833,
											"end": 16864,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16887,
											"end": 16891,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 16884,
											"end": 16885,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16877,
											"end": 16892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16915,
											"end": 16919,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 16912,
											"end": 16913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16905,
											"end": 16920,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16769,
											"end": 16930,
											"name": "tag",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 16769,
											"end": 16930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16769,
											"end": 16930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16936,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16936,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16936,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16936,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16941,
											"end": 17068,
											"name": "tag",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 16941,
											"end": 17068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17002,
											"end": 17012,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 16997,
											"end": 17000,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 16993,
											"end": 17013,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 16990,
											"end": 16991,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16983,
											"end": 17014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17033,
											"end": 17037,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 17030,
											"end": 17031,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17023,
											"end": 17038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17057,
											"end": 17061,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17054,
											"end": 17055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17047,
											"end": 17062,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17073,
											"end": 17200,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 17073,
											"end": 17200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17134,
											"end": 17144,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 17129,
											"end": 17132,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 17125,
											"end": 17145,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17122,
											"end": 17123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17115,
											"end": 17146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17165,
											"end": 17169,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 17162,
											"end": 17163,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17155,
											"end": 17170,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17189,
											"end": 17193,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17186,
											"end": 17187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17179,
											"end": 17194,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17205,
											"end": 17332,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 17205,
											"end": 17332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17266,
											"end": 17276,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 17261,
											"end": 17264,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 17257,
											"end": 17277,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17254,
											"end": 17255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17247,
											"end": 17278,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17297,
											"end": 17301,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 17294,
											"end": 17295,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17287,
											"end": 17302,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17321,
											"end": 17325,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17318,
											"end": 17319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17311,
											"end": 17326,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17337,
											"end": 17468,
											"name": "tag",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 17337,
											"end": 17468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17411,
											"end": 17443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17411,
											"end": 17443,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17401,
											"end": 17444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17401,
											"end": 17444,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17391,
											"end": 17462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 17391,
											"end": 17462,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17458,
											"end": 17459,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17455,
											"end": 17456,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17448,
											"end": 17460,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"finishMinting()": "7d64bcb4",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"mintingFinished()": "05d2035b",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"recoverERC20(address,uint256)": "8980f11f",
							"renounceOwnership()": "715018a6",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"cap_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance_\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the PowerfulERC20\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Approve spender to transfer tokens and then execute a callback on recipient.\",\"params\":{\"amount\":\"The amount allowed to be transferred\",\"spender\":\"The address allowed to transfer to\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Approve spender to transfer tokens and then execute a callback on recipient.\",\"params\":{\"amount\":\"The amount allowed to be transferred.\",\"data\":\"Additional data with no specified format.\",\"spender\":\"The address allowed to transfer to.\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"finishMinting()\":{\"details\":\"Function to stop minting new tokens. WARNING: it allows everyone to finish minting. Access controls MUST be defined in derived contracts.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens. WARNING: it allows everyone to mint new tokens. Access controls MUST be defined in derived contracts.\",\"params\":{\"account\":\"The address that will receive the minted tokens\",\"amount\":\"The amount of tokens to mint\"}},\"mintingFinished()\":{\"returns\":{\"_0\":\"if minting is finished or not.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"recoverERC20(address,uint256)\":{\"details\":\"Remember that only owner can call so be careful when use on contracts generated from other contracts.\",\"params\":{\"tokenAddress\":\"The token contract address\",\"tokenAmount\":\"Number of tokens to be sent\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Transfer tokens to a specified address and then execute a callback on recipient.\",\"params\":{\"amount\":\"The amount to be transferred.\",\"recipient\":\"The address to transfer to.\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Transfer tokens to a specified address and then execute a callback on recipient.\",\"params\":{\"amount\":\"The amount to be transferred\",\"data\":\"Additional data with no specified format\",\"recipient\":\"The address to transfer to\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another and then execute a callback on recipient.\",\"params\":{\"amount\":\"The amount of tokens to be transferred\",\"recipient\":\"The address which you want to transfer to\",\"sender\":\"The address which you want to send tokens from\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Transfer tokens from one address to another and then execute a callback on recipient.\",\"params\":{\"amount\":\"The amount of tokens to be transferred\",\"data\":\"Additional data with no specified format\",\"recipient\":\"The address which you want to transfer to\",\"sender\":\"The address which you want to send tokens from\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"PowerfulERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/powerful-erc20.sol\":\"PowerfulERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/powerful-erc20.sol\":{\"keccak256\":\"0x9570db30440d0d877f8e4b5076cb1328db2af6d84f27ae1a4cffc56db63172d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58817e6239d1d81a70605d4bbfc1ea495aadcb3b46647a2575aeb4484b0d60a3\",\"dweb:/ipfs/QmcWsNLsEniffCVQRHwMTN6Hf8VZmPLbCpdn8krRrrQn1M\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Roles": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/powerful-erc20.sol\":59140:59546  contract Roles is AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/powerful-erc20.sol\":59242:59364  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/powerful-erc20.sol\":59266:59310  _setupRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  tag_4\n    /* \"contracts/powerful-erc20.sol\":53806:53810  0x00 */\n  0x00\n    /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n  caller\n    /* \"contracts/powerful-erc20.sol\":59266:59276  _setupRole */\n  tag_7\n    /* \"contracts/powerful-erc20.sol\":59266:59310  _setupRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  jump\t// in\ntag_4:\n    /* \"contracts/powerful-erc20.sol\":59320:59357  _setupRole(MINTER_ROLE, _msgSender()) */\n  tag_8\n    /* \"contracts/powerful-erc20.sol\":59216:59235  keccak256(\"MINTER\") */\n  0xf0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc9\n    /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n  caller\n    /* \"contracts/powerful-erc20.sol\":59266:59276  _setupRole */\n  tag_7\n    /* \"contracts/powerful-erc20.sol\":59266:59310  _setupRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  jump\t// in\n    /* \"contracts/powerful-erc20.sol\":59320:59357  _setupRole(MINTER_ROLE, _msgSender()) */\ntag_8:\n    /* \"contracts/powerful-erc20.sol\":59140:59546  contract Roles is AccessControl {... */\n  jump(tag_10)\n    /* \"contracts/powerful-erc20.sol\":58131:58241  function _setupRole(bytes32 role, address account) internal virtual {... */\ntag_7:\n    /* \"contracts/powerful-erc20.sol\":58209:58234  _grantRole(role, account) */\n  tag_13\n    /* \"contracts/powerful-erc20.sol\":58220:58224  role */\n  dup3\n    /* \"contracts/powerful-erc20.sol\":58226:58233  account */\n  dup3\n    /* \"contracts/powerful-erc20.sol\":58209:58219  _grantRole */\n  tag_14\n    /* \"contracts/powerful-erc20.sol\":58209:58234  _grantRole(role, account) */\n  jump\t// in\ntag_13:\n    /* \"contracts/powerful-erc20.sol\":58131:58241  function _setupRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/powerful-erc20.sol\":58619:58843  function _grantRole(bytes32 role, address account) private {... */\ntag_14:\n    /* \"contracts/powerful-erc20.sol\":54821:54825  bool */\n  0x00\n    /* \"contracts/powerful-erc20.sol\":54848:54860  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/powerful-erc20.sol\":54848:54877  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n    /* \"contracts/powerful-erc20.sol\":58688:58837  if (!hasRole(role, account)) {... */\n  tag_13\n  jumpi\n    /* \"contracts/powerful-erc20.sol\":58731:58737  _roles */\n  0x00\n    /* \"contracts/powerful-erc20.sol\":58731:58743  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/powerful-erc20.sol\":58731:58760  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"contracts/powerful-erc20.sol\":58731:58767  _roles[role].members[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/powerful-erc20.sol\":58763:58767  true */\n  0x01\n    /* \"contracts/powerful-erc20.sol\":58731:58767  _roles[role].members[account] = true */\n  or\n  swap1\n  sstore\n    /* \"contracts/powerful-erc20.sol\":58813:58825  _msgSender() */\n  tag_19\n    /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n  caller\n  swap1\n    /* \"contracts/powerful-erc20.sol\":4085:4181  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"contracts/powerful-erc20.sol\":58813:58825  _msgSender() */\ntag_19:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/powerful-erc20.sol\":58786:58826  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"contracts/powerful-erc20.sol\":58804:58811  account */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/powerful-erc20.sol\":58786:58826  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"contracts/powerful-erc20.sol\":58798:58802  role */\n  dup4\n    /* \"contracts/powerful-erc20.sol\":58786:58826  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"contracts/powerful-erc20.sol\":58619:58843  function _grantRole(bytes32 role, address account) private {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/powerful-erc20.sol\":59140:59546  contract Roles is AccessControl {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/powerful-erc20.sol\":59140:59546  contract Roles is AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x91d14854\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/powerful-erc20.sol\":54354:54624  function supportsInterface(bytes4 interfaceId)... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":1805:1819   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1798:1820   */\n      iszero\n        /* \"#utility.yul\":1780:1821   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1768:1770   */\n      0x20\n        /* \"#utility.yul\":1753:1771   */\n      add\n        /* \"contracts/powerful-erc20.sol\":54354:54624  function supportsInterface(bytes4 interfaceId)... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/powerful-erc20.sol\":55830:55951  function getRoleAdmin(bytes32 role) public view override returns (bytes32) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"contracts/powerful-erc20.sol\":55896:55903  bytes32 */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":55922:55934  _roles[role] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/powerful-erc20.sol\":55922:55944  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"contracts/powerful-erc20.sol\":55830:55951  function getRoleAdmin(bytes32 role) public view override returns (bytes32) {... */\n      jump\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":1978:2003   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1966:1968   */\n      0x20\n        /* \"#utility.yul\":1951:1969   */\n      add\n        /* \"contracts/powerful-erc20.sol\":55830:55951  function getRoleAdmin(bytes32 role) public view override returns (bytes32) {... */\n      tag_16\n        /* \"#utility.yul\":1832:2009   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":56201:56382  function grantRole(bytes32 role, address account)... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/powerful-erc20.sol\":57290:57566  function renounceRole(bytes32 role, address account)... */\n    tag_6:\n      tag_24\n      tag_29\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":54711:54884  function hasRole(bytes32 role, address account)... */\n    tag_7:\n      tag_12\n      tag_32\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":53761:53810  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_8:\n      tag_18\n        /* \"contracts/powerful-erc20.sol\":53806:53810  0x00 */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":53761:53810  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"contracts/powerful-erc20.sol\":59178:59235  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER\") */\n    tag_9:\n      tag_18\n        /* \"contracts/powerful-erc20.sol\":59216:59235  keccak256(\"MINTER\") */\n      0xf0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc9\n        /* \"contracts/powerful-erc20.sol\":59178:59235  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER\") */\n      dup2\n      jump\n        /* \"contracts/powerful-erc20.sol\":56616:56799  function revokeRole(bytes32 role, address account)... */\n    tag_10:\n      tag_24\n      tag_42\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":54354:54624  function supportsInterface(bytes4 interfaceId)... */\n    tag_15:\n        /* \"contracts/powerful-erc20.sol\":54479:54483  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/powerful-erc20.sol\":54518:54565  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"contracts/powerful-erc20.sol\":54518:54617  interfaceId == type(IAccessControl).interfaceId ||... */\n      tag_46\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/powerful-erc20.sol\":28589:28629  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"contracts/powerful-erc20.sol\":54581:54617  super.supportsInterface(interfaceId) */\n    tag_46:\n        /* \"contracts/powerful-erc20.sol\":54499:54617  return... */\n      swap3\n        /* \"contracts/powerful-erc20.sol\":54354:54624  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":56201:56382  function grantRole(bytes32 role, address account)... */\n    tag_27:\n        /* \"contracts/powerful-erc20.sol\":55896:55903  bytes32 */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":55922:55934  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/powerful-erc20.sol\":55922:55944  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"contracts/powerful-erc20.sol\":54239:54269  _checkRole(role, _msgSender()) */\n      tag_51\n        /* \"contracts/powerful-erc20.sol\":54250:54254  role */\n      dup2\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":54239:54249  _checkRole */\n      tag_54\n        /* \"contracts/powerful-erc20.sol\":54239:54269  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_51:\n        /* \"contracts/powerful-erc20.sol\":56350:56375  _grantRole(role, account) */\n      tag_56\n        /* \"contracts/powerful-erc20.sol\":56361:56365  role */\n      dup4\n        /* \"contracts/powerful-erc20.sol\":56367:56374  account */\n      dup4\n        /* \"contracts/powerful-erc20.sol\":56350:56360  _grantRole */\n      tag_57\n        /* \"contracts/powerful-erc20.sol\":56350:56375  _grantRole(role, account) */\n      jump\t// in\n    tag_56:\n        /* \"contracts/powerful-erc20.sol\":56201:56382  function grantRole(bytes32 role, address account)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":57290:57566  function renounceRole(bytes32 role, address account)... */\n    tag_30:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":57426:57449  account == _msgSender() */\n      dup2\n      and\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":57426:57449  account == _msgSender() */\n      eq\n        /* \"contracts/powerful-erc20.sol\":57405:57522  require(... */\n      tag_60\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2965:2967   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":57405:57522  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2947:2968   */\n      mstore\n        /* \"#utility.yul\":3004:3006   */\n      0x2f\n        /* \"#utility.yul\":2984:3002   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2977:3007   */\n      mstore\n        /* \"#utility.yul\":3043:3077   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":3023:3041   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3016:3078   */\n      mstore\n      shl(0x89, 0x103937b632b9903337b91039b2b633)\n        /* \"#utility.yul\":3094:3112   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3087:3132   */\n      mstore\n        /* \"#utility.yul\":3149:3168   */\n      0x84\n      add\n        /* \"contracts/powerful-erc20.sol\":57405:57522  require(... */\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"contracts/powerful-erc20.sol\":57533:57559  _revokeRole(role, account) */\n      tag_63\n        /* \"contracts/powerful-erc20.sol\":57545:57549  role */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":57551:57558  account */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":57533:57544  _revokeRole */\n      tag_64\n        /* \"contracts/powerful-erc20.sol\":57533:57559  _revokeRole(role, account) */\n      jump\t// in\n    tag_63:\n        /* \"contracts/powerful-erc20.sol\":57290:57566  function renounceRole(bytes32 role, address account)... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":54711:54884  function hasRole(bytes32 role, address account)... */\n    tag_33:\n        /* \"contracts/powerful-erc20.sol\":54821:54825  bool */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":54848:54860  _roles[role] */\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":54848:54877  _roles[role].members[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/powerful-erc20.sol\":54711:54884  function hasRole(bytes32 role, address account)... */\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":56616:56799  function revokeRole(bytes32 role, address account)... */\n    tag_43:\n        /* \"contracts/powerful-erc20.sol\":55896:55903  bytes32 */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":55922:55934  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/powerful-erc20.sol\":55922:55944  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"contracts/powerful-erc20.sol\":54239:54269  _checkRole(role, _msgSender()) */\n      tag_68\n        /* \"contracts/powerful-erc20.sol\":54250:54254  role */\n      dup2\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":54239:54249  _checkRole */\n      tag_54\n        /* \"contracts/powerful-erc20.sol\":54239:54269  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_68:\n        /* \"contracts/powerful-erc20.sol\":56766:56792  _revokeRole(role, account) */\n      tag_56\n        /* \"contracts/powerful-erc20.sol\":56778:56782  role */\n      dup4\n        /* \"contracts/powerful-erc20.sol\":56784:56791  account */\n      dup4\n        /* \"contracts/powerful-erc20.sol\":56766:56777  _revokeRole */\n      tag_64\n        /* \"contracts/powerful-erc20.sol\":56766:56792  _revokeRole(role, account) */\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":55165:55649  function _checkRole(bytes32 role, address account) internal view {... */\n    tag_54:\n        /* \"contracts/powerful-erc20.sol\":55245:55267  hasRole(role, account) */\n      tag_75\n        /* \"contracts/powerful-erc20.sol\":55253:55257  role */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":55259:55266  account */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":55245:55252  hasRole */\n      tag_33\n        /* \"contracts/powerful-erc20.sol\":55245:55267  hasRole(role, account) */\n      jump\t// in\n    tag_75:\n        /* \"contracts/powerful-erc20.sol\":55240:55643  if (!hasRole(role, account)) {... */\n      tag_63\n      jumpi\n        /* \"contracts/powerful-erc20.sol\":55428:55469  Strings.toHexString(uint160(account), 20) */\n      tag_77\n        /* \"contracts/powerful-erc20.sol\":55456:55463  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":55428:55469  Strings.toHexString(uint160(account), 20) */\n      and\n        /* \"contracts/powerful-erc20.sol\":55466:55468  20 */\n      0x14\n        /* \"contracts/powerful-erc20.sol\":55428:55447  Strings.toHexString */\n      tag_78\n        /* \"contracts/powerful-erc20.sol\":55428:55469  Strings.toHexString(uint160(account), 20) */\n      jump\t// in\n    tag_77:\n        /* \"contracts/powerful-erc20.sol\":55540:55578  Strings.toHexString(uint256(role), 32) */\n      tag_79\n        /* \"contracts/powerful-erc20.sol\":55568:55572  role */\n      dup4\n        /* \"contracts/powerful-erc20.sol\":55575:55577  32 */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":55540:55559  Strings.toHexString */\n      tag_78\n        /* \"contracts/powerful-erc20.sol\":55540:55578  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_79:\n        /* \"contracts/powerful-erc20.sol\":55335:55600  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_80\n      swap3\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n      shl(0xe5, 0x461bcd)\n        /* \"contracts/powerful-erc20.sol\":55283:55632  revert(... */\n      dup3\n      mstore\n      tag_61\n      swap2\n      0x04\n      add\n      tag_83\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":58619:58843  function _grantRole(bytes32 role, address account) private {... */\n    tag_57:\n        /* \"contracts/powerful-erc20.sol\":58693:58715  hasRole(role, account) */\n      tag_85\n        /* \"contracts/powerful-erc20.sol\":58701:58705  role */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":58707:58714  account */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":58693:58700  hasRole */\n      tag_33\n        /* \"contracts/powerful-erc20.sol\":58693:58715  hasRole(role, account) */\n      jump\t// in\n    tag_85:\n        /* \"contracts/powerful-erc20.sol\":58688:58837  if (!hasRole(role, account)) {... */\n      tag_63\n      jumpi\n        /* \"contracts/powerful-erc20.sol\":58731:58737  _roles */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":58731:58743  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":58731:58760  _roles[role].members[account] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/powerful-erc20.sol\":58731:58767  _roles[role].members[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/powerful-erc20.sol\":58763:58767  true */\n      0x01\n        /* \"contracts/powerful-erc20.sol\":58731:58767  _roles[role].members[account] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/powerful-erc20.sol\":58813:58825  _msgSender() */\n      tag_87\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n      swap1\n        /* \"contracts/powerful-erc20.sol\":4085:4181  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/powerful-erc20.sol\":58813:58825  _msgSender() */\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":58786:58826  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"contracts/powerful-erc20.sol\":58804:58811  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":58786:58826  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"contracts/powerful-erc20.sol\":58798:58802  role */\n      dup4\n        /* \"contracts/powerful-erc20.sol\":58786:58826  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/powerful-erc20.sol\":58619:58843  function _grantRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":58849:59074  function _revokeRole(bytes32 role, address account) private {... */\n    tag_64:\n        /* \"contracts/powerful-erc20.sol\":58923:58945  hasRole(role, account) */\n      tag_89\n        /* \"contracts/powerful-erc20.sol\":58931:58935  role */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":58937:58944  account */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":58923:58930  hasRole */\n      tag_33\n        /* \"contracts/powerful-erc20.sol\":58923:58945  hasRole(role, account) */\n      jump\t// in\n    tag_89:\n        /* \"contracts/powerful-erc20.sol\":58919:59068  if (hasRole(role, account)) {... */\n      iszero\n      tag_63\n      jumpi\n        /* \"contracts/powerful-erc20.sol\":58993:58998  false */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":58961:58973  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":58961:58990  _roles[role].members[account] */\n      dup6\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/powerful-erc20.sol\":58961:58998  _roles[role].members[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/powerful-erc20.sol\":59017:59057  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n      swap3\n        /* \"contracts/powerful-erc20.sol\":58961:58973  _roles[role] */\n      dup6\n      swap2\n        /* \"contracts/powerful-erc20.sol\":59017:59057  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"contracts/powerful-erc20.sol\":58993:58998  false */\n      swap1\n        /* \"contracts/powerful-erc20.sol\":59017:59057  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"contracts/powerful-erc20.sol\":58849:59074  function _revokeRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":51448:51917  function toHexString(uint256 value, uint256 length)... */\n    tag_78:\n        /* \"contracts/powerful-erc20.sol\":51547:51560  string memory */\n      0x60\n        /* \"contracts/powerful-erc20.sol\":51576:51595  bytes memory buffer */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":51608:51618  2 * length */\n      tag_93\n        /* \"contracts/powerful-erc20.sol\":51612:51618  length */\n      dup4\n        /* \"contracts/powerful-erc20.sol\":51608:51609  2 */\n      0x02\n        /* \"contracts/powerful-erc20.sol\":51608:51618  2 * length */\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"contracts/powerful-erc20.sol\":51608:51622  2 * length + 2 */\n      tag_95\n      swap1\n        /* \"contracts/powerful-erc20.sol\":51621:51622  2 */\n      0x02\n        /* \"contracts/powerful-erc20.sol\":51608:51622  2 * length + 2 */\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"contracts/powerful-erc20.sol\":51598:51623  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_98\n      jumpi\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_100:\n      pop\n        /* \"contracts/powerful-erc20.sol\":51576:51623  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n      shl(0xfc, 0x03)\n        /* \"contracts/powerful-erc20.sol\":51633:51639  buffer */\n      dup2\n        /* \"contracts/powerful-erc20.sol\":51640:51641  0 */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":51633:51642  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_102\n      jumpi\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      0x20\n      add\n      add\n        /* \"contracts/powerful-erc20.sol\":51633:51648  buffer[0] = \"0\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n      shl(0xfb, 0x0f)\n        /* \"contracts/powerful-erc20.sol\":51658:51664  buffer */\n      dup2\n        /* \"contracts/powerful-erc20.sol\":51665:51666  1 */\n      0x01\n        /* \"contracts/powerful-erc20.sol\":51658:51667  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_105\n      jumpi\n      tag_105\n      tag_103\n      jump\t// in\n    tag_105:\n      0x20\n      add\n      add\n        /* \"contracts/powerful-erc20.sol\":51658:51673  buffer[1] = \"x\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/powerful-erc20.sol\":51688:51697  uint256 i */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":51700:51710  2 * length */\n      tag_109\n        /* \"contracts/powerful-erc20.sol\":51704:51710  length */\n      dup5\n        /* \"contracts/powerful-erc20.sol\":51700:51701  2 */\n      0x02\n        /* \"contracts/powerful-erc20.sol\":51700:51710  2 * length */\n      tag_94\n      jump\t// in\n    tag_109:\n        /* \"contracts/powerful-erc20.sol\":51700:51714  2 * length + 1 */\n      tag_110\n      swap1\n        /* \"contracts/powerful-erc20.sol\":51713:51714  1 */\n      0x01\n        /* \"contracts/powerful-erc20.sol\":51700:51714  2 * length + 1 */\n      tag_96\n      jump\t// in\n    tag_110:\n        /* \"contracts/powerful-erc20.sol\":51688:51714  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"contracts/powerful-erc20.sol\":51683:51815  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_106:\n        /* \"contracts/powerful-erc20.sol\":51720:51721  1 */\n      0x01\n        /* \"contracts/powerful-erc20.sol\":51716:51717  i */\n      dup2\n        /* \"contracts/powerful-erc20.sol\":51716:51721  i > 1 */\n      gt\n        /* \"contracts/powerful-erc20.sol\":51683:51815  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_107\n      jumpi\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"contracts/powerful-erc20.sol\":51767:51772  value */\n      dup6\n        /* \"contracts/powerful-erc20.sol\":51775:51778  0xf */\n      0x0f\n        /* \"contracts/powerful-erc20.sol\":51767:51778  value & 0xf */\n      and\n        /* \"contracts/powerful-erc20.sol\":51754:51779  _HEX_SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_112\n      jumpi\n      tag_112\n      tag_103\n      jump\t// in\n    tag_112:\n      byte\n      0xf8\n      shl\n        /* \"contracts/powerful-erc20.sol\":51742:51748  buffer */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":51749:51750  i */\n      dup3\n        /* \"contracts/powerful-erc20.sol\":51742:51751  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_114\n      jumpi\n      tag_114\n      tag_103\n      jump\t// in\n    tag_114:\n      0x20\n      add\n      add\n        /* \"contracts/powerful-erc20.sol\":51742:51779  buffer[i] = _HEX_SYMBOLS[value & 0xf] */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/powerful-erc20.sol\":51803:51804  4 */\n      0x04\n        /* \"contracts/powerful-erc20.sol\":51793:51804  value >>= 4 */\n      swap5\n      swap1\n      swap5\n      shr\n      swap4\n        /* \"contracts/powerful-erc20.sol\":51723:51726  --i */\n      tag_115\n      dup2\n      tag_116\n      jump\t// in\n    tag_115:\n      swap1\n      pop\n        /* \"contracts/powerful-erc20.sol\":51683:51815  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_106)\n    tag_107:\n      pop\n        /* \"contracts/powerful-erc20.sol\":51832:51842  value == 0 */\n      dup4\n      iszero\n        /* \"contracts/powerful-erc20.sol\":51824:51879  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2604:2606   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":51824:51879  require(value == 0, \"Strings: hex length insufficient\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2586:2607   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2623:2641   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2616:2646   */\n      mstore\n        /* \"#utility.yul\":2682:2716   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":2662:2680   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2655:2717   */\n      mstore\n        /* \"#utility.yul\":2734:2752   */\n      0x64\n      add\n        /* \"contracts/powerful-erc20.sol\":51824:51879  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_61\n        /* \"#utility.yul\":2402:2758   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":51824:51879  require(value == 0, \"Strings: hex length insufficient\") */\n    tag_117:\n        /* \"contracts/powerful-erc20.sol\":51903:51909  buffer */\n      swap4\n        /* \"contracts/powerful-erc20.sol\":51448:51917  function toHexString(uint256 value, uint256 length)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_20:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_122:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":199:553   */\n    tag_26:\n        /* \"#utility.yul\":267:273   */\n      0x00\n        /* \"#utility.yul\":275:281   */\n      dup1\n        /* \"#utility.yul\":328:330   */\n      0x40\n        /* \"#utility.yul\":316:325   */\n      dup4\n        /* \"#utility.yul\":307:314   */\n      dup6\n        /* \"#utility.yul\":303:326   */\n      sub\n        /* \"#utility.yul\":299:331   */\n      slt\n        /* \"#utility.yul\":296:348   */\n      iszero\n      tag_124\n      jumpi\n        /* \"#utility.yul\":344:345   */\n      0x00\n        /* \"#utility.yul\":341:342   */\n      dup1\n        /* \"#utility.yul\":334:346   */\n      revert\n        /* \"#utility.yul\":296:348   */\n    tag_124:\n        /* \"#utility.yul\":367:390   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":440:442   */\n      0x20\n        /* \"#utility.yul\":425:443   */\n      dup4\n      add\n        /* \"#utility.yul\":412:444   */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":473:504   */\n      dup2\n      and\n        /* \"#utility.yul\":463:505   */\n      dup2\n      eq\n        /* \"#utility.yul\":453:523   */\n      tag_125\n      jumpi\n        /* \"#utility.yul\":519:520   */\n      0x00\n        /* \"#utility.yul\":516:517   */\n      dup1\n        /* \"#utility.yul\":509:521   */\n      revert\n        /* \"#utility.yul\":453:523   */\n    tag_125:\n        /* \"#utility.yul\":542:547   */\n      dup1\n        /* \"#utility.yul\":532:547   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":199:553   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":558:844   */\n    tag_14:\n        /* \"#utility.yul\":616:622   */\n      0x00\n        /* \"#utility.yul\":669:671   */\n      0x20\n        /* \"#utility.yul\":657:666   */\n      dup3\n        /* \"#utility.yul\":648:655   */\n      dup5\n        /* \"#utility.yul\":644:667   */\n      sub\n        /* \"#utility.yul\":640:672   */\n      slt\n        /* \"#utility.yul\":637:689   */\n      iszero\n      tag_127\n      jumpi\n        /* \"#utility.yul\":685:686   */\n      0x00\n        /* \"#utility.yul\":682:683   */\n      dup1\n        /* \"#utility.yul\":675:687   */\n      revert\n        /* \"#utility.yul\":637:689   */\n    tag_127:\n        /* \"#utility.yul\":711:734   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":763:795   */\n      dup2\n      and\n        /* \"#utility.yul\":753:796   */\n      dup2\n      eq\n        /* \"#utility.yul\":743:814   */\n      tag_117\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":849:1635   */\n    tag_81:\n        /* \"#utility.yul\":1260:1285   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":1255:1258   */\n      dup2\n        /* \"#utility.yul\":1248:1286   */\n      mstore\n        /* \"#utility.yul\":1230:1233   */\n      0x00\n        /* \"#utility.yul\":1315:1321   */\n      dup4\n        /* \"#utility.yul\":1309:1322   */\n      mload\n        /* \"#utility.yul\":1331:1393   */\n      tag_130\n        /* \"#utility.yul\":1386:1392   */\n      dup2\n        /* \"#utility.yul\":1381:1383   */\n      0x17\n        /* \"#utility.yul\":1376:1379   */\n      dup6\n        /* \"#utility.yul\":1372:1384   */\n      add\n        /* \"#utility.yul\":1365:1369   */\n      0x20\n        /* \"#utility.yul\":1357:1363   */\n      dup9\n        /* \"#utility.yul\":1353:1370   */\n      add\n        /* \"#utility.yul\":1331:1393   */\n      tag_131\n      jump\t// in\n    tag_130:\n      shl(0x7d, 0x01034b99036b4b9b9b4b733903937b6329)\n        /* \"#utility.yul\":1452:1454   */\n      0x17\n        /* \"#utility.yul\":1412:1428   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":1444:1455   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":1437:1477   */\n      mstore\n        /* \"#utility.yul\":1502:1515   */\n      dup4\n      mload\n        /* \"#utility.yul\":1524:1587   */\n      tag_132\n        /* \"#utility.yul\":1502:1515   */\n      dup2\n        /* \"#utility.yul\":1573:1575   */\n      0x28\n        /* \"#utility.yul\":1565:1576   */\n      dup5\n      add\n        /* \"#utility.yul\":1558:1562   */\n      0x20\n        /* \"#utility.yul\":1546:1563   */\n      dup9\n      add\n        /* \"#utility.yul\":1524:1587   */\n      tag_131\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":1607:1624   */\n      add\n        /* \"#utility.yul\":1626:1628   */\n      0x28\n        /* \"#utility.yul\":1603:1629   */\n      add\n      swap5\n        /* \"#utility.yul\":849:1635   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2014:2397   */\n    tag_83:\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2152:2161   */\n      dup2\n        /* \"#utility.yul\":2145:2166   */\n      mstore\n        /* \"#utility.yul\":2126:2130   */\n      0x00\n        /* \"#utility.yul\":2195:2201   */\n      dup3\n        /* \"#utility.yul\":2189:2202   */\n      mload\n        /* \"#utility.yul\":2238:2244   */\n      dup1\n        /* \"#utility.yul\":2233:2235   */\n      0x20\n        /* \"#utility.yul\":2222:2231   */\n      dup5\n        /* \"#utility.yul\":2218:2236   */\n      add\n        /* \"#utility.yul\":2211:2245   */\n      mstore\n        /* \"#utility.yul\":2254:2320   */\n      tag_136\n        /* \"#utility.yul\":2313:2319   */\n      dup2\n        /* \"#utility.yul\":2308:2310   */\n      0x40\n        /* \"#utility.yul\":2297:2306   */\n      dup6\n        /* \"#utility.yul\":2293:2311   */\n      add\n        /* \"#utility.yul\":2288:2290   */\n      0x20\n        /* \"#utility.yul\":2280:2286   */\n      dup8\n        /* \"#utility.yul\":2276:2291   */\n      add\n        /* \"#utility.yul\":2254:2320   */\n      tag_131\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2381:2383   */\n      0x1f\n        /* \"#utility.yul\":2360:2375   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2356:2385   */\n      and\n        /* \"#utility.yul\":2341:2386   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2388:2390   */\n      0x40\n        /* \"#utility.yul\":2337:2391   */\n      add\n      swap3\n        /* \"#utility.yul\":2014:2397   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3179:3307   */\n    tag_96:\n        /* \"#utility.yul\":3219:3222   */\n      0x00\n        /* \"#utility.yul\":3250:3251   */\n      dup3\n        /* \"#utility.yul\":3246:3252   */\n      not\n        /* \"#utility.yul\":3243:3244   */\n      dup3\n        /* \"#utility.yul\":3240:3253   */\n      gt\n        /* \"#utility.yul\":3237:3276   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":3256:3274   */\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      pop\n        /* \"#utility.yul\":3292:3301   */\n      add\n      swap1\n        /* \"#utility.yul\":3179:3307   */\n      jump\t// out\n        /* \"#utility.yul\":3312:3480   */\n    tag_94:\n        /* \"#utility.yul\":3352:3359   */\n      0x00\n        /* \"#utility.yul\":3418:3419   */\n      dup2\n        /* \"#utility.yul\":3414:3415   */\n      0x00\n        /* \"#utility.yul\":3410:3416   */\n      not\n        /* \"#utility.yul\":3406:3420   */\n      div\n        /* \"#utility.yul\":3403:3404   */\n      dup4\n        /* \"#utility.yul\":3400:3421   */\n      gt\n        /* \"#utility.yul\":3395:3396   */\n      dup3\n        /* \"#utility.yul\":3388:3397   */\n      iszero\n        /* \"#utility.yul\":3381:3398   */\n      iszero\n        /* \"#utility.yul\":3377:3422   */\n      and\n        /* \"#utility.yul\":3374:3445   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":3425:3443   */\n      tag_145\n      tag_142\n      jump\t// in\n    tag_145:\n      pop\n        /* \"#utility.yul\":3465:3474   */\n      mul\n      swap1\n        /* \"#utility.yul\":3312:3480   */\n      jump\t// out\n        /* \"#utility.yul\":3485:3743   */\n    tag_131:\n        /* \"#utility.yul\":3557:3558   */\n      0x00\n        /* \"#utility.yul\":3567:3680   */\n    tag_147:\n        /* \"#utility.yul\":3581:3587   */\n      dup4\n        /* \"#utility.yul\":3578:3579   */\n      dup2\n        /* \"#utility.yul\":3575:3588   */\n      lt\n        /* \"#utility.yul\":3567:3680   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":3657:3668   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":3651:3669   */\n      mload\n        /* \"#utility.yul\":3638:3649   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":3631:3670   */\n      mstore\n        /* \"#utility.yul\":3603:3605   */\n      0x20\n        /* \"#utility.yul\":3596:3606   */\n      add\n        /* \"#utility.yul\":3567:3680   */\n      jump(tag_147)\n    tag_149:\n        /* \"#utility.yul\":3698:3704   */\n      dup4\n        /* \"#utility.yul\":3695:3696   */\n      dup2\n        /* \"#utility.yul\":3692:3705   */\n      gt\n        /* \"#utility.yul\":3689:3737   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":3733:3734   */\n      0x00\n        /* \"#utility.yul\":3724:3730   */\n      dup5\n        /* \"#utility.yul\":3719:3722   */\n      dup5\n        /* \"#utility.yul\":3715:3731   */\n      add\n        /* \"#utility.yul\":3708:3735   */\n      mstore\n        /* \"#utility.yul\":3689:3737   */\n    tag_150:\n      pop\n        /* \"#utility.yul\":3485:3743   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3748:3884   */\n    tag_116:\n        /* \"#utility.yul\":3787:3790   */\n      0x00\n        /* \"#utility.yul\":3815:3820   */\n      dup2\n        /* \"#utility.yul\":3805:3844   */\n      tag_153\n      jumpi\n        /* \"#utility.yul\":3824:3842   */\n      tag_153\n      tag_142\n      jump\t// in\n    tag_153:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":3860:3878   */\n      add\n      swap1\n        /* \"#utility.yul\":3748:3884   */\n      jump\t// out\n        /* \"#utility.yul\":3889:4016   */\n    tag_142:\n        /* \"#utility.yul\":3950:3960   */\n      0x4e487b71\n        /* \"#utility.yul\":3945:3948   */\n      0xe0\n        /* \"#utility.yul\":3941:3961   */\n      shl\n        /* \"#utility.yul\":3938:3939   */\n      0x00\n        /* \"#utility.yul\":3931:3962   */\n      mstore\n        /* \"#utility.yul\":3981:3985   */\n      0x11\n        /* \"#utility.yul\":3978:3979   */\n      0x04\n        /* \"#utility.yul\":3971:3986   */\n      mstore\n        /* \"#utility.yul\":4005:4009   */\n      0x24\n        /* \"#utility.yul\":4002:4003   */\n      0x00\n        /* \"#utility.yul\":3995:4010   */\n      revert\n        /* \"#utility.yul\":4021:4148   */\n    tag_103:\n        /* \"#utility.yul\":4082:4092   */\n      0x4e487b71\n        /* \"#utility.yul\":4077:4080   */\n      0xe0\n        /* \"#utility.yul\":4073:4093   */\n      shl\n        /* \"#utility.yul\":4070:4071   */\n      0x00\n        /* \"#utility.yul\":4063:4094   */\n      mstore\n        /* \"#utility.yul\":4113:4117   */\n      0x32\n        /* \"#utility.yul\":4110:4111   */\n      0x04\n        /* \"#utility.yul\":4103:4118   */\n      mstore\n        /* \"#utility.yul\":4137:4141   */\n      0x24\n        /* \"#utility.yul\":4134:4135   */\n      0x00\n        /* \"#utility.yul\":4127:4142   */\n      revert\n        /* \"#utility.yul\":4153:4280   */\n    tag_99:\n        /* \"#utility.yul\":4214:4224   */\n      0x4e487b71\n        /* \"#utility.yul\":4209:4212   */\n      0xe0\n        /* \"#utility.yul\":4205:4225   */\n      shl\n        /* \"#utility.yul\":4202:4203   */\n      0x00\n        /* \"#utility.yul\":4195:4226   */\n      mstore\n        /* \"#utility.yul\":4245:4249   */\n      0x41\n        /* \"#utility.yul\":4242:4243   */\n      0x04\n        /* \"#utility.yul\":4235:4250   */\n      mstore\n        /* \"#utility.yul\":4269:4273   */\n      0x24\n        /* \"#utility.yul\":4266:4267   */\n      0x00\n        /* \"#utility.yul\":4259:4274   */\n      revert\n\n    auxdata: 0xa26469706673582212201ec1ffa33e83fb7ac6dc085d5f751759420900738bb48d448dfe8d993262e8e664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2322": {
									"entryPoint": null,
									"id": 2322,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_2267": {
									"entryPoint": 89,
									"id": 2267,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setupRole_2208": {
									"entryPoint": 75,
									"id": 2208,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_2073": {
									"entryPoint": null,
									"id": 2073,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061001c60003361004b565b6100467ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc93361004b565b6100f7565b6100558282610059565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16610055576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556100b33390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6107a4806101066000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806391d148541161005b57806391d148541461010e578063a217fddf14610121578063d539139314610129578063d547741f1461015057600080fd5b806301ffc9a71461008d578063248a9ca3146100b55780632f2ff15d146100e657806336568abe146100fb575b600080fd5b6100a061009b3660046105dc565b610163565b60405190151581526020015b60405180910390f35b6100d86100c3366004610587565b60009081526020819052604090206001015490565b6040519081526020016100ac565b6100f96100f43660046105a0565b61019a565b005b6100f96101093660046105a0565b6101c5565b6100a061011c3660046105a0565b610248565b6100d8600081565b6100d87ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc981565b6100f961015e3660046105a0565b610271565b60006001600160e01b03198216637965db0b60e01b148061019457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000828152602081905260409020600101546101b68133610297565b6101c083836102fb565b505050565b6001600160a01b038116331461023a5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b610244828261037f565b5050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60008281526020819052604090206001015461028d8133610297565b6101c0838361037f565b6102a18282610248565b610244576102b9816001600160a01b031660146103e4565b6102c48360206103e4565b6040516020016102d5929190610606565b60408051601f198184030181529082905262461bcd60e51b82526102319160040161067b565b6103058282610248565b610244576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561033b3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6103898282610248565b15610244576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b606060006103f38360026106c6565b6103fe9060026106ae565b67ffffffffffffffff81111561041657610416610758565b6040519080825280601f01601f191660200182016040528015610440576020820181803683370190505b509050600360fc1b8160008151811061045b5761045b610742565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061048a5761048a610742565b60200101906001600160f81b031916908160001a90535060006104ae8460026106c6565b6104b99060016106ae565b90505b6001811115610531576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106104ed576104ed610742565b1a60f81b82828151811061050357610503610742565b60200101906001600160f81b031916908160001a90535060049490941c9361052a81610715565b90506104bc565b5083156105805760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610231565b9392505050565b60006020828403121561059957600080fd5b5035919050565b600080604083850312156105b357600080fd5b8235915060208301356001600160a01b03811681146105d157600080fd5b809150509250929050565b6000602082840312156105ee57600080fd5b81356001600160e01b03198116811461058057600080fd5b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161063e8160178501602088016106e5565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161066f8160288401602088016106e5565b01602801949350505050565b602081526000825180602084015261069a8160408501602087016106e5565b601f01601f19169190910160400192915050565b600082198211156106c1576106c161072c565b500190565b60008160001904831182151516156106e0576106e061072c565b500290565b60005b838110156107005781810151838201526020016106e8565b8381111561070f576000848401525b50505050565b6000816107245761072461072c565b506000190190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212201ec1ffa33e83fb7ac6dc085d5f751759420900738bb48d448dfe8d993262e8e664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C PUSH1 0x0 CALLER PUSH2 0x4B JUMP JUMPDEST PUSH2 0x46 PUSH32 0xF0887BA65EE2024EA881D91B74C2450EF19E1557F03BED3EA9F16B037CBE2DC9 CALLER PUSH2 0x4B JUMP JUMPDEST PUSH2 0xF7 JUMP JUMPDEST PUSH2 0x55 DUP3 DUP3 PUSH2 0x59 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x55 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xB3 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x7A4 DUP1 PUSH2 0x106 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0xFB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0x587 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAC JUMP JUMPDEST PUSH2 0xF9 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x19A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF9 PUSH2 0x109 CALLDATASIZE PUSH1 0x4 PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x1C5 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x11C CALLDATASIZE PUSH1 0x4 PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST PUSH2 0xD8 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0xD8 PUSH32 0xF0887BA65EE2024EA881D91B74C2450EF19E1557F03BED3EA9F16B037CBE2DC9 DUP2 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x194 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1B6 DUP2 CALLER PUSH2 0x297 JUMP JUMPDEST PUSH2 0x1C0 DUP4 DUP4 PUSH2 0x2FB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x23A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x244 DUP3 DUP3 PUSH2 0x37F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x28D DUP2 CALLER PUSH2 0x297 JUMP JUMPDEST PUSH2 0x1C0 DUP4 DUP4 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x2A1 DUP3 DUP3 PUSH2 0x248 JUMP JUMPDEST PUSH2 0x244 JUMPI PUSH2 0x2B9 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x3E4 JUMP JUMPDEST PUSH2 0x2C4 DUP4 PUSH1 0x20 PUSH2 0x3E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2D5 SWAP3 SWAP2 SWAP1 PUSH2 0x606 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x231 SWAP2 PUSH1 0x4 ADD PUSH2 0x67B JUMP JUMPDEST PUSH2 0x305 DUP3 DUP3 PUSH2 0x248 JUMP JUMPDEST PUSH2 0x244 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x33B CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x389 DUP3 DUP3 PUSH2 0x248 JUMP JUMPDEST ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3F3 DUP4 PUSH1 0x2 PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0x3FE SWAP1 PUSH1 0x2 PUSH2 0x6AE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x416 JUMPI PUSH2 0x416 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x440 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x45B JUMPI PUSH2 0x45B PUSH2 0x742 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x48A JUMPI PUSH2 0x48A PUSH2 0x742 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x4AE DUP5 PUSH1 0x2 PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0x4B9 SWAP1 PUSH1 0x1 PUSH2 0x6AE JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x531 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x4ED JUMPI PUSH2 0x4ED PUSH2 0x742 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x503 JUMPI PUSH2 0x503 PUSH2 0x742 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x52A DUP2 PUSH2 0x715 JUMP JUMPDEST SWAP1 POP PUSH2 0x4BC JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x231 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x599 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x63E DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x6E5 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x66F DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x6E5 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x69A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x6C1 JUMPI PUSH2 0x6C1 PUSH2 0x72C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x6E0 JUMPI PUSH2 0x6E0 PUSH2 0x72C JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x700 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x6E8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x70F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x724 JUMPI PUSH2 0x724 PUSH2 0x72C JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xC1 SELFDESTRUCT LOG3 RETURNDATACOPY DUP4 0xFB PUSH27 0xC6DC085D5F751759420900738BB48D448DFE8D993262E8E664736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "59140:406:0:-:0;;;59242:122;;;;;;;;;-1:-1:-1;59266:44:0;53806:4;4164:10;59266;:44::i;:::-;59320:37;59216:19;4164:10;59266;:44::i;59320:37::-;59140:406;;58131:110;58209:25;58220:4;58226:7;58209:10;:25::i;:::-;58131:110;;:::o;58619:224::-;54821:4;54848:12;;;;;;;;;;;-1:-1:-1;;;;;54848:29:0;;;;;;;;;;;;58688:149;;58731:6;:12;;;;;;;;;;;-1:-1:-1;;;;;58731:29:0;;;;;;;;;:36;;-1:-1:-1;;58731:36:0;58763:4;58731:36;;;58813:12;4164:10;;4085:96;58813:12;-1:-1:-1;;;;;58786:40:0;58804:7;-1:-1:-1;;;;;58786:40:0;58798:4;58786:40;;;;;;;;;;58619:224;;:::o;59140:406::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_2019": {
									"entryPoint": null,
									"id": 2019,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_2306": {
									"entryPoint": null,
									"id": 2306,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_2116": {
									"entryPoint": 663,
									"id": 2116,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_2267": {
									"entryPoint": 763,
									"id": 2267,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_2297": {
									"entryPoint": 895,
									"id": 2297,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getRoleAdmin_2131": {
									"entryPoint": null,
									"id": 2131,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_2151": {
									"entryPoint": 410,
									"id": 2151,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_2073": {
									"entryPoint": 584,
									"id": 2073,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceRole_2194": {
									"entryPoint": 453,
									"id": 2194,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_2171": {
									"entryPoint": 625,
									"id": 2171,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1113": {
									"entryPoint": null,
									"id": 1113,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2054": {
									"entryPoint": 355,
									"id": 2054,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_1995": {
									"entryPoint": 996,
									"id": 1995,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 1415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 1440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 1500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1542,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 1765,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 1813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1836,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1858,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1880,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4282:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "286:267:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "332:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "341:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "344:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "334:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "334:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "334:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "307:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "316:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "303:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "303:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "328:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "299:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "299:32:1"
															},
															"nodeType": "YulIf",
															"src": "296:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "357:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "380:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "367:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "367:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "357:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "399:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "429:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "440:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "425:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "425:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "412:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "412:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "403:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "507:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "516:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "519:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "509:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "509:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "509:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "466:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "477:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "492:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "497:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "488:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "488:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "501:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "484:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "484:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "473:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "473:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "463:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "456:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "456:50:1"
															},
															"nodeType": "YulIf",
															"src": "453:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "532:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "542:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "532:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "244:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "255:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "267:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "275:6:1",
														"type": ""
													}
												],
												"src": "199:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "627:217:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "673:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "682:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "685:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "675:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "675:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "675:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "648:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "657:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "644:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "644:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "669:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "640:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "640:32:1"
															},
															"nodeType": "YulIf",
															"src": "637:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "698:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "724:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "711:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "711:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "702:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "756:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "767:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "778:3:1",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "783:10:1",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "774:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "774:20:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "763:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "763:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "753:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "753:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "746:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "746:51:1"
															},
															"nodeType": "YulIf",
															"src": "743:71:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "833:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "593:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "604:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "616:6:1",
														"type": ""
													}
												],
												"src": "558:286:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1238:397:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1255:3:1"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1260:25:1",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1248:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1248:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1248:38:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1295:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1315:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1309:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1299:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1365:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1353:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1353:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1376:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1381:2:1",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1372:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1372:12:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1386:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1331:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1331:62:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1402:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1416:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1421:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:16:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1406:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1448:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1452:2:1",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1444:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1444:11:1"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1457:19:1",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1437:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1437:40:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1486:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1508:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1502:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1502:13:1"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "1490:8:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1550:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1558:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1546:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1569:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1573:2:1",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1565:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1565:11:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "1578:8:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1524:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1524:63:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1524:63:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1596:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1611:2:1"
																			},
																			{
																				"name": "length_1",
																				"nodeType": "YulIdentifier",
																				"src": "1615:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1607:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1607:17:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1626:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1603:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1603:26:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1596:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1206:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1211:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1219:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1230:3:1",
														"type": ""
													}
												],
												"src": "849:786:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1735:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1745:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1757:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1768:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1753:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1753:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1745:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1787:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1812:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1805:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1805:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1798:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1798:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1780:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1780:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1780:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1704:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1715:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1726:4:1",
														"type": ""
													}
												],
												"src": "1640:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1933:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1943:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1955:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1966:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1951:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1951:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1943:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1985:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1996:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1978:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1978:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1978:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1902:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1913:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1924:4:1",
														"type": ""
													}
												],
												"src": "1832:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2135:262:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2152:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2163:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2145:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2145:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2145:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2175:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2195:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2189:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2189:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2179:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2222:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2233:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2218:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2218:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2238:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2211:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2211:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2280:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2288:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2276:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2297:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2308:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2293:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2293:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2313:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2254:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2254:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2254:66:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2329:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2345:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2364:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2372:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2360:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2360:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2381:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2377:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2377:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2356:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2356:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2341:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2341:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2388:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2337:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2337:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2329:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2126:4:1",
														"type": ""
													}
												],
												"src": "2014:383:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2576:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2593:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2604:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2586:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2586:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2586:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2627:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2638:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2623:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2623:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2643:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2616:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2616:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2616:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2666:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2677:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2662:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2662:18:1"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2682:34:1",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2655:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2655:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2655:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2726:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2738:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2749:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2734:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2734:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2726:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2553:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2567:4:1",
														"type": ""
													}
												],
												"src": "2402:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2937:237:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2954:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2965:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2947:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2947:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2947:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2988:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2999:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2984:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2984:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3004:2:1",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2977:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2977:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2977:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3027:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3038:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3023:18:1"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3043:34:1",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3016:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3016:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3016:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3098:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3109:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3094:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3094:18:1"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3114:17:1",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3087:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3087:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3087:45:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3141:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3153:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3164:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3149:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3149:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3141:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2914:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2928:4:1",
														"type": ""
													}
												],
												"src": "2763:411:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3227:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3254:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3256:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3256:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3256:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3243:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3250:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3246:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3246:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3240:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3240:13:1"
															},
															"nodeType": "YulIf",
															"src": "3237:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3285:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3296:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3299:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3285:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3210:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3213:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3219:3:1",
														"type": ""
													}
												],
												"src": "3179:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3364:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3423:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3425:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3425:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3425:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3395:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3388:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3388:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3381:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3381:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3403:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3414:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3410:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3410:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3418:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "3406:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3406:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3400:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3400:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3377:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3377:45:1"
															},
															"nodeType": "YulIf",
															"src": "3374:71:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3454:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3469:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3472:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3465:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3465:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3454:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3343:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3346:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3352:7:1",
														"type": ""
													}
												],
												"src": "3312:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3538:205:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3548:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3557:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3552:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3617:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3642:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3647:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3638:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3638:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "3661:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3666:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3657:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3657:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3651:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3651:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3631:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3631:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3631:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3578:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3581:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3575:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3575:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3589:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3591:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3600:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3603:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3596:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3596:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3591:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3571:3:1",
																"statements": []
															},
															"src": "3567:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3706:31:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3719:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "3724:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3715:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3715:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3733:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3708:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3708:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3708:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3695:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3698:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3692:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3692:13:1"
															},
															"nodeType": "YulIf",
															"src": "3689:48:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3516:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3521:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3526:6:1",
														"type": ""
													}
												],
												"src": "3485:258:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3795:89:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3822:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3824:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3824:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3824:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3815:5:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3808:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3808:13:1"
															},
															"nodeType": "YulIf",
															"src": "3805:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3853:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3864:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3875:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3871:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3871:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3860:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:18:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3853:3:1"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3777:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3787:3:1",
														"type": ""
													}
												],
												"src": "3748:136:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3921:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3938:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3945:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3950:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3941:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3941:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3931:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3931:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3931:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3978:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3971:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3971:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4002:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4005:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3995:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3995:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3995:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3889:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4053:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4070:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4077:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4082:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4073:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4073:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4063:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4063:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4063:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4110:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4113:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4103:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4103:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4134:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4137:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4127:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4127:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4127:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "4021:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4185:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4202:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4209:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4214:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4205:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4205:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4195:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4195:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4195:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4242:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4235:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4235:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4235:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4266:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4269:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4259:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4259:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4259:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "4153:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c806391d148541161005b57806391d148541461010e578063a217fddf14610121578063d539139314610129578063d547741f1461015057600080fd5b806301ffc9a71461008d578063248a9ca3146100b55780632f2ff15d146100e657806336568abe146100fb575b600080fd5b6100a061009b3660046105dc565b610163565b60405190151581526020015b60405180910390f35b6100d86100c3366004610587565b60009081526020819052604090206001015490565b6040519081526020016100ac565b6100f96100f43660046105a0565b61019a565b005b6100f96101093660046105a0565b6101c5565b6100a061011c3660046105a0565b610248565b6100d8600081565b6100d87ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc981565b6100f961015e3660046105a0565b610271565b60006001600160e01b03198216637965db0b60e01b148061019457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000828152602081905260409020600101546101b68133610297565b6101c083836102fb565b505050565b6001600160a01b038116331461023a5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b610244828261037f565b5050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60008281526020819052604090206001015461028d8133610297565b6101c0838361037f565b6102a18282610248565b610244576102b9816001600160a01b031660146103e4565b6102c48360206103e4565b6040516020016102d5929190610606565b60408051601f198184030181529082905262461bcd60e51b82526102319160040161067b565b6103058282610248565b610244576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561033b3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6103898282610248565b15610244576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b606060006103f38360026106c6565b6103fe9060026106ae565b67ffffffffffffffff81111561041657610416610758565b6040519080825280601f01601f191660200182016040528015610440576020820181803683370190505b509050600360fc1b8160008151811061045b5761045b610742565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061048a5761048a610742565b60200101906001600160f81b031916908160001a90535060006104ae8460026106c6565b6104b99060016106ae565b90505b6001811115610531576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106104ed576104ed610742565b1a60f81b82828151811061050357610503610742565b60200101906001600160f81b031916908160001a90535060049490941c9361052a81610715565b90506104bc565b5083156105805760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610231565b9392505050565b60006020828403121561059957600080fd5b5035919050565b600080604083850312156105b357600080fd5b8235915060208301356001600160a01b03811681146105d157600080fd5b809150509250929050565b6000602082840312156105ee57600080fd5b81356001600160e01b03198116811461058057600080fd5b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161063e8160178501602088016106e5565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161066f8160288401602088016106e5565b01602801949350505050565b602081526000825180602084015261069a8160408501602087016106e5565b601f01601f19169190910160400192915050565b600082198211156106c1576106c161072c565b500190565b60008160001904831182151516156106e0576106e061072c565b500290565b60005b838110156107005781810151838201526020016106e8565b8381111561070f576000848401525b50505050565b6000816107245761072461072c565b506000190190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212201ec1ffa33e83fb7ac6dc085d5f751759420900738bb48d448dfe8d993262e8e664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0xFB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0x587 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAC JUMP JUMPDEST PUSH2 0xF9 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x19A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF9 PUSH2 0x109 CALLDATASIZE PUSH1 0x4 PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x1C5 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x11C CALLDATASIZE PUSH1 0x4 PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST PUSH2 0xD8 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0xD8 PUSH32 0xF0887BA65EE2024EA881D91B74C2450EF19E1557F03BED3EA9F16B037CBE2DC9 DUP2 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x194 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1B6 DUP2 CALLER PUSH2 0x297 JUMP JUMPDEST PUSH2 0x1C0 DUP4 DUP4 PUSH2 0x2FB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x23A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x244 DUP3 DUP3 PUSH2 0x37F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x28D DUP2 CALLER PUSH2 0x297 JUMP JUMPDEST PUSH2 0x1C0 DUP4 DUP4 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x2A1 DUP3 DUP3 PUSH2 0x248 JUMP JUMPDEST PUSH2 0x244 JUMPI PUSH2 0x2B9 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x3E4 JUMP JUMPDEST PUSH2 0x2C4 DUP4 PUSH1 0x20 PUSH2 0x3E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2D5 SWAP3 SWAP2 SWAP1 PUSH2 0x606 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x231 SWAP2 PUSH1 0x4 ADD PUSH2 0x67B JUMP JUMPDEST PUSH2 0x305 DUP3 DUP3 PUSH2 0x248 JUMP JUMPDEST PUSH2 0x244 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x33B CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x389 DUP3 DUP3 PUSH2 0x248 JUMP JUMPDEST ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3F3 DUP4 PUSH1 0x2 PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0x3FE SWAP1 PUSH1 0x2 PUSH2 0x6AE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x416 JUMPI PUSH2 0x416 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x440 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x45B JUMPI PUSH2 0x45B PUSH2 0x742 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x48A JUMPI PUSH2 0x48A PUSH2 0x742 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x4AE DUP5 PUSH1 0x2 PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0x4B9 SWAP1 PUSH1 0x1 PUSH2 0x6AE JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x531 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x4ED JUMPI PUSH2 0x4ED PUSH2 0x742 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x503 JUMPI PUSH2 0x503 PUSH2 0x742 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x52A DUP2 PUSH2 0x715 JUMP JUMPDEST SWAP1 POP PUSH2 0x4BC JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x231 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x599 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x63E DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x6E5 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x66F DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x6E5 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x69A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x6C1 JUMPI PUSH2 0x6C1 PUSH2 0x72C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x6E0 JUMPI PUSH2 0x6E0 PUSH2 0x72C JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x700 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x6E8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x70F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x724 JUMPI PUSH2 0x724 PUSH2 0x72C JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xC1 SELFDESTRUCT LOG3 RETURNDATACOPY DUP4 0xFB PUSH27 0xC6DC085D5F751759420900738BB48D448DFE8D993262E8E664736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "59140:406:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54354:270;;;;;;:::i;:::-;;:::i;:::-;;;1805:14:1;;1798:22;1780:41;;1768:2;1753:18;54354:270:0;;;;;;;;55830:121;;;;;;:::i;:::-;55896:7;55922:12;;;;;;;;;;:22;;;;55830:121;;;;1978:25:1;;;1966:2;1951:18;55830:121:0;1832:177:1;56201:181:0;;;;;;:::i;:::-;;:::i;:::-;;57290:276;;;;;;:::i;:::-;;:::i;54711:173::-;;;;;;:::i;:::-;;:::i;53761:49::-;;53806:4;53761:49;;59178:57;;59216:19;59178:57;;56616:183;;;;;;:::i;:::-;;:::i;54354:270::-;54479:4;-1:-1:-1;;;;;;54518:47:0;;-1:-1:-1;;;54518:47:0;;:99;;-1:-1:-1;;;;;;;;;;28589:40:0;;;54581:36;54499:118;54354:270;-1:-1:-1;;54354:270:0:o;56201:181::-;55896:7;55922:12;;;;;;;;;;:22;;;54239:30;54250:4;4164:10;54239;:30::i;:::-;56350:25:::1;56361:4;56367:7;56350:10;:25::i;:::-;56201:181:::0;;;:::o;57290:276::-;-1:-1:-1;;;;;57426:23:0;;4164:10;57426:23;57405:117;;;;-1:-1:-1;;;57405:117:0;;2965:2:1;57405:117:0;;;2947:21:1;3004:2;2984:18;;;2977:30;3043:34;3023:18;;;3016:62;-1:-1:-1;;;3094:18:1;;;3087:45;3149:19;;57405:117:0;;;;;;;;;57533:26;57545:4;57551:7;57533:11;:26::i;:::-;57290:276;;:::o;54711:173::-;54821:4;54848:12;;;;;;;;;;;-1:-1:-1;;;;;54848:29:0;;;;;;;;;;;;;;;54711:173::o;56616:183::-;55896:7;55922:12;;;;;;;;;;:22;;;54239:30;54250:4;4164:10;54239;:30::i;:::-;56766:26:::1;56778:4;56784:7;56766:11;:26::i;55165:484::-:0;55245:22;55253:4;55259:7;55245;:22::i;:::-;55240:403;;55428:41;55456:7;-1:-1:-1;;;;;55428:41:0;55466:2;55428:19;:41::i;:::-;55540:38;55568:4;55575:2;55540:19;:38::i;:::-;55335:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;55335:265:0;;;;;;;;;;-1:-1:-1;;;55283:349:0;;;;;;;:::i;58619:224::-;58693:22;58701:4;58707:7;58693;:22::i;:::-;58688:149;;58731:6;:12;;;;;;;;;;;-1:-1:-1;;;;;58731:29:0;;;;;;;;;:36;;-1:-1:-1;;58731:36:0;58763:4;58731:36;;;58813:12;4164:10;;4085:96;58813:12;-1:-1:-1;;;;;58786:40:0;58804:7;-1:-1:-1;;;;;58786:40:0;58798:4;58786:40;;;;;;;;;;58619:224;;:::o;58849:225::-;58923:22;58931:4;58937:7;58923;:22::i;:::-;58919:149;;;58993:5;58961:12;;;;;;;;;;;-1:-1:-1;;;;;58961:29:0;;;;;;;;;;:37;;-1:-1:-1;;58961:37:0;;;59017:40;4164:10;;58961:12;;59017:40;;58993:5;59017:40;58849:225;;:::o;51448:469::-;51547:13;51576:19;51608:10;51612:6;51608:1;:10;:::i;:::-;:14;;51621:1;51608:14;:::i;:::-;51598:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;51598:25:0;;51576:47;;-1:-1:-1;;;51633:6:0;51640:1;51633:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;51633:15:0;;;;;;;;;-1:-1:-1;;;51658:6:0;51665:1;51658:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;51658:15:0;;;;;;;;-1:-1:-1;51688:9:0;51700:10;51704:6;51700:1;:10;:::i;:::-;:14;;51713:1;51700:14;:::i;:::-;51688:26;;51683:132;51720:1;51716;:5;51683:132;;;-1:-1:-1;;;51767:5:0;51775:3;51767:11;51754:25;;;;;;;:::i;:::-;;;;51742:6;51749:1;51742:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;51742:37:0;;;;;;;;-1:-1:-1;51803:1:0;51793:11;;;;;51723:3;;;:::i;:::-;;;51683:132;;;-1:-1:-1;51832:10:0;;51824:55;;;;-1:-1:-1;;;51824:55:0;;2604:2:1;51824:55:0;;;2586:21:1;;;2623:18;;;2616:30;2682:34;2662:18;;;2655:62;2734:18;;51824:55:0;2402:356:1;51824:55:0;51903:6;51448:469;-1:-1:-1;;;51448:469:0:o;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;199:354::-;267:6;275;328:2;316:9;307:7;303:23;299:32;296:52;;;344:1;341;334:12;296:52;367:23;;;-1:-1:-1;440:2:1;425:18;;412:32;-1:-1:-1;;;;;473:31:1;;463:42;;453:70;;519:1;516;509:12;453:70;542:5;532:15;;;199:354;;;;;:::o;558:286::-;616:6;669:2;657:9;648:7;644:23;640:32;637:52;;;685:1;682;675:12;637:52;711:23;;-1:-1:-1;;;;;;763:32:1;;753:43;;743:71;;810:1;807;800:12;849:786;1260:25;1255:3;1248:38;1230:3;1315:6;1309:13;1331:62;1386:6;1381:2;1376:3;1372:12;1365:4;1357:6;1353:17;1331:62;:::i;:::-;-1:-1:-1;;;1452:2:1;1412:16;;;1444:11;;;1437:40;1502:13;;1524:63;1502:13;1573:2;1565:11;;1558:4;1546:17;;1524:63;:::i;:::-;1607:17;1626:2;1603:26;;849:786;-1:-1:-1;;;;849:786:1:o;2014:383::-;2163:2;2152:9;2145:21;2126:4;2195:6;2189:13;2238:6;2233:2;2222:9;2218:18;2211:34;2254:66;2313:6;2308:2;2297:9;2293:18;2288:2;2280:6;2276:15;2254:66;:::i;:::-;2381:2;2360:15;-1:-1:-1;;2356:29:1;2341:45;;;;2388:2;2337:54;;2014:383;-1:-1:-1;;2014:383:1:o;3179:128::-;3219:3;3250:1;3246:6;3243:1;3240:13;3237:39;;;3256:18;;:::i;:::-;-1:-1:-1;3292:9:1;;3179:128::o;3312:168::-;3352:7;3418:1;3414;3410:6;3406:14;3403:1;3400:21;3395:1;3388:9;3381:17;3377:45;3374:71;;;3425:18;;:::i;:::-;-1:-1:-1;3465:9:1;;3312:168::o;3485:258::-;3557:1;3567:113;3581:6;3578:1;3575:13;3567:113;;;3657:11;;;3651:18;3638:11;;;3631:39;3603:2;3596:10;3567:113;;;3698:6;3695:1;3692:13;3689:48;;;3733:1;3724:6;3719:3;3715:16;3708:27;3689:48;;3485:258;;;:::o;3748:136::-;3787:3;3815:5;3805:39;;3824:18;;:::i;:::-;-1:-1:-1;;;3860:18:1;;3748:136::o;3889:127::-;3950:10;3945:3;3941:20;3938:1;3931:31;3981:4;3978:1;3971:15;4005:4;4002:1;3995:15;4021:127;4082:10;4077:3;4073:20;4070:1;4063:31;4113:4;4110:1;4103:15;4137:4;4134:1;4127:15;4153:127;4214:10;4209:3;4205:20;4202:1;4195:31;4245:4;4242:1;4235:15;4269:4;4266:1;4259:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "391200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "217",
								"MINTER_ROLE()": "239",
								"getRoleAdmin(bytes32)": "2470",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "2621",
								"renounceRole(bytes32,address)": "29032",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "427"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 59140,
									"end": 59546,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 59140,
									"end": 59546,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 59140,
									"end": 59546,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 59242,
									"end": 59364,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 59242,
									"end": 59364,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59242,
									"end": 59364,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 59242,
									"end": 59364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 59242,
									"end": 59364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 59242,
									"end": 59364,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59242,
									"end": 59364,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59242,
									"end": 59364,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 59242,
									"end": 59364,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 59242,
									"end": 59364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 59266,
									"end": 59310,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 53806,
									"end": 53810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4164,
									"end": 4174,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 59266,
									"end": 59276,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 59266,
									"end": 59310,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 59266,
									"end": 59310,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 59266,
									"end": 59310,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59320,
									"end": 59357,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 59216,
									"end": 59235,
									"name": "PUSH",
									"source": 0,
									"value": "F0887BA65EE2024EA881D91B74C2450EF19E1557F03BED3EA9F16B037CBE2DC9"
								},
								{
									"begin": 4164,
									"end": 4174,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 59266,
									"end": 59276,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 59266,
									"end": 59310,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 59320,
									"end": 59357,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 59320,
									"end": 59357,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59140,
									"end": 59546,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 59140,
									"end": 59546,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 58131,
									"end": 58241,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 58131,
									"end": 58241,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58209,
									"end": 58234,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 58220,
									"end": 58224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 58226,
									"end": 58233,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 58209,
									"end": 58219,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 58209,
									"end": 58234,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 58209,
									"end": 58234,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 58209,
									"end": 58234,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58131,
									"end": 58241,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58131,
									"end": 58241,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58131,
									"end": 58241,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 58619,
									"end": 58843,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 58619,
									"end": 58843,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 54821,
									"end": 54825,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 54848,
									"end": 54860,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54860,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54860,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54860,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 54848,
									"end": 54860,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54860,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54860,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54860,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 54848,
									"end": 54860,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54860,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54860,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 54848,
									"end": 54877,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54877,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54877,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54877,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54877,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54877,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54877,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54877,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54877,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54877,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 54848,
									"end": 54877,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 54848,
									"end": 54877,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 58688,
									"end": 58837,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 58688,
									"end": 58837,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58737,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58731,
									"end": 58743,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58743,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 58731,
									"end": 58743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58743,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58743,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58743,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58731,
									"end": 58743,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58743,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58743,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 58731,
									"end": 58760,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58760,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58760,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58760,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58760,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58760,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58760,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58760,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58760,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58767,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58767,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 58731,
									"end": 58767,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 58763,
									"end": 58767,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58731,
									"end": 58767,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58767,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 58731,
									"end": 58767,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 58813,
									"end": 58825,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 4164,
									"end": 4174,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 4164,
									"end": 4174,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4085,
									"end": 4181,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 58813,
									"end": 58825,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 58813,
									"end": 58825,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 58786,
									"end": 58826,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 58804,
									"end": 58811,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 58786,
									"end": 58826,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 58798,
									"end": 58802,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 58786,
									"end": 58826,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 58786,
									"end": 58826,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58786,
									"end": 58826,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 58786,
									"end": 58826,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58786,
									"end": 58826,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 58786,
									"end": 58826,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58786,
									"end": 58826,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 58786,
									"end": 58826,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 58786,
									"end": 58826,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 58786,
									"end": 58826,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 58619,
									"end": 58843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58619,
									"end": 58843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58619,
									"end": 58843,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 59140,
									"end": 59546,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 59140,
									"end": 59546,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59140,
									"end": 59546,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59140,
									"end": 59546,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59140,
									"end": 59546,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59140,
									"end": 59546,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59140,
									"end": 59546,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 59140,
									"end": 59546,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59140,
									"end": 59546,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201ec1ffa33e83fb7ac6dc085d5f751759420900738bb48d448dfe8d993262e8e664736f6c63430008070033",
									".code": [
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH",
											"source": 0,
											"value": "D5391393"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59546,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1819,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1820,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1821,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 1770,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1753,
											"end": 1771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55896,
											"end": 55903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55944,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55922,
											"end": 55944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55944,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1978,
											"end": 2003,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 2003,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 2003,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1966,
											"end": 1968,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 1969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 55830,
											"end": 55951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1832,
											"end": 2009,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53761,
											"end": 53810,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 53761,
											"end": 53810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53761,
											"end": 53810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 53806,
											"end": 53810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53761,
											"end": 53810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53761,
											"end": 53810,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59178,
											"end": 59235,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 59178,
											"end": 59235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59178,
											"end": 59235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 59216,
											"end": 59235,
											"name": "PUSH",
											"source": 0,
											"value": "F0887BA65EE2024EA881D91B74C2450EF19E1557F03BED3EA9F16B037CBE2DC9"
										},
										{
											"begin": 59178,
											"end": 59235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59178,
											"end": 59235,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54479,
											"end": 54483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 54518,
											"end": 54565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54518,
											"end": 54565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 54518,
											"end": 54565,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54518,
											"end": 54565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54518,
											"end": 54617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 54518,
											"end": 54617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28589,
											"end": 28629,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28589,
											"end": 28629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28589,
											"end": 28629,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54581,
											"end": 54617,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 54581,
											"end": 54617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54499,
											"end": 54617,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54354,
											"end": 54624,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55896,
											"end": 55903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55944,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55922,
											"end": 55944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55944,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54239,
											"end": 54269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 54250,
											"end": 54254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 54239,
											"end": 54249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 54239,
											"end": 54269,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54239,
											"end": 54269,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 54239,
											"end": 54269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56350,
											"end": 56375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 56361,
											"end": 56365,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56367,
											"end": 56374,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56350,
											"end": 56360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 56350,
											"end": 56375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56350,
											"end": 56375,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 56350,
											"end": 56375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56201,
											"end": 56382,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57426,
											"end": 57449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57426,
											"end": 57449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57426,
											"end": 57449,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2967,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "2F"
										},
										{
											"begin": 2984,
											"end": 3002,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2984,
											"end": 3002,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3002,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3007,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 3023,
											"end": 3041,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3023,
											"end": 3041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103937B632B9903337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3094,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3094,
											"end": 3112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3132,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3168,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3149,
											"end": 3168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 57405,
											"end": 57522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57533,
											"end": 57559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 57545,
											"end": 57549,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57551,
											"end": 57558,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57533,
											"end": 57544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 57533,
											"end": 57559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57533,
											"end": 57559,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 57533,
											"end": 57559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57290,
											"end": 57566,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54821,
											"end": 54825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54848,
											"end": 54860,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54860,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54848,
											"end": 54860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54860,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54848,
											"end": 54860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54860,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54860,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54711,
											"end": 54884,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 56616,
											"end": 56799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55896,
											"end": 55903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55934,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55944,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55922,
											"end": 55944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55922,
											"end": 55944,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54239,
											"end": 54269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 54250,
											"end": 54254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 54239,
											"end": 54249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 54239,
											"end": 54269,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54239,
											"end": 54269,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 54239,
											"end": 54269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56766,
											"end": 56792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 56778,
											"end": 56782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56784,
											"end": 56791,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56766,
											"end": 56777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 56766,
											"end": 56792,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55165,
											"end": 55649,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 55165,
											"end": 55649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55245,
											"end": 55267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 55253,
											"end": 55257,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55259,
											"end": 55266,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55245,
											"end": 55252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 55245,
											"end": 55267,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55245,
											"end": 55267,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 55245,
											"end": 55267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55240,
											"end": 55643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 55240,
											"end": 55643,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55428,
											"end": 55469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 55456,
											"end": 55463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55428,
											"end": 55469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55466,
											"end": 55468,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 55428,
											"end": 55447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 55428,
											"end": 55469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55428,
											"end": 55469,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 55428,
											"end": 55469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55540,
											"end": 55578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 55568,
											"end": 55572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55575,
											"end": 55577,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55540,
											"end": 55559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 55540,
											"end": 55578,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55540,
											"end": 55578,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 55540,
											"end": 55578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 55283,
											"end": 55632,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55283,
											"end": 55632,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55283,
											"end": 55632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 55283,
											"end": 55632,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55283,
											"end": 55632,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55283,
											"end": 55632,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55283,
											"end": 55632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 55283,
											"end": 55632,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58619,
											"end": 58843,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 58619,
											"end": 58843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58693,
											"end": 58715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 58701,
											"end": 58705,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58707,
											"end": 58714,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58693,
											"end": 58700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 58693,
											"end": 58715,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58693,
											"end": 58715,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 58693,
											"end": 58715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58688,
											"end": 58837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 58688,
											"end": 58837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58731,
											"end": 58743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58731,
											"end": 58743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58731,
											"end": 58743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58731,
											"end": 58760,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58760,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58760,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58760,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58760,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58760,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58760,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58767,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 58731,
											"end": 58767,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58763,
											"end": 58767,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58731,
											"end": 58767,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58731,
											"end": 58767,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 58813,
											"end": 58825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4085,
											"end": 4181,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58813,
											"end": 58825,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 58813,
											"end": 58825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58786,
											"end": 58826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58804,
											"end": 58811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58786,
											"end": 58826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58798,
											"end": 58802,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58786,
											"end": 58826,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 58786,
											"end": 58826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58786,
											"end": 58826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58786,
											"end": 58826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58786,
											"end": 58826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58786,
											"end": 58826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58786,
											"end": 58826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58786,
											"end": 58826,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58786,
											"end": 58826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58786,
											"end": 58826,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 58619,
											"end": 58843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58619,
											"end": 58843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58619,
											"end": 58843,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 58849,
											"end": 59074,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 58849,
											"end": 59074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58923,
											"end": 58945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 58931,
											"end": 58935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58937,
											"end": 58944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58923,
											"end": 58930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 58923,
											"end": 58945,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58923,
											"end": 58945,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 58923,
											"end": 58945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58919,
											"end": 59068,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58919,
											"end": 59068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 58919,
											"end": 59068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58993,
											"end": 58998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58961,
											"end": 58990,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58990,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58990,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58990,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58998,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 58961,
											"end": 58998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58998,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 59017,
											"end": 59057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58961,
											"end": 58973,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59017,
											"end": 59057,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 59017,
											"end": 59057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58993,
											"end": 58998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59017,
											"end": 59057,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 58849,
											"end": 59074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58849,
											"end": 59074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58849,
											"end": 59074,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 51448,
											"end": 51917,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 51448,
											"end": 51917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51547,
											"end": 51560,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 51576,
											"end": 51595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51608,
											"end": 51618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 51612,
											"end": 51618,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51608,
											"end": 51609,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 51608,
											"end": 51618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 51608,
											"end": 51618,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51608,
											"end": 51618,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 51608,
											"end": 51618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51608,
											"end": 51622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 51608,
											"end": 51622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51621,
											"end": 51622,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 51608,
											"end": 51622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 51608,
											"end": 51622,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51608,
											"end": 51622,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 51608,
											"end": 51622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51598,
											"end": 51623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51576,
											"end": 51623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51576,
											"end": 51623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51633,
											"end": 51639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51640,
											"end": 51641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51633,
											"end": 51648,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51633,
											"end": 51648,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51648,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 51633,
											"end": 51648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51658,
											"end": 51664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51665,
											"end": 51666,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51658,
											"end": 51673,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51673,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51658,
											"end": 51673,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51658,
											"end": 51673,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51688,
											"end": 51697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51700,
											"end": 51710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 51704,
											"end": 51710,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51700,
											"end": 51701,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 51700,
											"end": 51710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 51700,
											"end": 51710,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51700,
											"end": 51710,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 51700,
											"end": 51710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51700,
											"end": 51714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 51700,
											"end": 51714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51713,
											"end": 51714,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51700,
											"end": 51714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 51700,
											"end": 51714,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51700,
											"end": 51714,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 51700,
											"end": 51714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51688,
											"end": 51714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51688,
											"end": 51714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51683,
											"end": 51815,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 51683,
											"end": 51815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51720,
											"end": 51721,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51716,
											"end": 51717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51716,
											"end": 51721,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51683,
											"end": 51815,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51683,
											"end": 51815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 51683,
											"end": 51815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51767,
											"end": 51772,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 51775,
											"end": 51778,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 51767,
											"end": 51778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 51754,
											"end": 51779,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51748,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51749,
											"end": 51750,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51742,
											"end": 51779,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51742,
											"end": 51779,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51742,
											"end": 51779,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51803,
											"end": 51804,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51793,
											"end": 51804,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 51793,
											"end": 51804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51793,
											"end": 51804,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 51793,
											"end": 51804,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 51793,
											"end": 51804,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 51723,
											"end": 51726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 51723,
											"end": 51726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51723,
											"end": 51726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 51723,
											"end": 51726,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51723,
											"end": 51726,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 51723,
											"end": 51726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51723,
											"end": 51726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51723,
											"end": 51726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51683,
											"end": 51815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 51683,
											"end": 51815,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51683,
											"end": 51815,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 51683,
											"end": 51815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51832,
											"end": 51842,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51832,
											"end": 51842,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51824,
											"end": 51879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 51824,
											"end": 51879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51824,
											"end": 51879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51824,
											"end": 51879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51824,
											"end": 51879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51824,
											"end": 51879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 51824,
											"end": 51879,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51824,
											"end": 51879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51824,
											"end": 51879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2607,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2641,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2623,
											"end": 2641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2616,
											"end": 2646,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2682,
											"end": 2716,
											"name": "PUSH",
											"source": 1,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 2662,
											"end": 2680,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2662,
											"end": 2680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2734,
											"end": 2752,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2734,
											"end": 2752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51824,
											"end": 51879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2402,
											"end": 2758,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 51824,
											"end": 51879,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 51824,
											"end": 51879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51903,
											"end": 51909,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 51448,
											"end": 51917,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51448,
											"end": 51917,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 199,
											"end": 553,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 199,
											"end": 553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 267,
											"end": 273,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 328,
											"end": 330,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 307,
											"end": 314,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 303,
											"end": 326,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 299,
											"end": 331,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 296,
											"end": 348,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 296,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 296,
											"end": 348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 344,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 342,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 296,
											"end": 348,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 296,
											"end": 348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 367,
											"end": 390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 367,
											"end": 390,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 367,
											"end": 390,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 440,
											"end": 442,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 425,
											"end": 443,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 425,
											"end": 443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 412,
											"end": 444,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 473,
											"end": 504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 473,
											"end": 504,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 463,
											"end": 505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 463,
											"end": 505,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 453,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 453,
											"end": 523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 519,
											"end": 520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 509,
											"end": 521,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 453,
											"end": 523,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 453,
											"end": 523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 542,
											"end": 547,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 532,
											"end": 547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 532,
											"end": 547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 199,
											"end": 553,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 199,
											"end": 553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 199,
											"end": 553,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 199,
											"end": 553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 199,
											"end": 553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 199,
											"end": 553,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 558,
											"end": 844,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 558,
											"end": 844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 616,
											"end": 622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 669,
											"end": 671,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 657,
											"end": 666,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 655,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 644,
											"end": 667,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 640,
											"end": 672,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 637,
											"end": 689,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 637,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 637,
											"end": 689,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 685,
											"end": 686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 683,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 687,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 637,
											"end": 689,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 637,
											"end": 689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 711,
											"end": 734,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 734,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 763,
											"end": 795,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 763,
											"end": 795,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 753,
											"end": 796,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 753,
											"end": 796,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 743,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 743,
											"end": 814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 849,
											"end": 1635,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 849,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1260,
											"end": 1285,
											"name": "PUSH",
											"source": 1,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 1255,
											"end": 1258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1286,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1233,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1321,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1309,
											"end": 1322,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1386,
											"end": 1392,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1383,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1376,
											"end": 1379,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1369,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1357,
											"end": 1363,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1331,
											"end": 1393,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1331,
											"end": 1393,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1331,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1034B99036B4B9B9B4B733903937B6329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1452,
											"end": 1454,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1412,
											"end": 1428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1428,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1477,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1515,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1515,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1502,
											"end": 1515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1565,
											"end": 1576,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1576,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1546,
											"end": 1563,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1607,
											"end": 1624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1626,
											"end": 1628,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1603,
											"end": 1629,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1629,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 849,
											"end": 1635,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 849,
											"end": 1635,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2014,
											"end": 2397,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2014,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2152,
											"end": 2161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2201,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2202,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2235,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2222,
											"end": 2231,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2254,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2313,
											"end": 2319,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2310,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2297,
											"end": 2306,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2290,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2280,
											"end": 2286,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2291,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2254,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2254,
											"end": 2320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2254,
											"end": 2320,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2254,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2383,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2360,
											"end": 2375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2356,
											"end": 2385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2386,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2386,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2388,
											"end": 2390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2337,
											"end": 2391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2014,
											"end": 2397,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2014,
											"end": 2397,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3179,
											"end": 3307,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3179,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3222,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3251,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3252,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3243,
											"end": 3244,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3253,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3237,
											"end": 3276,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3237,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3237,
											"end": 3276,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3256,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3256,
											"end": 3274,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3256,
											"end": 3274,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3256,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3292,
											"end": 3301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3307,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3312,
											"end": 3480,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3312,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3418,
											"end": 3419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3416,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3420,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3404,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3421,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3396,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3397,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3398,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3422,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3445,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3374,
											"end": 3445,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3425,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3425,
											"end": 3443,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3425,
											"end": 3443,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3425,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3312,
											"end": 3480,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3485,
											"end": 3743,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3485,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3567,
											"end": 3680,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 3567,
											"end": 3680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3587,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3578,
											"end": 3579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3575,
											"end": 3588,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3680,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3567,
											"end": 3680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3651,
											"end": 3669,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3603,
											"end": 3605,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3596,
											"end": 3606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 3567,
											"end": 3680,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3680,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3567,
											"end": 3680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3704,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3696,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3692,
											"end": 3705,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3737,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 3689,
											"end": 3737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3724,
											"end": 3730,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3719,
											"end": 3722,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3715,
											"end": 3731,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3737,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 3689,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3743,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3748,
											"end": 3884,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3748,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3815,
											"end": 3820,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3824,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3824,
											"end": 3842,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3824,
											"end": 3842,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3824,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3860,
											"end": 3878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3878,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3748,
											"end": 3884,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3889,
											"end": 4016,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3889,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3950,
											"end": 3960,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3945,
											"end": 3948,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3941,
											"end": 3961,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3962,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3981,
											"end": 3985,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3978,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4005,
											"end": 4009,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4002,
											"end": 4003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4010,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4021,
											"end": 4148,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4021,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4092,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4077,
											"end": 4080,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4073,
											"end": 4093,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4063,
											"end": 4094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4113,
											"end": 4117,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4110,
											"end": 4111,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4103,
											"end": 4118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4141,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4134,
											"end": 4135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4153,
											"end": 4280,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4153,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4224,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4209,
											"end": 4212,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4205,
											"end": 4225,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4245,
											"end": 4249,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4242,
											"end": 4243,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4235,
											"end": 4250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4273,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4266,
											"end": 4267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4259,
											"end": 4274,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/powerful-erc20.sol\":\"Roles\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/powerful-erc20.sol\":{\"keccak256\":\"0x9570db30440d0d877f8e4b5076cb1328db2af6d84f27ae1a4cffc56db63172d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58817e6239d1d81a70605d4bbfc1ea495aadcb3b46647a2575aeb4484b0d60a3\",\"dweb:/ipfs/QmcWsNLsEniffCVQRHwMTN6Hf8VZmPLbCpdn8krRrrQn1M\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/powerful-erc20.sol\":50006:51919  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/powerful-erc20.sol\":50006:51919  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122020c68143b3e4a1535e1ceb3b0f0797e1b32528924702ac3e031dc12915accfd464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122020c68143b3e4a1535e1ceb3b0f0797e1b32528924702ac3e031dc12915accfd464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xC6 DUP2 NUMBER 0xB3 0xE4 LOG1 MSTORE8 0x5E SHR 0xEB EXTCODESIZE 0xF SMOD SWAP8 0xE1 0xB3 0x25 0x28 SWAP3 SELFBALANCE MUL 0xAC RETURNDATACOPY SUB SAR 0xC1 0x29 ISZERO 0xAC 0xCF 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "50006:1913:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;50006:1913:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122020c68143b3e4a1535e1ceb3b0f0797e1b32528924702ac3e031dc12915accfd464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xC6 DUP2 NUMBER 0xB3 0xE4 LOG1 MSTORE8 0x5E SHR 0xEB EXTCODESIZE 0xF SMOD SWAP8 0xE1 0xB3 0x25 0x28 SWAP3 SELFBALANCE MUL 0xAC RETURNDATACOPY SUB SAR 0xC1 0x29 ISZERO 0xAC 0xCF 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "50006:1913:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 50006,
									"end": 51919,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50006,
									"end": 51919,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122020c68143b3e4a1535e1ceb3b0f0797e1b32528924702ac3e031dc12915accfd464736f6c63430008070033",
									".code": [
										{
											"begin": 50006,
											"end": 51919,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 50006,
											"end": 51919,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 50006,
											"end": 51919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50006,
											"end": 51919,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 50006,
											"end": 51919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50006,
											"end": 51919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50006,
											"end": 51919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50006,
											"end": 51919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50006,
											"end": 51919,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/powerful-erc20.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/powerful-erc20.sol\":{\"keccak256\":\"0x9570db30440d0d877f8e4b5076cb1328db2af6d84f27ae1a4cffc56db63172d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58817e6239d1d81a70605d4bbfc1ea495aadcb3b46647a2575aeb4484b0d60a3\",\"dweb:/ipfs/QmcWsNLsEniffCVQRHwMTN6Hf8VZmPLbCpdn8krRrrQn1M\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TokenRecover": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "recoverERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Allows owner to recover any ERC20 sent into the contract",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"recoverERC20(address,uint256)": {
								"details": "Remember that only owner can call so be careful when use on contracts generated from other contracts.",
								"params": {
									"tokenAddress": "The token contract address",
									"tokenAmount": "Number of tokens to be sent"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "TokenRecover",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/powerful-erc20.sol\":44169:44634  contract TokenRecover is Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/powerful-erc20.sol\":42612:42635  _setOwner(_msgSender()) */\n  tag_4\n    /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n  caller\n    /* \"contracts/powerful-erc20.sol\":42612:42621  _setOwner */\n  tag_7\n    /* \"contracts/powerful-erc20.sol\":42612:42635  _setOwner(_msgSender()) */\n  jump\t// in\ntag_4:\n    /* \"contracts/powerful-erc20.sol\":44169:44634  contract TokenRecover is Ownable {... */\n  jump(tag_8)\n    /* \"contracts/powerful-erc20.sol\":43820:43989  function _setOwner(address newOwner) private {... */\ntag_7:\n    /* \"contracts/powerful-erc20.sol\":43875:43891  address oldOwner */\n  0x00\n    /* \"contracts/powerful-erc20.sol\":43894:43900  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/powerful-erc20.sol\":43910:43927  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"contracts/powerful-erc20.sol\":43942:43982  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/powerful-erc20.sol\":43894:43900  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"contracts/powerful-erc20.sol\":43942:43982  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"contracts/powerful-erc20.sol\":43875:43891  address oldOwner */\n  swap1\n    /* \"contracts/powerful-erc20.sol\":43942:43982  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/powerful-erc20.sol\":43865:43989  {... */\n  pop\n    /* \"contracts/powerful-erc20.sol\":43820:43989  function _setOwner(address newOwner) private {... */\n  pop\n  jump\t// out\n    /* \"contracts/powerful-erc20.sol\":44169:44634  contract TokenRecover is Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/powerful-erc20.sol\":44169:44634  contract TokenRecover is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8980f11f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/powerful-erc20.sol\":43350:43442  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/powerful-erc20.sol\":44446:44632  function recoverERC20(address tokenAddress, uint256 tokenAmount)... */\n    tag_4:\n      tag_7\n      tag_10\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":42718:42803  function owner() public view virtual returns (address) {... */\n    tag_5:\n        /* \"contracts/powerful-erc20.sol\":42764:42771  address */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":42790:42796  _owner */\n      sload\n        /* \"contracts/powerful-erc20.sol\":42718:42803  function owner() public view virtual returns (address) {... */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":42790:42796  _owner */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":1070:1121   */\n      dup3\n      mstore\n        /* \"contracts/powerful-erc20.sol\":42718:42803  function owner() public view virtual returns (address) {... */\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":1058:1060   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":42718:42803  function owner() public view virtual returns (address) {... */\n      add\n      swap1\n      return\n        /* \"contracts/powerful-erc20.sol\":43591:43814  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_6:\n      tag_7\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n        /* \"contracts/powerful-erc20.sol\":43350:43442  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n        /* \"contracts/powerful-erc20.sol\":42764:42771  address */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":42790:42796  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":42930:42953  owner() == _msgSender() */\n      eq\n        /* \"contracts/powerful-erc20.sol\":42922:42990  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_25\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_26\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_25:\n        /* \"contracts/powerful-erc20.sol\":43414:43435  _setOwner(address(0)) */\n      tag_29\n        /* \"contracts/powerful-erc20.sol\":43432:43433  0 */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":43414:43423  _setOwner */\n      tag_30\n        /* \"contracts/powerful-erc20.sol\":43414:43435  _setOwner(address(0)) */\n      jump\t// in\n    tag_29:\n        /* \"contracts/powerful-erc20.sol\":43350:43442  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":44446:44632  function recoverERC20(address tokenAddress, uint256 tokenAmount)... */\n    tag_12:\n        /* \"contracts/powerful-erc20.sol\":42764:42771  address */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":42790:42796  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":42930:42953  owner() == _msgSender() */\n      eq\n        /* \"contracts/powerful-erc20.sol\":42922:42990  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_34\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_26\n      swap1\n      tag_27\n      jump\t// in\n    tag_34:\n        /* \"contracts/powerful-erc20.sol\":44581:44593  tokenAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":44574:44603  IERC20(tokenAddress).transfer */\n      and\n      0xa9059cbb\n        /* \"contracts/powerful-erc20.sol\":44604:44611  owner() */\n      tag_37\n        /* \"contracts/powerful-erc20.sol\":42764:42771  address */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":42790:42796  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/powerful-erc20.sol\":42718:42803  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/powerful-erc20.sol\":44604:44611  owner() */\n    tag_37:\n        /* \"contracts/powerful-erc20.sol\":44574:44625  IERC20(tokenAddress).transfer(owner(), tokenAmount) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1324:1356   */\n      swap1\n      swap2\n      and\n        /* \"contracts/powerful-erc20.sol\":44574:44625  IERC20(tokenAddress).transfer(owner(), tokenAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1306:1357   */\n      mstore\n        /* \"#utility.yul\":1373:1391   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":1366:1400   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":1279:1297   */\n      0x44\n      add\n        /* \"contracts/powerful-erc20.sol\":44574:44625  IERC20(tokenAddress).transfer(owner(), tokenAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_42\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_42:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      pop\n        /* \"contracts/powerful-erc20.sol\":44446:44632  function recoverERC20(address tokenAddress, uint256 tokenAmount)... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":43591:43814  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n        /* \"contracts/powerful-erc20.sol\":42764:42771  address */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":42790:42796  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/powerful-erc20.sol\":4164:4174  msg.sender */\n      caller\n        /* \"contracts/powerful-erc20.sol\":42930:42953  owner() == _msgSender() */\n      eq\n        /* \"contracts/powerful-erc20.sol\":42922:42990  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_26\n      swap1\n      tag_27\n      jump\t// in\n    tag_49:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":43692:43714  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/powerful-erc20.sol\":43671:43778  require(... */\n      tag_52\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1613:1615   */\n      0x20\n        /* \"contracts/powerful-erc20.sol\":43671:43778  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1595:1616   */\n      mstore\n        /* \"#utility.yul\":1652:1654   */\n      0x26\n        /* \"#utility.yul\":1632:1650   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1625:1655   */\n      mstore\n        /* \"#utility.yul\":1691:1725   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":1671:1689   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1664:1726   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":1742:1760   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1735:1771   */\n      mstore\n        /* \"#utility.yul\":1788:1807   */\n      0x84\n      add\n        /* \"contracts/powerful-erc20.sol\":43671:43778  require(... */\n      tag_26\n        /* \"#utility.yul\":1411:1813   */\n      jump\n        /* \"contracts/powerful-erc20.sol\":43671:43778  require(... */\n    tag_52:\n        /* \"contracts/powerful-erc20.sol\":43788:43807  _setOwner(newOwner) */\n      tag_55\n        /* \"contracts/powerful-erc20.sol\":43798:43806  newOwner */\n      dup2\n        /* \"contracts/powerful-erc20.sol\":43788:43797  _setOwner */\n      tag_30\n        /* \"contracts/powerful-erc20.sol\":43788:43807  _setOwner(newOwner) */\n      jump\t// in\n    tag_55:\n        /* \"contracts/powerful-erc20.sol\":43591:43814  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/powerful-erc20.sol\":43820:43989  function _setOwner(address newOwner) private {... */\n    tag_30:\n        /* \"contracts/powerful-erc20.sol\":43875:43891  address oldOwner */\n      0x00\n        /* \"contracts/powerful-erc20.sol\":43894:43900  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/powerful-erc20.sol\":43910:43927  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"contracts/powerful-erc20.sol\":43942:43982  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/powerful-erc20.sol\":43894:43900  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"contracts/powerful-erc20.sol\":43942:43982  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"contracts/powerful-erc20.sol\":43875:43891  address oldOwner */\n      swap1\n        /* \"contracts/powerful-erc20.sol\":43942:43982  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/powerful-erc20.sol\":43865:43989  {... */\n      pop\n        /* \"contracts/powerful-erc20.sol\":43820:43989  function _setOwner(address newOwner) private {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_59:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_61\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_61:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_19:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_63:\n        /* \"#utility.yul\":343:372   */\n      tag_64\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_59\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:637   */\n    tag_11:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_66:\n        /* \"#utility.yul\":551:580   */\n      tag_67\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_59\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":541:580   */\n      swap5\n        /* \"#utility.yul\":627:629   */\n      0x20\n        /* \"#utility.yul\":612:630   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":599:631   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":383:637   */\n      jump\t// out\n        /* \"#utility.yul\":642:919   */\n    tag_44:\n        /* \"#utility.yul\":709:715   */\n      0x00\n        /* \"#utility.yul\":762:764   */\n      0x20\n        /* \"#utility.yul\":750:759   */\n      dup3\n        /* \"#utility.yul\":741:748   */\n      dup5\n        /* \"#utility.yul\":737:760   */\n      sub\n        /* \"#utility.yul\":733:765   */\n      slt\n        /* \"#utility.yul\":730:782   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":778:779   */\n      0x00\n        /* \"#utility.yul\":775:776   */\n      dup1\n        /* \"#utility.yul\":768:780   */\n      revert\n        /* \"#utility.yul\":730:782   */\n    tag_69:\n        /* \"#utility.yul\":810:819   */\n      dup2\n        /* \"#utility.yul\":804:820   */\n      mload\n        /* \"#utility.yul\":863:868   */\n      dup1\n        /* \"#utility.yul\":856:869   */\n      iszero\n        /* \"#utility.yul\":849:870   */\n      iszero\n        /* \"#utility.yul\":842:847   */\n      dup2\n        /* \"#utility.yul\":839:871   */\n      eq\n        /* \"#utility.yul\":829:889   */\n      tag_64\n      jumpi\n        /* \"#utility.yul\":885:886   */\n      0x00\n        /* \"#utility.yul\":882:883   */\n      dup1\n        /* \"#utility.yul\":875:887   */\n      revert\n        /* \"#utility.yul\":1818:2174   */\n    tag_27:\n        /* \"#utility.yul\":2020:2022   */\n      0x20\n        /* \"#utility.yul\":2002:2023   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2039:2057   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":2032:2062   */\n      mstore\n        /* \"#utility.yul\":2098:2132   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":2093:2095   */\n      0x40\n        /* \"#utility.yul\":2078:2096   */\n      dup3\n      add\n        /* \"#utility.yul\":2071:2133   */\n      mstore\n        /* \"#utility.yul\":2165:2167   */\n      0x60\n        /* \"#utility.yul\":2150:2168   */\n      add\n      swap1\n        /* \"#utility.yul\":1818:2174   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a70995d188bb52d35b656a6341eb506ecc86d0e437711e7b46120b560cb0416964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1521": {
									"entryPoint": null,
									"id": 1521,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setOwner_1600": {
									"entryPoint": 31,
									"id": 1600,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61038f8061007e6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638980f11f1461005b5780638da5cb5b1461006e578063f2fde38b1461008d575b600080fd5b6100596100a0565b005b6100596100693660046102d8565b6100df565b600054604080516001600160a01b039092168252519081900360200190f35b61005961009b3660046102b6565b6101af565b6000546001600160a01b031633146100d35760405162461bcd60e51b81526004016100ca90610324565b60405180910390fd5b6100dd600061024a565b565b6000546001600160a01b031633146101095760405162461bcd60e51b81526004016100ca90610324565b816001600160a01b031663a9059cbb61012a6000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b15801561017257600080fd5b505af1158015610186573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101aa9190610302565b505050565b6000546001600160a01b031633146101d95760405162461bcd60e51b81526004016100ca90610324565b6001600160a01b03811661023e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ca565b6102478161024a565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146102b157600080fd5b919050565b6000602082840312156102c857600080fd5b6102d18261029a565b9392505050565b600080604083850312156102eb57600080fd5b6102f48361029a565b946020939093013593505050565b60006020828403121561031457600080fd5b815180151581146102d157600080fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220a70995d188bb52d35b656a6341eb506ecc86d0e437711e7b46120b560cb0416964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x6F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x38F DUP1 PUSH2 0x7E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8980F11F EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xA0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59 PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0xDF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x59 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x2B6 JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA SWAP1 PUSH2 0x324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDD PUSH1 0x0 PUSH2 0x24A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x109 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA SWAP1 PUSH2 0x324 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x12A PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x186 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x302 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA SWAP1 PUSH2 0x324 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x23E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0x247 DUP2 PUSH2 0x24A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D1 DUP3 PUSH2 0x29A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F4 DUP4 PUSH2 0x29A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 MULMOD SWAP6 0xD1 DUP9 0xBB MSTORE 0xD3 JUMPDEST PUSH6 0x6A6341EB506E 0xCC DUP7 0xD0 0xE4 CALLDATACOPY PUSH18 0x1E7B46120B560CB0416964736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "44169:465:0:-:0;;;;;;;;;;;;-1:-1:-1;42612:23:0;4164:10;42612:9;:23::i;:::-;44169:465;;43820:169;43875:16;43894:6;;-1:-1:-1;;;;;43910:17:0;;;-1:-1:-1;;;;;;43910:17:0;;;;;;43942:40;;43894:6;;;;;;;43942:40;;43875:16;43942:40;43865:124;43820:169;:::o;44169:465::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setOwner_1600": {
									"entryPoint": 586,
									"id": 1600,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_1530": {
									"entryPoint": null,
									"id": 1530,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@recoverERC20_1625": {
									"entryPoint": 223,
									"id": 1625,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_1558": {
									"entryPoint": 160,
									"id": 1558,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_1581": {
									"entryPoint": 431,
									"id": 1581,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2176:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:1"
															},
															"nodeType": "YulIf",
															"src": "272:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:1",
														"type": ""
													}
												],
												"src": "192:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:1"
															},
															"nodeType": "YulIf",
															"src": "480:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "616:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "627:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "612:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "612:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "599:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:1",
														"type": ""
													}
												],
												"src": "383:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "720:199:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "766:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "775:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "778:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "768:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "768:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "768:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "741:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "750:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "737:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "737:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "762:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "733:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "733:32:1"
															},
															"nodeType": "YulIf",
															"src": "730:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "791:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "810:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "804:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "804:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "795:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "873:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "882:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "885:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "875:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "875:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "875:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "842:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "863:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "856:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "856:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "849:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "849:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "839:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "839:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "832:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "832:40:1"
															},
															"nodeType": "YulIf",
															"src": "829:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "898:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "908:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "898:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "686:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "697:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "709:6:1",
														"type": ""
													}
												],
												"src": "642:277:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1025:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1035:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1047:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1058:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1043:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1035:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1077:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1092:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1108:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1113:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1104:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1104:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1117:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1100:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1100:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1088:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1088:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1070:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1070:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1070:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "994:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1005:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1016:4:1",
														"type": ""
													}
												],
												"src": "924:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1261:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1271:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1283:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1294:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1279:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1279:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1271:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1313:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1328:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1344:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1349:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1340:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1340:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1353:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1336:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1336:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1324:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1324:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1306:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1306:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1306:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1377:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1388:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1373:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1373:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1393:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1366:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1366:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1366:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1222:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1233:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1241:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1252:4:1",
														"type": ""
													}
												],
												"src": "1132:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1585:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1595:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1595:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1595:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1636:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1647:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1632:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1652:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1625:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1625:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1625:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1675:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1686:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1671:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1671:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1691:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1664:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1664:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1664:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1746:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1757:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1742:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1742:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1762:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1735:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1735:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1735:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1780:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1792:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1803:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1788:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1788:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1780:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1562:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1576:4:1",
														"type": ""
													}
												],
												"src": "1411:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1992:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2009:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2020:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2002:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2002:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2002:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2043:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2054:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2039:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2039:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2059:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2032:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2082:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2093:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2078:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2078:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2098:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2071:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2071:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2071:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2142:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2154:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2165:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2150:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2150:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2142:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1969:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1983:4:1",
														"type": ""
													}
												],
												"src": "1818:356:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638980f11f1461005b5780638da5cb5b1461006e578063f2fde38b1461008d575b600080fd5b6100596100a0565b005b6100596100693660046102d8565b6100df565b600054604080516001600160a01b039092168252519081900360200190f35b61005961009b3660046102b6565b6101af565b6000546001600160a01b031633146100d35760405162461bcd60e51b81526004016100ca90610324565b60405180910390fd5b6100dd600061024a565b565b6000546001600160a01b031633146101095760405162461bcd60e51b81526004016100ca90610324565b816001600160a01b031663a9059cbb61012a6000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b15801561017257600080fd5b505af1158015610186573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101aa9190610302565b505050565b6000546001600160a01b031633146101d95760405162461bcd60e51b81526004016100ca90610324565b6001600160a01b03811661023e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ca565b6102478161024a565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146102b157600080fd5b919050565b6000602082840312156102c857600080fd5b6102d18261029a565b9392505050565b600080604083850312156102eb57600080fd5b6102f48361029a565b946020939093013593505050565b60006020828403121561031457600080fd5b815180151581146102d157600080fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220a70995d188bb52d35b656a6341eb506ecc86d0e437711e7b46120b560cb0416964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8980F11F EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xA0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59 PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0xDF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x59 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x2B6 JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA SWAP1 PUSH2 0x324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDD PUSH1 0x0 PUSH2 0x24A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x109 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA SWAP1 PUSH2 0x324 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x12A PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x186 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x302 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA SWAP1 PUSH2 0x324 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x23E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0x247 DUP2 PUSH2 0x24A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D1 DUP3 PUSH2 0x29A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F4 DUP4 PUSH2 0x29A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 MULMOD SWAP6 0xD1 DUP9 0xBB MSTORE 0xD3 JUMPDEST PUSH6 0x6A6341EB506E 0xCC DUP7 0xD0 0xE4 CALLDATACOPY PUSH18 0x1E7B46120B560CB0416964736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "44169:465:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43350:92;;;:::i;:::-;;44446:186;;;;;;:::i;:::-;;:::i;42718:85::-;42764:7;42790:6;42718:85;;;-1:-1:-1;;;;;42790:6:0;;;1070:51:1;;42718:85:0;;;;;1058:2:1;42718:85:0;;;43591:223;;;;;;:::i;:::-;;:::i;43350:92::-;42764:7;42790:6;-1:-1:-1;;;;;42790:6:0;4164:10;42930:23;42922:68;;;;-1:-1:-1;;;42922:68:0;;;;;;;:::i;:::-;;;;;;;;;43414:21:::1;43432:1;43414:9;:21::i;:::-;43350:92::o:0;44446:186::-;42764:7;42790:6;-1:-1:-1;;;;;42790:6:0;4164:10;42930:23;42922:68;;;;-1:-1:-1;;;42922:68:0;;;;;;;:::i;:::-;44581:12:::1;-1:-1:-1::0;;;;;44574:29:0::1;;44604:7;42764::::0;42790:6;-1:-1:-1;;;;;42790:6:0;;42718:85;44604:7:::1;44574:51;::::0;-1:-1:-1;;;;;;44574:51:0::1;::::0;;;;;;-1:-1:-1;;;;;1324:32:1;;;44574:51:0::1;::::0;::::1;1306::1::0;1373:18;;;1366:34;;;1279:18;;44574:51:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;44446:186:::0;;:::o;43591:223::-;42764:7;42790:6;-1:-1:-1;;;;;42790:6:0;4164:10;42930:23;42922:68;;;;-1:-1:-1;;;42922:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;43692:22:0;::::1;43671:107;;;::::0;-1:-1:-1;;;43671:107:0;;1613:2:1;43671:107:0::1;::::0;::::1;1595:21:1::0;1652:2;1632:18;;;1625:30;1691:34;1671:18;;;1664:62;-1:-1:-1;;;1742:18:1;;;1735:36;1788:19;;43671:107:0::1;1411:402:1::0;43671:107:0::1;43788:19;43798:8;43788:9;:19::i;:::-;43591:223:::0;:::o;43820:169::-;43875:16;43894:6;;-1:-1:-1;;;;;43910:17:0;;;-1:-1:-1;;;;;;43910:17:0;;;;;;43942:40;;43894:6;;;;;;;43942:40;;43875:16;43942:40;43865:124;43820:169;:::o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:1:o;383:254::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;627:2;612:18;;;;599:32;;-1:-1:-1;;;383:254:1:o;642:277::-;709:6;762:2;750:9;741:7;737:23;733:32;730:52;;;778:1;775;768:12;730:52;810:9;804:16;863:5;856:13;849:21;842:5;839:32;829:60;;885:1;882;875:12;1818:356;2020:2;2002:21;;;2039:18;;;2032:30;2098:34;2093:2;2078:18;;2071:62;2165:2;2150:18;;1818:356::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "182200",
								"executionCost": "26067",
								"totalCost": "208267"
							},
							"external": {
								"owner()": "2314",
								"recoverERC20(address,uint256)": "infinite",
								"renounceOwnership()": "28092",
								"transferOwnership(address)": "28353"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 44169,
									"end": 44634,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 44169,
									"end": 44634,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 44169,
									"end": 44634,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 44169,
									"end": 44634,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 44169,
									"end": 44634,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 44169,
									"end": 44634,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 44169,
									"end": 44634,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 44169,
									"end": 44634,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 44169,
									"end": 44634,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 44169,
									"end": 44634,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 44169,
									"end": 44634,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 44169,
									"end": 44634,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 44169,
									"end": 44634,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 42612,
									"end": 42635,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 4164,
									"end": 4174,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 42612,
									"end": 42621,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 42612,
									"end": 42635,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 42612,
									"end": 42635,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 42612,
									"end": 42635,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 44169,
									"end": 44634,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 44169,
									"end": 44634,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 43820,
									"end": 43989,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 43820,
									"end": 43989,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43875,
									"end": 43891,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43894,
									"end": 43900,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43894,
									"end": 43900,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 43910,
									"end": 43927,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 43910,
									"end": 43927,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43910,
									"end": 43927,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 43910,
									"end": 43927,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 43910,
									"end": 43927,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43910,
									"end": 43927,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43910,
									"end": 43927,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 43910,
									"end": 43927,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 43910,
									"end": 43927,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 43942,
									"end": 43982,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 43942,
									"end": 43982,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 43894,
									"end": 43900,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 43894,
									"end": 43900,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43894,
									"end": 43900,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 43894,
									"end": 43900,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43894,
									"end": 43900,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 43894,
									"end": 43900,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 43894,
									"end": 43900,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 43942,
									"end": 43982,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 43942,
									"end": 43982,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 43875,
									"end": 43891,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43942,
									"end": 43982,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 43865,
									"end": 43989,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43820,
									"end": 43989,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43820,
									"end": 43989,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 44169,
									"end": 44634,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 44169,
									"end": 44634,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 44169,
									"end": 44634,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 44169,
									"end": 44634,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 44169,
									"end": 44634,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 44169,
									"end": 44634,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 44169,
									"end": 44634,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 44169,
									"end": 44634,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 44169,
									"end": 44634,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a70995d188bb52d35b656a6341eb506ecc86d0e437711e7b46120b560cb0416964736f6c63430008070033",
									".code": [
										{
											"begin": 44169,
											"end": 44634,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "PUSH",
											"source": 0,
											"value": "8980F11F"
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44169,
											"end": 44634,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43350,
											"end": 43442,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 43350,
											"end": 43442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43350,
											"end": 43442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 43350,
											"end": 43442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 43350,
											"end": 43442,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43350,
											"end": 43442,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 43350,
											"end": 43442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43350,
											"end": 43442,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42718,
											"end": 42803,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 42718,
											"end": 42803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42764,
											"end": 42771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42718,
											"end": 42803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42718,
											"end": 42803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42718,
											"end": 42803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 42718,
											"end": 42803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42718,
											"end": 42803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42718,
											"end": 42803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42718,
											"end": 42803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42718,
											"end": 42803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1060,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 42718,
											"end": 42803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42718,
											"end": 42803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42718,
											"end": 42803,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43350,
											"end": 43442,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 43350,
											"end": 43442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42764,
											"end": 42771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 42930,
											"end": 42953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43414,
											"end": 43435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 43432,
											"end": 43433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43414,
											"end": 43423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 43414,
											"end": 43435,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43414,
											"end": 43435,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 43414,
											"end": 43435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43350,
											"end": 43442,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42764,
											"end": 42771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 42930,
											"end": 42953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44581,
											"end": 44593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44574,
											"end": 44603,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44603,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 44604,
											"end": 44611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 42764,
											"end": 42771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42718,
											"end": 42803,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44604,
											"end": 44611,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 44604,
											"end": 44611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1324,
											"end": 1356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1324,
											"end": 1356,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1324,
											"end": 1356,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1391,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1373,
											"end": 1391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1400,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1400,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1297,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1279,
											"end": 1297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44574,
											"end": 44625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44446,
											"end": 44632,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42764,
											"end": 42771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42790,
											"end": 42796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 42930,
											"end": 42953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 42922,
											"end": 42990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43692,
											"end": 43714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43692,
											"end": 43714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43671,
											"end": 43778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 43671,
											"end": 43778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43671,
											"end": 43778,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43671,
											"end": 43778,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43671,
											"end": 43778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43671,
											"end": 43778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1613,
											"end": 1615,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 43671,
											"end": 43778,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43671,
											"end": 43778,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43671,
											"end": 43778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1595,
											"end": 1616,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1652,
											"end": 1654,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1632,
											"end": 1650,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1632,
											"end": 1650,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1650,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1691,
											"end": 1725,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1726,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1742,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1742,
											"end": 1760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1771,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1807,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1788,
											"end": 1807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 43671,
											"end": 43778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1411,
											"end": 1813,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 43671,
											"end": 43778,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 43671,
											"end": 43778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43788,
											"end": 43807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 43798,
											"end": 43806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43788,
											"end": 43797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 43788,
											"end": 43807,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43788,
											"end": 43807,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 43788,
											"end": 43807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43591,
											"end": 43814,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 43820,
											"end": 43989,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 43820,
											"end": 43989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43875,
											"end": 43891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43894,
											"end": 43900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43894,
											"end": 43900,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43910,
											"end": 43927,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43910,
											"end": 43927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43910,
											"end": 43927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43910,
											"end": 43927,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43910,
											"end": 43927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43910,
											"end": 43927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43910,
											"end": 43927,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43910,
											"end": 43927,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43910,
											"end": 43927,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43942,
											"end": 43982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43942,
											"end": 43982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43894,
											"end": 43900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43894,
											"end": 43900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43894,
											"end": 43900,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43894,
											"end": 43900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43894,
											"end": 43900,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43894,
											"end": 43900,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43894,
											"end": 43900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43942,
											"end": 43982,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 43942,
											"end": 43982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43875,
											"end": 43891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43942,
											"end": 43982,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 43865,
											"end": 43989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43820,
											"end": 43989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43820,
											"end": 43989,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 637,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 383,
											"end": 637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 627,
											"end": 629,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 612,
											"end": 630,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 599,
											"end": 631,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 599,
											"end": 631,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 383,
											"end": 637,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 642,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 642,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 762,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 750,
											"end": 759,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 741,
											"end": 748,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 737,
											"end": 760,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 733,
											"end": 765,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 730,
											"end": 782,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 730,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 730,
											"end": 782,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 778,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 768,
											"end": 780,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 730,
											"end": 782,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 730,
											"end": 782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 810,
											"end": 819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 804,
											"end": 820,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 863,
											"end": 868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 856,
											"end": 869,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 849,
											"end": 870,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 842,
											"end": 847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 839,
											"end": 871,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 829,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 829,
											"end": 889,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 875,
											"end": 887,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 2174,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1818,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2023,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2023,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2023,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2062,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2093,
											"end": 2095,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2167,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2150,
											"end": 2168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 2174,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"recoverERC20(address,uint256)": "8980f11f",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Allows owner to recover any ERC20 sent into the contract\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"recoverERC20(address,uint256)\":{\"details\":\"Remember that only owner can call so be careful when use on contracts generated from other contracts.\",\"params\":{\"tokenAddress\":\"The token contract address\",\"tokenAmount\":\"Number of tokens to be sent\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"TokenRecover\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/powerful-erc20.sol\":\"TokenRecover\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/powerful-erc20.sol\":{\"keccak256\":\"0x9570db30440d0d877f8e4b5076cb1328db2af6d84f27ae1a4cffc56db63172d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58817e6239d1d81a70605d4bbfc1ea495aadcb3b46647a2575aeb4484b0d60a3\",\"dweb:/ipfs/QmcWsNLsEniffCVQRHwMTN6Hf8VZmPLbCpdn8krRrrQn1M\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/powerful-erc20.sol": {
				"ast": {
					"absolutePath": "contracts/powerful-erc20.sol",
					"exportedSymbols": {
						"AccessControl": [
							2298
						],
						"Address": [
							1081
						],
						"Context": [
							121
						],
						"ERC1363": [
							1499
						],
						"ERC165": [
							1114
						],
						"ERC20": [
							663
						],
						"ERC20Burnable": [
							722
						],
						"ERC20Capped": [
							785
						],
						"ERC20Decimals": [
							1653
						],
						"ERC20Mintable": [
							1722
						],
						"IAccessControl": [
							1794
						],
						"IERC1363": [
							1191
						],
						"IERC1363Receiver": [
							1208
						],
						"IERC1363Spender": [
							1223
						],
						"IERC165": [
							1092
						],
						"IERC20": [
							77
						],
						"IERC20Metadata": [
							100
						],
						"Ownable": [
							1601
						],
						"PowerfulERC20": [
							2455
						],
						"Roles": [
							2336
						],
						"Strings": [
							1996
						],
						"TokenRecover": [
							1626
						]
					},
					"id": 2456,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "115:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "196:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "209:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "289:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "300:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "326:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "325:9:0"
									},
									"scope": 77,
									"src": "280:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "341:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "427:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "445:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "437:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "477:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:9:0"
									},
									"scope": 77,
									"src": "418:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "492:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "715:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "732:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "724:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "751:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "743:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "723:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "793:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "793:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:6:0"
									},
									"scope": 77,
									"src": "706:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "805:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1083:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1101:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1093:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1116:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1108:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1172:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1171:9:0"
									},
									"scope": 77,
									"src": "1074:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1187:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1843:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1859:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1851:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1851:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1876:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1868:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1850:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1902:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1902:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1901:6:0"
									},
									"scope": 77,
									"src": "1834:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1914:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2224:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2254:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2246:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2278:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2270:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2270:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2305:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2297:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2297:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2236:81:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2336:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2336:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2335:6:0"
									},
									"scope": 77,
									"src": "2215:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2348:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 67,
									"name": "Transfer",
									"nameLocation": "2517:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2542:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2526:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2564:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2548:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2576:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2568:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2568:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2525:57:0"
									},
									"src": "2511:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2589:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 76,
									"name": "Approval",
									"nameLocation": "2748:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2782:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2766:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2797:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2797:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2838:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2830:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2830:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2756:93:0"
									},
									"src": "2742:108:0"
								}
							],
							"scope": 2456,
							"src": "186:2666:0",
							"usedErrors": []
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2930:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3100:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3100:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "2955:116:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3082:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3113:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3181:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3185:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3211:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3211:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:15:0"
									},
									"scope": 100,
									"src": "3172:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3232:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3302:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3308:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3334:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3334:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3333:15:0"
									},
									"scope": 100,
									"src": "3293:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3355:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3434:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3442:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3468:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3468:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3467:7:0"
									},
									"scope": 100,
									"src": "3425:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2456,
							"src": "3072:405:0",
							"usedErrors": []
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3531:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3556:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "Context",
							"nameLocation": "4071:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4147:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4164:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4164:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4157:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4094:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4104:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4138:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4138:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4137:9:0"
									},
									"scope": 121,
									"src": "4085:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4254:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4271:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4271:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4264:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4196:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4204:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4238:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4238:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4237:16:0"
									},
									"scope": 121,
									"src": "4187:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2456,
							"src": "4053:235:0",
							"usedErrors": []
						},
						{
							"id": 122,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4346:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 124,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "5562:7:0"
									},
									"id": 125,
									"nodeType": "InheritanceSpecifier",
									"src": "5562:7:0"
								},
								{
									"baseName": {
										"id": 126,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "5571:6:0"
									},
									"id": 127,
									"nodeType": "InheritanceSpecifier",
									"src": "5571:6:0"
								},
								{
									"baseName": {
										"id": 128,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "5579:14:0"
									},
									"id": 129,
									"nodeType": "InheritanceSpecifier",
									"src": "5579:14:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 123,
								"nodeType": "StructuredDocumentation",
								"src": "4371:1172:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 663,
							"linearizedBaseContracts": [
								663,
								100,
								77,
								121
							],
							"name": "ERC20",
							"nameLocation": "5553:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 133,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "5636:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "5600:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 132,
										"keyType": {
											"id": 130,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5608:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5600:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 131,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5619:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 139,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "5708:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "5652:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 138,
										"keyType": {
											"id": 134,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5660:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5652:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 137,
											"keyType": {
												"id": 135,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5679:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "5671:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 136,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5690:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 141,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "5742:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "5726:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5726:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 143,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "5776:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "5761:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 142,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5761:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 145,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "5802:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "5787:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 144,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5787:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "6175:57:0",
										"statements": [
											{
												"expression": {
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 153,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "6185:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 154,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "6193:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6185:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "6185:13:0"
											},
											{
												"expression": {
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 157,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "6208:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 158,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "6218:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6208:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "6208:17:0"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5816:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 162,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "6145:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "6131:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 147,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6131:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "6166:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "6152:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6152:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6130:44:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6175:0:0"
									},
									"scope": 663,
									"src": "6119:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "6366:29:0",
										"statements": [
											{
												"expression": {
													"id": 169,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 143,
													"src": "6383:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 168,
												"id": 170,
												"nodeType": "Return",
												"src": "6376:12:0"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "6238:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "6306:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 165,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6333:8:0"
									},
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6310:2:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "6351:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6351:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6350:15:0"
									},
									"scope": 663,
									"src": "6297:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "6579:31:0",
										"statements": [
											{
												"expression": {
													"id": 179,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "6596:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 178,
												"id": 180,
												"nodeType": "Return",
												"src": "6589:14:0"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "6401:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "6517:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6546:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6523:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6564:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6564:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6563:15:0"
									},
									"scope": 663,
									"src": "6508:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "7299:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7316:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 188,
												"id": 190,
												"nodeType": "Return",
												"src": "7309:9:0"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "6616:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "7243:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 185,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7274:8:0"
									},
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7251:2:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "7292:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 186,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7292:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7291:7:0"
									},
									"scope": 663,
									"src": "7234:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										8
									],
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "7455:36:0",
										"statements": [
											{
												"expression": {
													"id": 199,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 141,
													"src": "7472:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 198,
												"id": 200,
												"nodeType": "Return",
												"src": "7465:19:0"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "7331:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "7394:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 195,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7428:8:0"
									},
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7405:2:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "7446:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7445:9:0"
									},
									"scope": 663,
									"src": "7385:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										16
									],
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "7676:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 211,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "7693:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 213,
													"indexExpression": {
														"id": 212,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "7703:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7693:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 210,
												"id": 214,
												"nodeType": "Return",
												"src": "7686:25:0"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "7497:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7558:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 207,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7637:8:0"
									},
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7576:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "7568:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7567:17:0"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "7663:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7663:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7662:9:0"
									},
									"scope": 663,
									"src": "7549:169:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "8049:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 228,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "8069:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 230,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "8083:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 231,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "8094:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 227,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "8059:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8059:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "8059:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8118:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 226,
												"id": 235,
												"nodeType": "Return",
												"src": "8111:11:0"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "7724:192:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "7930:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 223,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8013:8:0"
									},
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7947:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "7939:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7939:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7966:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "7958:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7958:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7938:35:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "8039:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8039:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8038:6:0"
									},
									"scope": 663,
									"src": "7921:208:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										36
									],
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "8329:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 248,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "8346:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 250,
														"indexExpression": {
															"id": 249,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "8358:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8346:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 252,
													"indexExpression": {
														"id": 251,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "8365:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8346:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 253,
												"nodeType": "Return",
												"src": "8339:34:0"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "8135:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "8196:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 244,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8290:8:0"
									},
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8214:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "8206:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8206:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8229:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "8221:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8205:32:0"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "8316:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8316:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8315:9:0"
									},
									"scope": 663,
									"src": "8187:193:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										46
									],
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "8643:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 267,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "8662:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8662:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 269,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "8676:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 270,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "8685:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 266,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "8653:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8653:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "8653:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8709:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 265,
												"id": 274,
												"nodeType": "Return",
												"src": "8702:11:0"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "8386:127:0",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "8527:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 262,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8607:8:0"
									},
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8543:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "8535:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8535:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8560:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "8552:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8552:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:33:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "8633:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8633:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:6:0"
									},
									"scope": 663,
									"src": "8518:202:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										58
									],
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "9329:370:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 290,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "9349:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 291,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "9357:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 292,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "9368:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 289,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "9339:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9339:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "9339:36:0"
											},
											{
												"assignments": [
													296
												],
												"declarations": [
													{
														"constant": false,
														"id": 296,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "9394:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 323,
														"src": "9386:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 295,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9386:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 303,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 297,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "9413:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 299,
														"indexExpression": {
															"id": 298,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "9425:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9413:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 302,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 300,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "9433:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9413:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9386:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 305,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "9477:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 306,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "9497:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9477:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9517:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 304,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9456:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9456:113:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "9456:113:0"
											},
											{
												"id": 320,
												"nodeType": "UncheckedBlock",
												"src": "9579:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 312,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "9612:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 313,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "9620:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9620:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 315,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 296,
																		"src": "9634:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 316,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 283,
																		"src": "9653:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9634:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 311,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "9603:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9603:57:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 319,
														"nodeType": "ExpressionStatement",
														"src": "9603:57:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9688:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 288,
												"id": 322,
												"nodeType": "Return",
												"src": "9681:11:0"
											}
										]
									},
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "8726:456:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "9196:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 285,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9305:8:0"
									},
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9226:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "9218:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9218:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "9250:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "9242:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9242:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9277:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "9269:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9269:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9208:81:0"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "9323:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9323:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9322:6:0"
									},
									"scope": 663,
									"src": "9187:512:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "10216:164:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 335,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "10248:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10248:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "10274:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 338,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 139,
																		"src": "10295:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 341,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 339,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "10307:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10307:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10295:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 343,
																"indexExpression": {
																	"id": 342,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "10321:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10295:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 344,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "10332:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10295:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 334,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "10226:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10226:126:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "10226:126:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10369:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 333,
												"id": 349,
												"nodeType": "Return",
												"src": "10362:11:0"
											}
										]
									},
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "9705:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "10103:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10129:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "10121:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10121:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "10146:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "10138:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10138:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10120:37:0"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "10206:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 331,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10206:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10205:6:0"
									},
									"scope": 663,
									"src": "10094:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "10994:340:0",
										"statements": [
											{
												"assignments": [
													362
												],
												"declarations": [
													{
														"constant": false,
														"id": 362,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11012:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "11004:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 361,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11004:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 369,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 363,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "11031:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 366,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 364,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "11043:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11043:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11031:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 368,
													"indexExpression": {
														"id": 367,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "11057:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11031:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11004:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 371,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "11096:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 372,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "11116:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11096:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11145:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11075:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11075:119:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "11075:119:0"
											},
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "11204:102:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 378,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "11237:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11237:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 380,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "11251:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 381,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "11260:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 382,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 356,
																		"src": "11279:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11260:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 377,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "11228:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11228:67:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 385,
														"nodeType": "ExpressionStatement",
														"src": "11228:67:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11323:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 360,
												"id": 388,
												"nodeType": "Return",
												"src": "11316:11:0"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "10386:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "10876:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10902:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "10894:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10894:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "10919:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "10911:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10911:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10893:42:0"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "10984:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 358,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10984:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10983:6:0"
									},
									"scope": 663,
									"src": "10867:467:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "11925:630:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 401,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "11943:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11961:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11953:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11953:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11953:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11943:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11965:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11935:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11935:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "11935:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "12023:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12044:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12036:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 412,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12036:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12036:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12023:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12048:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12015:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12015:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "12015:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "12118:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 422,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "12126:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 423,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "12137:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 420,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "12097:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12097:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "12097:47:0"
											},
											{
												"assignments": [
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "12163:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "12155:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 426,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12155:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 431,
												"initialValue": {
													"baseExpression": {
														"id": 428,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "12179:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 430,
													"indexExpression": {
														"id": 429,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "12189:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12179:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12155:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 433,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "12227:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 434,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "12244:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12227:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12264:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12206:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12206:108:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "12206:108:0"
											},
											{
												"id": 447,
												"nodeType": "UncheckedBlock",
												"src": "12324:77:0",
												"statements": [
													{
														"expression": {
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 439,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "12348:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 441,
																"indexExpression": {
																	"id": 440,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "12358:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12348:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 442,
																	"name": "senderBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "12368:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 443,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "12384:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12368:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12348:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 446,
														"nodeType": "ExpressionStatement",
														"src": "12348:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 448,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "12410:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 450,
														"indexExpression": {
															"id": 449,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "12420:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 451,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "12434:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12410:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "12410:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 455,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "12465:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 456,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "12473:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 457,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "12484:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 454,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "12456:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12456:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "EmitStatement",
												"src": "12451:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 461,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "12522:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 462,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "12530:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 463,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "12541:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 460,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "12502:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12502:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "12502:46:0"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "11340:463:0",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11817:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "11844:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "11836:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11836:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "11868:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "11860:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "11887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11826:81:0"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11925:0:0"
									},
									"scope": 663,
									"src": "11808:747:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "12896:324:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 476,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "12914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12933:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12925:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 477,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12925:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12925:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12914:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12937:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 475,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12906:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12906:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "12906:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13011:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13003:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 486,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13003:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13003:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 490,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "13015:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 491,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "13024:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 485,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "12982:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12982:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "12982:49:0"
											},
											{
												"expression": {
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 494,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "13042:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 495,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "13058:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13042:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "13042:22:0"
											},
											{
												"expression": {
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 498,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "13074:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 500,
														"indexExpression": {
															"id": 499,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "13084:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13074:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 501,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "13096:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13074:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "13074:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13134:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13126:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 505,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13126:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13126:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "13138:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "13147:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 504,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "13117:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13117:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "EmitStatement",
												"src": "13112:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13193:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13185:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 514,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13185:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13185:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "13197:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "13206:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "13165:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13165:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "13165:48:0"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "12561:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "12840:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12854:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "12846:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12846:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12871:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "12863:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12845:33:0"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12896:0:0"
									},
									"scope": 663,
									"src": "12831:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "13605:511:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "13623:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13642:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13634:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 533,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13634:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13634:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13623:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13646:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13615:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13615:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "13615:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 542,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "13714:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13731:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13723:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 543,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13723:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13723:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 547,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "13735:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 541,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "13693:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13693:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "13693:49:0"
											},
											{
												"assignments": [
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "13761:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 594,
														"src": "13753:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 550,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13753:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 555,
												"initialValue": {
													"baseExpression": {
														"id": 552,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "13778:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 554,
													"indexExpression": {
														"id": 553,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "13788:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13778:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13753:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 557,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "13814:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 558,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "13832:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13814:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13840:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 556,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13806:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "13806:71:0"
											},
											{
												"id": 571,
												"nodeType": "UncheckedBlock",
												"src": "13887:79:0",
												"statements": [
													{
														"expression": {
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 563,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "13911:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 565,
																"indexExpression": {
																	"id": 564,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "13921:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "13911:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 566,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "13932:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 567,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "13949:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13932:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13911:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 570,
														"nodeType": "ExpressionStatement",
														"src": "13911:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 572,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "13975:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 573,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "13991:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13975:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "13975:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 577,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "14022:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14039:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14031:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 578,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14031:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14031:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 582,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "14043:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 576,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "14013:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14013:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 584,
												"nodeType": "EmitStatement",
												"src": "14008:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 586,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "14081:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14098:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14090:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 587,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14090:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14090:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "14102:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 585,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "14061:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14061:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "14061:48:0"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "13226:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "13549:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13563:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "13555:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13580:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "13572:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13554:33:0"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13605:0:0"
									},
									"scope": 663,
									"src": "13540:576:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "14652:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 606,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "14670:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14687:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14679:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 607,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14679:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14679:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14670:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14691:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 605,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14662:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14662:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "14662:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 616,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 600,
																"src": "14748:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14767:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14759:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 617,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14759:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14759:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14748:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14771:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 615,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14740:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14740:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "14740:68:0"
											},
											{
												"expression": {
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 625,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "14819:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 628,
															"indexExpression": {
																"id": 626,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "14831:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14819:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 629,
														"indexExpression": {
															"id": 627,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "14838:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14819:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 630,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "14849:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14819:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "14819:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 634,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "14879:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "14886:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 636,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "14895:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 633,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "14870:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14870:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "EmitStatement",
												"src": "14865:37:0"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "14122:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14548:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "14566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14597:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "14589:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14589:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14622:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "14614:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14556:78:0"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14652:0:0"
									},
									"scope": 663,
									"src": "14539:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "15612:2:0",
										"statements": []
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "14915:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "15502:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15540:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "15532:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15532:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15562:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "15554:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15554:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15582:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "15574:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15522:72:0"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15612:0:0"
									},
									"scope": 663,
									"src": "15493:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "16320:2:0",
										"statements": []
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "15620:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "16211:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16248:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "16240:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16240:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16270:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "16262:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16290:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "16282:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16230:72:0"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16320:0:0"
									},
									"scope": 663,
									"src": "16202:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2456,
							"src": "5544:10780:0",
							"usedErrors": []
						},
						{
							"id": 664,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "16401:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 666,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "16670:7:0"
									},
									"id": 667,
									"nodeType": "InheritanceSpecifier",
									"src": "16670:7:0"
								},
								{
									"baseName": {
										"id": 668,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "16679:5:0"
									},
									"id": 669,
									"nodeType": "InheritanceSpecifier",
									"src": "16679:5:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 665,
								"nodeType": "StructuredDocumentation",
								"src": "16426:208:0",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": false,
							"id": 722,
							"linearizedBaseContracts": [
								722,
								663,
								100,
								77,
								121
							],
							"name": "ERC20Burnable",
							"nameLocation": "16653:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "16839:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 676,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "16855:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16855:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 678,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "16869:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 675,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "16849:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16849:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "16849:27:0"
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "16691:98:0",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "16803:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16816:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "16808:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16807:16:0"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16839:0:0"
									},
									"scope": 722,
									"src": "16794:89:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "17255:329:0",
										"statements": [
											{
												"assignments": [
													691
												],
												"declarations": [
													{
														"constant": false,
														"id": 691,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "17273:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 720,
														"src": "17265:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 690,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17265:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"arguments": [
														{
															"id": 693,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "17302:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 694,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "17311:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17311:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 692,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "17292:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17292:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17265:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 699,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "17355:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 700,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "17375:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17355:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17395:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
															},
															"value": "ERC20: burn amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
															}
														],
														"id": 698,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17334:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17334:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "17334:109:0"
											},
											{
												"id": 714,
												"nodeType": "UncheckedBlock",
												"src": "17453:93:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 706,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "17486:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 707,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "17495:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17495:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 709,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 691,
																		"src": "17509:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 710,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 687,
																		"src": "17528:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17509:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 705,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "17477:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17477:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 713,
														"nodeType": "ExpressionStatement",
														"src": "17477:58:0"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 716,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "17561:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 717,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "17570:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 715,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "17555:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17555:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 719,
												"nodeType": "ExpressionStatement",
												"src": "17555:22:0"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "16889:295:0",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "17198:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "17215:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "17207:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17207:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17232:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "17224:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17206:33:0"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17255:0:0"
									},
									"scope": 722,
									"src": "17189:395:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2456,
							"src": "16635:951:0",
							"usedErrors": []
						},
						{
							"id": 723,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "17661:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 725,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "17797:5:0"
									},
									"id": 726,
									"nodeType": "InheritanceSpecifier",
									"src": "17797:5:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 724,
								"nodeType": "StructuredDocumentation",
								"src": "17686:77:0",
								"text": " @dev Extension of {ERC20} that adds a cap to the supply of tokens."
							},
							"fullyImplemented": false,
							"id": 785,
							"linearizedBaseContracts": [
								785,
								663,
								100,
								77,
								121
							],
							"name": "ERC20Capped",
							"nameLocation": "17782:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 728,
									"mutability": "immutable",
									"name": "_cap",
									"nameLocation": "17835:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 785,
									"src": "17809:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 727,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "17809:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "18006:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 735,
																"name": "cap_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 731,
																"src": "18024:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18031:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18024:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332304361707065643a206361702069732030",
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18034:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828",
																"typeString": "literal_string \"ERC20Capped: cap is 0\""
															},
															"value": "ERC20Capped: cap is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828",
																"typeString": "literal_string \"ERC20Capped: cap is 0\""
															}
														],
														"id": 734,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18016:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18016:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "18016:42:0"
											},
											{
												"expression": {
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 741,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "18068:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 742,
														"name": "cap_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "18075:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18068:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "18068:11:0"
											}
										]
									},
									"documentation": {
										"id": 729,
										"nodeType": "StructuredDocumentation",
										"src": "17846:129:0",
										"text": " @dev Sets the value of the `cap`. This value is immutable, it can only be\n set once during construction."
									},
									"id": 746,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "cap_",
												"nameLocation": "18000:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "17992:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17991:14:0"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18006:0:0"
									},
									"scope": 785,
									"src": "17980:106:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "18218:28:0",
										"statements": [
											{
												"expression": {
													"id": 752,
													"name": "_cap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 728,
													"src": "18235:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 751,
												"id": 753,
												"nodeType": "Return",
												"src": "18228:11:0"
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "18092:68:0",
										"text": " @dev Returns the cap on the token's total supply."
									},
									"functionSelector": "355274ea",
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cap",
									"nameLocation": "18174:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18177:2:0"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "18209:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18208:9:0"
									},
									"scope": 785,
									"src": "18165:81:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										523
									],
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "18373:164:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 765,
																			"name": "ERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 663,
																			"src": "18404:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20_$663_$",
																				"typeString": "type(contract ERC20)"
																			}
																		},
																		"id": 766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "totalSupply",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 202,
																		"src": "18404:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18404:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 768,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 760,
																	"src": "18426:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18404:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 770,
																	"name": "cap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "18436:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18436:5:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18404:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332304361707065643a20636170206578636565646564",
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18455:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f",
																"typeString": "literal_string \"ERC20Capped: cap exceeded\""
															},
															"value": "ERC20Capped: cap exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f",
																"typeString": "literal_string \"ERC20Capped: cap exceeded\""
															}
														],
														"id": 764,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18383:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18383:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 775,
												"nodeType": "ExpressionStatement",
												"src": "18383:109:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 779,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "18514:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 780,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "18523:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 776,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "18502:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Capped_$785_$",
																"typeString": "type(contract super ERC20Capped)"
															}
														},
														"id": 778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 523,
														"src": "18502:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18502:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "18502:28:0"
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "18252:42:0",
										"text": " @dev See {ERC20-_mint}."
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18308:5:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 762,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "18364:8:0"
									},
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18322:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "18314:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18339:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "18331:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18331:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18313:33:0"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18373:0:0"
									},
									"scope": 785,
									"src": "18299:238:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2456,
							"src": "17764:775:0",
							"usedErrors": []
						},
						{
							"id": 786,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "18593:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 787,
								"nodeType": "StructuredDocumentation",
								"src": "18618:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1081,
							"linearizedBaseContracts": [
								1081
							],
							"name": "Address",
							"nameLocation": "18694:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "19344:311:0",
										"statements": [
											{
												"assignments": [
													796
												],
												"declarations": [
													{
														"constant": false,
														"id": 796,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "19549:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 803,
														"src": "19541:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 795,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19541:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 797,
												"nodeType": "VariableDeclarationStatement",
												"src": "19541:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "19572:52:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19586:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "19606:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "19594:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "19594:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "19586:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 790,
														"isOffset": false,
														"isSlot": false,
														"src": "19606:7:0",
														"valueSize": 1
													},
													{
														"declaration": 796,
														"isOffset": false,
														"isSlot": false,
														"src": "19586:4:0",
														"valueSize": 1
													}
												],
												"id": 798,
												"nodeType": "InlineAssembly",
												"src": "19563:61:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 799,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "19640:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19647:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19640:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 794,
												"id": 802,
												"nodeType": "Return",
												"src": "19633:15:0"
											}
										]
									},
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "18708:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "19287:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19306:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "19298:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19297:17:0"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "19338:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 792,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19338:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19337:6:0"
									},
									"scope": 1081,
									"src": "19278:377:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "20643:309:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 815,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "20682:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1081",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1081",
																				"typeString": "library Address"
																			}
																		],
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "20674:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 813,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "20674:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20674:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "20674:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 818,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "20699:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20674:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20719:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 812,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20653:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20653:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "20653:107:0"
											},
											{
												"assignments": [
													824,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 824,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "20777:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 837,
														"src": "20772:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 823,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "20772:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 831,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20820:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 825,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "20790:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "20790:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 827,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "20812:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "20790:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20790:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20771:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 833,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "20854:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20875:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 832,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20833:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20833:112:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "20833:112:0"
											}
										]
									},
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "19661:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "20581:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "20607:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "20591:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20591:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "20626:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "20618:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20618:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20590:43:0"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20643:0:0"
									},
									"scope": 1081,
									"src": "20572:380:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "21803:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 849,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "21833:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 850,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "21841:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21847:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 848,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															855,
															875
														],
														"referencedDeclaration": 875,
														"src": "21820:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21820:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 847,
												"id": 853,
												"nodeType": "Return",
												"src": "21813:67:0"
											}
										]
									},
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "20958:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "21703:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "21724:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "21716:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21716:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "21745:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "21732:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 842,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21732:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21715:35:0"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "21785:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 845,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21785:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21784:14:0"
									},
									"scope": 1081,
									"src": "21694:193:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "22256:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 868,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "22295:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 869,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "22303:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22309:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 871,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "22312:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 867,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															895,
															945
														],
														"referencedDeclaration": 945,
														"src": "22273:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22273:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 866,
												"id": 873,
												"nodeType": "Return",
												"src": "22266:59:0"
											}
										]
									},
									"documentation": {
										"id": 856,
										"nodeType": "StructuredDocumentation",
										"src": "21893:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "22118:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "22148:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "22140:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22140:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "22177:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "22164:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 859,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "22164:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "22205:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "22191:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 861,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "22191:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22130:93:0"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "22242:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 864,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "22242:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22241:14:0"
									},
									"scope": 1081,
									"src": "22109:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "22837:201:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 888,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "22905:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 889,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "22929:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 890,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "22951:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22974:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 887,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															895,
															945
														],
														"referencedDeclaration": 945,
														"src": "22866:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22866:165:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 886,
												"id": 893,
												"nodeType": "Return",
												"src": "22847:184:0"
											}
										]
									},
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "22338:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "22703:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "22742:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "22734:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22734:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "22771:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "22758:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 879,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "22758:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22793:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "22785:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22785:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22724:80:0"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "22823:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 884,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "22823:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22822:14:0"
									},
									"scope": 1081,
									"src": "22694:344:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "23465:376:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 912,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "23504:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1081",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1081",
																				"typeString": "library Address"
																			}
																		],
																		"id": 911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "23496:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 910,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "23496:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23496:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "23496:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 915,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "23521:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23496:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23540:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 909,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23475:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23475:115:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "23475:115:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 922,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 898,
																	"src": "23619:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 921,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "23608:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23608:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23628:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 920,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23600:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23600:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "23600:60:0"
											},
											{
												"assignments": [
													928,
													930
												],
												"declarations": [
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "23677:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 944,
														"src": "23672:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 927,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "23672:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 930,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "23699:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 944,
														"src": "23686:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 929,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "23686:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 937,
												"initialValue": {
													"arguments": [
														{
															"id": 935,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "23752:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 931,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 898,
																"src": "23713:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "23713:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 933,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "23732:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "23713:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23713:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23671:95:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 939,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "23800:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 940,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "23809:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 941,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "23821:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 938,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "23783:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23783:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 908,
												"id": 943,
												"nodeType": "Return",
												"src": "23776:58:0"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "23044:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "23295:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "23334:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "23326:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "23363:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "23350:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 899,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23350:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23385:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "23377:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23377:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "23414:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "23400:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 903,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23400:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23316:116:0"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "23451:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 906,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23451:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23450:14:0"
									},
									"scope": 1081,
									"src": "23286:555:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "24146:171:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 956,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "24211:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "24235:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24257:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 955,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															962,
															997
														],
														"referencedDeclaration": 997,
														"src": "24175:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24175:135:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 954,
												"id": 960,
												"nodeType": "Return",
												"src": "24156:154:0"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "23847:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "24027:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "24054:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "24046:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24046:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "24075:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "24062:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 949,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24062:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24045:35:0"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "24128:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 952,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24128:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24127:14:0"
									},
									"scope": 1081,
									"src": "24018:299:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "24659:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 976,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "24688:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 975,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "24677:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24677:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24697:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 974,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24669:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24669:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "24669:67:0"
											},
											{
												"assignments": [
													982,
													984
												],
												"declarations": [
													{
														"constant": false,
														"id": 982,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "24753:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 996,
														"src": "24748:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 981,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "24748:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 984,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "24775:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 996,
														"src": "24762:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 983,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "24762:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 989,
												"initialValue": {
													"arguments": [
														{
															"id": 987,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "24807:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 985,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "24789:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "24789:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24789:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24747:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 991,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "24846:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 992,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "24855:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 993,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "24867:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 990,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "24829:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24829:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 973,
												"id": 995,
												"nodeType": "Return",
												"src": "24822:58:0"
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "24323:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "24510:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "24546:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "24538:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "24575:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "24562:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 966,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24562:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "24603:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "24589:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 968,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24589:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24528:93:0"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "24645:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 971,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24645:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24644:14:0"
									},
									"scope": 1081,
									"src": "24501:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "25183:175:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1008,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "25250:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1009,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "25274:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25296:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1007,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1014,
															1049
														],
														"referencedDeclaration": 1049,
														"src": "25212:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25212:139:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1006,
												"id": 1012,
												"nodeType": "Return",
												"src": "25193:158:0"
											}
										]
									},
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "24893:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "25075:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "25104:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "25096:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25096:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "25125:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "25112:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1001,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25112:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25095:35:0"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "25165:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1004,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25165:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25164:14:0"
									},
									"scope": 1081,
									"src": "25066:292:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "25699:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1028,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "25728:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1027,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "25717:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25717:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25737:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1026,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25709:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25709:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "25709:69:0"
											},
											{
												"assignments": [
													1034,
													1036
												],
												"declarations": [
													{
														"constant": false,
														"id": 1034,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "25795:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1048,
														"src": "25790:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1033,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "25790:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1036,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "25817:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1048,
														"src": "25804:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1035,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "25804:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1041,
												"initialValue": {
													"arguments": [
														{
															"id": 1039,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "25851:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1037,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "25831:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "25831:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25831:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25789:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1043,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "25890:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1044,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "25899:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1045,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "25911:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1042,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "25873:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25873:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1025,
												"id": 1047,
												"nodeType": "Return",
												"src": "25866:58:0"
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "25364:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "25553:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "25591:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "25583:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25583:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "25620:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "25607:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1018,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25607:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "25648:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "25634:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1020,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25634:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25573:93:0"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "25685:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1023,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25685:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25684:14:0"
									},
									"scope": 1081,
									"src": "25544:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "26311:532:0",
										"statements": [
											{
												"condition": {
													"id": 1061,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1052,
													"src": "26325:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1077,
													"nodeType": "Block",
													"src": "26382:455:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1065,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "26466:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "26466:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26486:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "26466:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1075,
																"nodeType": "Block",
																"src": "26774:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1072,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1056,
																					"src": "26799:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1071,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "26792:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26792:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1074,
																		"nodeType": "ExpressionStatement",
																		"src": "26792:20:0"
																	}
																]
															},
															"id": 1076,
															"nodeType": "IfStatement",
															"src": "26462:365:0",
															"trueBody": {
																"id": 1070,
																"nodeType": "Block",
																"src": "26489:279:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "26609:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "26631:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "26660:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "26654:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "26654:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "26635:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "26703:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "26707:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "26699:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "26699:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "26720:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "26692:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "26692:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "26692:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1054,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "26660:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1054,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "26707:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 1069,
																		"nodeType": "InlineAssembly",
																		"src": "26600:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 1078,
												"nodeType": "IfStatement",
												"src": "26321:516:0",
												"trueBody": {
													"id": 1064,
													"nodeType": "Block",
													"src": "26334:42:0",
													"statements": [
														{
															"expression": {
																"id": 1062,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "26355:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1060,
															"id": 1063,
															"nodeType": "Return",
															"src": "26348:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "25937:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "26160:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "26191:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "26186:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1051,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26186:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "26221:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "26208:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1053,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26208:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "26255:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "26241:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1055,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26241:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26176:97:0"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "26297:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1058,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26297:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26296:14:0"
									},
									"scope": 1081,
									"src": "26151:692:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2456,
							"src": "18686:8159:0",
							"usedErrors": []
						},
						{
							"id": 1082,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "26913:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1083,
								"nodeType": "StructuredDocumentation",
								"src": "26938:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1092,
							"linearizedBaseContracts": [
								1092
							],
							"name": "IERC165",
							"nameLocation": "27228:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "27242:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1091,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "27596:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "27621:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "27614:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1085,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "27614:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27613:20:0"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "27657:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1088,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27657:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27656:6:0"
									},
									"scope": 1092,
									"src": "27587:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2456,
							"src": "27218:447:0",
							"usedErrors": []
						},
						{
							"id": 1093,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "27732:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1095,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1092,
										"src": "28362:7:0"
									},
									"id": 1096,
									"nodeType": "InheritanceSpecifier",
									"src": "28362:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1094,
								"nodeType": "StructuredDocumentation",
								"src": "27757:576:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1114,
							"linearizedBaseContracts": [
								1114,
								1092
							],
							"name": "ERC165",
							"nameLocation": "28352:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1091
									],
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "28572:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1105,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "28589:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1107,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "28609:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1092_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1092_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1106,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "28604:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28604:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1092",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "28604:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "28589:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1104,
												"id": 1111,
												"nodeType": "Return",
												"src": "28582:47:0"
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "28376:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "28446:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1101,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "28536:8:0"
									},
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "28471:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "28464:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1098,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "28464:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28463:20:0"
									},
									"returnParameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "28562:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1102,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28562:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28561:6:0"
									},
									"scope": 1114,
									"src": "28437:199:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2456,
							"src": "28334:304:0",
							"usedErrors": []
						},
						{
							"id": 1115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "28705:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1117,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "28894:6:0"
									},
									"id": 1118,
									"nodeType": "InheritanceSpecifier",
									"src": "28894:6:0"
								},
								{
									"baseName": {
										"id": 1119,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1092,
										"src": "28902:7:0"
									},
									"id": 1120,
									"nodeType": "InheritanceSpecifier",
									"src": "28902:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1116,
								"nodeType": "StructuredDocumentation",
								"src": "28730:141:0",
								"text": " @title IERC1363 Interface\n @dev Interface for a Payable Token contract as defined in\n  https://eips.ethereum.org/EIPS/eip-1363"
							},
							"fullyImplemented": false,
							"id": 1191,
							"linearizedBaseContracts": [
								1191,
								1092,
								77
							],
							"name": "IERC1363",
							"nameLocation": "28882:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "28916:304:0",
										"text": " @notice Transfer tokens from `msg.sender` to another address and then call `onTransferReceived` on receiver\n @param recipient address The address which you want to transfer to\n @param amount uint256 The amount of tokens to be transferred\n @return true unless throwing"
									},
									"functionSelector": "1296ee62",
									"id": 1130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "29234:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "29258:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "29250:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29250:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "29277:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "29269:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29269:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29249:35:0"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "29319:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29319:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29318:6:0"
									},
									"scope": 1191,
									"src": "29225:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "29331:399:0",
										"text": " @notice Transfer tokens from `msg.sender` to another address and then call `onTransferReceived` on receiver\n @param recipient address The address which you want to transfer to\n @param amount uint256 The amount of tokens to be transferred\n @param data bytes Additional data with no specified format, sent in call to `recipient`\n @return true unless throwing"
									},
									"functionSelector": "4000aea0",
									"id": 1142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "29744:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "29777:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "29769:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "29804:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "29796:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "29835:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "29820:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1136,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "29820:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29759:86:0"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "29864:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29864:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29863:6:0"
									},
									"scope": 1191,
									"src": "29735:135:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "29876:371:0",
										"text": " @notice Transfer tokens from one address to another and then call `onTransferReceived` on receiver\n @param sender address The address which you want to send tokens from\n @param recipient address The address which you want to transfer to\n @param amount uint256 The amount of tokens to be transferred\n @return true unless throwing"
									},
									"functionSelector": "d8fbe994",
									"id": 1154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "30261:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "30298:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "30290:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30290:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "30322:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "30314:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30349:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "30341:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30280:81:0"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "30380:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30380:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30379:6:0"
									},
									"scope": 1191,
									"src": "30252:134:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "30392:466:0",
										"text": " @notice Transfer tokens from one address to another and then call `onTransferReceived` on receiver\n @param sender address The address which you want to send tokens from\n @param recipient address The address which you want to transfer to\n @param amount uint256 The amount of tokens to be transferred\n @param data bytes Additional data with no specified format, sent in call to `recipient`\n @return true unless throwing"
									},
									"functionSelector": "c1d34b89",
									"id": 1168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "30872:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "30909:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "30901:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "30933:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "30925:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30960:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "30952:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "30991:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "30976:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1162,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "30976:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30891:110:0"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "31020:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "31020:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31019:6:0"
									},
									"scope": 1191,
									"src": "30863:163:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "31032:696:0",
										"text": " @notice Approve the passed address to spend the specified amount of tokens on behalf of msg.sender\n and then call `onApprovalReceived` on spender.\n Beware that changing an allowance with this method brings the risk that someone may use both the old\n and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n @param spender address The address which will spend the funds\n @param amount uint256 The amount of tokens to be spent"
									},
									"functionSelector": "3177029f",
									"id": 1178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "31742:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "31765:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "31757:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31757:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "31782:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "31774:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31756:33:0"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "31824:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1175,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "31824:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31823:6:0"
									},
									"scope": 1191,
									"src": "31733:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "31836:789:0",
										"text": " @notice Approve the passed address to spend the specified amount of tokens on behalf of msg.sender\n and then call `onApprovalReceived` on spender.\n Beware that changing an allowance with this method brings the risk that someone may use both the old\n and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n @param spender address The address which will spend the funds\n @param amount uint256 The amount of tokens to be spent\n @param data bytes Additional data with no specified format, sent in call to `spender`"
									},
									"functionSelector": "cae9ca51",
									"id": 1190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "32639:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "32671:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "32663:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "32696:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "32688:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32688:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "32727:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "32712:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32712:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32653:84:0"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "32756:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1187,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32756:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32755:6:0"
									},
									"scope": 1191,
									"src": "32630:132:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2456,
							"src": "28872:3892:0",
							"usedErrors": []
						},
						{
							"id": 1192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32839:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1193,
								"nodeType": "StructuredDocumentation",
								"src": "32864:231:0",
								"text": " @title IERC1363Receiver Interface\n @dev Interface for any contract that wants to support transferAndCall or transferFromAndCall\n  from ERC1363 token contracts as defined in\n  https://eips.ethereum.org/EIPS/eip-1363"
							},
							"fullyImplemented": false,
							"id": 1208,
							"linearizedBaseContracts": [
								1208
							],
							"name": "IERC1363Receiver",
							"nameLocation": "33106:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "33129:827:0",
										"text": " @notice Handle the receipt of ERC1363 tokens\n @dev Any ERC1363 smart contract calls this function on the recipient\n after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the\n transfer. Return of other than the magic value MUST result in the\n transaction being reverted.\n Note: the token contract address is always the message sender.\n @param operator address The address which called `transferAndCall` or `transferFromAndCall` function\n @param sender address The address which are token transferred from\n @param amount uint256 The amount of tokens transferred\n @param data bytes Additional data with no specified format\n @return `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` unless throwing"
									},
									"functionSelector": "88a7ca5c",
									"id": 1207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onTransferReceived",
									"nameLocation": "33970:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "34006:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "33998:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33998:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "34032:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "34024:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "34056:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "34048:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "34087:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "34072:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1201,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34072:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33988:109:0"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "34116:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1204,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "34116:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34115:8:0"
									},
									"scope": 1208,
									"src": "33961:163:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2456,
							"src": "33096:1030:0",
							"usedErrors": []
						},
						{
							"id": 1209,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "34200:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1210,
								"nodeType": "StructuredDocumentation",
								"src": "34225:206:0",
								"text": " @title IERC1363Spender Interface\n @dev Interface for any contract that wants to support approveAndCall\n  from ERC1363 token contracts as defined in\n  https://eips.ethereum.org/EIPS/eip-1363"
							},
							"fullyImplemented": false,
							"id": 1223,
							"linearizedBaseContracts": [
								1223
							],
							"name": "IERC1363Spender",
							"nameLocation": "34442:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1211,
										"nodeType": "StructuredDocumentation",
										"src": "34464:698:0",
										"text": " @notice Handle the approval of ERC1363 tokens\n @dev Any ERC1363 smart contract calls this function on the recipient\n after an `approve`. This function MAY throw to revert and reject the\n approval. Return of other than the magic value MUST result in the\n transaction being reverted.\n Note: the token contract address is always the message sender.\n @param sender address The address which called `approveAndCall` function\n @param amount uint256 The amount of tokens to be spent\n @param data bytes Additional data with no specified format\n @return `bytes4(keccak256(\"onApprovalReceived(address,uint256,bytes)\"))` unless throwing"
									},
									"functionSelector": "7b04a2d0",
									"id": 1222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onApprovalReceived",
									"nameLocation": "35176:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "35212:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "35204:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "35236:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "35228:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35228:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "35267:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "35252:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "35252:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35194:83:0"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "35296:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1219,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "35296:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35295:8:0"
									},
									"scope": 1223,
									"src": "35167:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2456,
							"src": "34432:874:0",
							"usedErrors": []
						},
						{
							"id": 1224,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35372:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1226,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "35499:5:0"
									},
									"id": 1227,
									"nodeType": "InheritanceSpecifier",
									"src": "35499:5:0"
								},
								{
									"baseName": {
										"id": 1228,
										"name": "IERC1363",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1191,
										"src": "35506:8:0"
									},
									"id": 1229,
									"nodeType": "InheritanceSpecifier",
									"src": "35506:8:0"
								},
								{
									"baseName": {
										"id": 1230,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1114,
										"src": "35516:6:0"
									},
									"id": 1231,
									"nodeType": "InheritanceSpecifier",
									"src": "35516:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1225,
								"nodeType": "StructuredDocumentation",
								"src": "35397:72:0",
								"text": " @title ERC1363\n @dev Implementation of an ERC1363 interface"
							},
							"fullyImplemented": false,
							"id": 1499,
							"linearizedBaseContracts": [
								1499,
								1114,
								1191,
								1092,
								663,
								100,
								77,
								121
							],
							"name": "ERC1363",
							"nameLocation": "35488:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1234,
									"libraryName": {
										"id": 1232,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1081,
										"src": "35535:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "35529:26:0",
									"typeName": {
										"id": 1233,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "35547:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"baseFunctions": [
										1091,
										1113
									],
									"body": {
										"id": 1257,
										"nodeType": "Block",
										"src": "35774:129:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1245,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "35803:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1247,
																		"name": "IERC1363",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1191,
																		"src": "35823:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1363_$1191_$",
																			"typeString": "type(contract IERC1363)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC1363_$1191_$",
																			"typeString": "type(contract IERC1363)"
																		}
																	],
																	"id": 1246,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "35818:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35818:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1363_$1191",
																	"typeString": "type(contract IERC1363)"
																}
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "35818:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "35803:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1253,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "35884:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1251,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "35860:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1363_$1499_$",
																	"typeString": "type(contract super ERC1363)"
																}
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1113,
															"src": "35860:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35860:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "35803:93:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1244,
												"id": 1256,
												"nodeType": "Return",
												"src": "35784:112:0"
											}
										]
									},
									"documentation": {
										"id": 1235,
										"nodeType": "StructuredDocumentation",
										"src": "35561:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "35631:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1241,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1239,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1114,
												"src": "35730:6:0"
											},
											{
												"id": 1240,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1092,
												"src": "35738:7:0"
											}
										],
										"src": "35721:25:0"
									},
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "35656:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "35649:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "35649:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35648:20:0"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "35764:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1242,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35764:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35763:6:0"
									},
									"scope": 1499,
									"src": "35622:281:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1130
									],
									"body": {
										"id": 1275,
										"nodeType": "Block",
										"src": "36329:62:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1270,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "36362:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1271,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "36373:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36381:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1269,
														"name": "transferAndCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1276,
															1308
														],
														"referencedDeclaration": 1308,
														"src": "36346:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (address,uint256,bytes memory) returns (bool)"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36346:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1268,
												"id": 1274,
												"nodeType": "Return",
												"src": "36339:45:0"
											}
										]
									},
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "35909:280:0",
										"text": " @dev Transfer tokens to a specified address and then execute a callback on recipient.\n @param recipient The address to transfer to.\n @param amount The amount to be transferred.\n @return A boolean that indicates if the operation was successful."
									},
									"functionSelector": "1296ee62",
									"id": 1276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "36203:15:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1265,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "36293:8:0"
									},
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "36227:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "36219:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "36246:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "36238:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36238:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36218:35:0"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "36319:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "36319:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36318:6:0"
									},
									"scope": 1499,
									"src": "36194:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1142
									],
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "36888:220:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1290,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "36907:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1291,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "36918:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1289,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "36898:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36898:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1293,
												"nodeType": "ExpressionStatement",
												"src": "36898:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1296,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "36978:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36978:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1298,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "36992:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1299,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1281,
																	"src": "37003:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1300,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "37011:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1295,
																"name": "_checkAndCallTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1456,
																"src": "36956:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36956:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313336333a205f636865636b416e6443616c6c5472616e736665722072657665727473",
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_76406793cf8b9e5cb67a0bad2386ad7900e8f178a44697631206894529378d14",
																"typeString": "literal_string \"ERC1363: _checkAndCallTransfer reverts\""
															},
															"value": "ERC1363: _checkAndCallTransfer reverts"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_76406793cf8b9e5cb67a0bad2386ad7900e8f178a44697631206894529378d14",
																"typeString": "literal_string \"ERC1363: _checkAndCallTransfer reverts\""
															}
														],
														"id": 1294,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "36935:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36935:145:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1304,
												"nodeType": "ExpressionStatement",
												"src": "36935:145:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "37097:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1288,
												"id": 1306,
												"nodeType": "Return",
												"src": "37090:11:0"
											}
										]
									},
									"documentation": {
										"id": 1277,
										"nodeType": "StructuredDocumentation",
										"src": "36397:338:0",
										"text": " @dev Transfer tokens to a specified address and then execute a callback on recipient.\n @param recipient The address to transfer to\n @param amount The amount to be transferred\n @param data Additional data with no specified format\n @return A boolean that indicates if the operation was successful."
									},
									"functionSelector": "4000aea0",
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "36749:15:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1285,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "36864:8:0"
									},
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "36782:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "36774:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36774:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "36809:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "36801:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "36838:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "36825:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1282,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "36825:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36764:84:0"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "36882:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "36882:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36881:6:0"
									},
									"scope": 1499,
									"src": "36740:368:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1154
									],
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "37644:74:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1322,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "37681:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1323,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "37689:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1324,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "37700:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37708:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1321,
														"name": "transferFromAndCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1329,
															1363
														],
														"referencedDeclaration": 1363,
														"src": "37661:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37661:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1320,
												"id": 1327,
												"nodeType": "Return",
												"src": "37654:57:0"
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "37114:376:0",
										"text": " @dev Transfer tokens from one address to another and then execute a callback on recipient.\n @param sender The address which you want to send tokens from\n @param recipient The address which you want to transfer to\n @param amount The amount of tokens to be transferred\n @return A boolean that indicates if the operation was successful."
									},
									"functionSelector": "d8fbe994",
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "37504:19:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1317,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "37620:8:0"
									},
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "37541:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "37533:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37533:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "37565:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "37557:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "37592:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "37584:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37523:81:0"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "37638:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1318,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37638:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37637:6:0"
									},
									"scope": 1499,
									"src": "37495:223:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1168
									],
									"body": {
										"id": 1362,
										"nodeType": "Block",
										"src": "38341:226:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1345,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "38364:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1346,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "38372:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1347,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "38383:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1344,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "38351:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38351:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "38351:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1352,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1332,
																	"src": "38443:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1353,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "38451:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1354,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "38462:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1355,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1338,
																	"src": "38470:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1351,
																"name": "_checkAndCallTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1456,
																"src": "38421:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38421:54:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313336333a205f636865636b416e6443616c6c5472616e736665722072657665727473",
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38489:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_76406793cf8b9e5cb67a0bad2386ad7900e8f178a44697631206894529378d14",
																"typeString": "literal_string \"ERC1363: _checkAndCallTransfer reverts\""
															},
															"value": "ERC1363: _checkAndCallTransfer reverts"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_76406793cf8b9e5cb67a0bad2386ad7900e8f178a44697631206894529378d14",
																"typeString": "literal_string \"ERC1363: _checkAndCallTransfer reverts\""
															}
														],
														"id": 1350,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "38400:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38400:139:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1359,
												"nodeType": "ExpressionStatement",
												"src": "38400:139:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "38556:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1343,
												"id": 1361,
												"nodeType": "Return",
												"src": "38549:11:0"
											}
										]
									},
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "37724:436:0",
										"text": " @dev Transfer tokens from one address to another and then execute a callback on recipient.\n @param sender The address which you want to send tokens from\n @param recipient The address which you want to transfer to\n @param amount The amount of tokens to be transferred\n @param data Additional data with no specified format\n @return A boolean that indicates if the operation was successful."
									},
									"functionSelector": "c1d34b89",
									"id": 1363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "38174:19:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1340,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "38317:8:0"
									},
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "38211:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "38203:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "38235:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "38227:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "38262:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "38254:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "38291:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "38278:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1337,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "38278:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38193:108:0"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "38335:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1341,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "38335:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38334:6:0"
									},
									"scope": 1499,
									"src": "38165:402:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1178
									],
									"body": {
										"id": 1380,
										"nodeType": "Block",
										"src": "38998:59:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1375,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "39030:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1376,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "39039:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39047:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1374,
														"name": "approveAndCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1381,
															1411
														],
														"referencedDeclaration": 1411,
														"src": "39015:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (address,uint256,bytes memory) returns (bool)"
														}
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39015:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1373,
												"id": 1379,
												"nodeType": "Return",
												"src": "39008:42:0"
											}
										]
									},
									"documentation": {
										"id": 1364,
										"nodeType": "StructuredDocumentation",
										"src": "38573:288:0",
										"text": " @dev Approve spender to transfer tokens and then execute a callback on recipient.\n @param spender The address allowed to transfer to\n @param amount The amount allowed to be transferred\n @return A boolean that indicates if the operation was successful."
									},
									"functionSelector": "3177029f",
									"id": 1381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "38875:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1370,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "38962:8:0"
									},
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "38898:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "38890:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38890:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "38915:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "38907:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38907:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38889:33:0"
									},
									"returnParameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "38988:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1371,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "38988:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38987:6:0"
									},
									"scope": 1499,
									"src": "38866:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1190
									],
									"body": {
										"id": 1410,
										"nodeType": "Block",
										"src": "39564:199:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1395,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "39582:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1396,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "39591:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1394,
														"name": "approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "39574:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39574:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1398,
												"nodeType": "ExpressionStatement",
												"src": "39574:24:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1401,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1384,
																	"src": "39650:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1402,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1386,
																	"src": "39659:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1403,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1388,
																	"src": "39667:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1400,
																"name": "_checkAndCallApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1498,
																"src": "39629:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39629:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313336333a205f636865636b416e6443616c6c417070726f76652072657665727473",
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39686:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24c05224b594f2da9addf5e8c7d8c0b134accd47c2c66f2be695c0776a0387b9",
																"typeString": "literal_string \"ERC1363: _checkAndCallApprove reverts\""
															},
															"value": "ERC1363: _checkAndCallApprove reverts"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24c05224b594f2da9addf5e8c7d8c0b134accd47c2c66f2be695c0776a0387b9",
																"typeString": "literal_string \"ERC1363: _checkAndCallApprove reverts\""
															}
														],
														"id": 1399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "39608:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39608:127:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1407,
												"nodeType": "ExpressionStatement",
												"src": "39608:127:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "39752:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1393,
												"id": 1409,
												"nodeType": "Return",
												"src": "39745:11:0"
											}
										]
									},
									"documentation": {
										"id": 1382,
										"nodeType": "StructuredDocumentation",
										"src": "39063:351:0",
										"text": " @dev Approve spender to transfer tokens and then execute a callback on recipient.\n @param spender The address allowed to transfer to.\n @param amount The amount allowed to be transferred.\n @param data Additional data with no specified format.\n @return A boolean that indicates if the operation was successful."
									},
									"functionSelector": "cae9ca51",
									"id": 1411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "39428:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1390,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "39540:8:0"
									},
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "39460:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "39452:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39452:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "39485:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "39477:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39477:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "39514:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "39501:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1387,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "39501:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39442:82:0"
									},
									"returnParameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "39558:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "39558:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39557:6:0"
									},
									"scope": 1499,
									"src": "39419:344:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1455,
										"nodeType": "Block",
										"src": "40489:344:0",
										"statements": [
											{
												"condition": {
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "40503:23:0",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1425,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1416,
																"src": "40504:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 804,
															"src": "40504:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 1427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40504:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1432,
												"nodeType": "IfStatement",
												"src": "40499:66:0",
												"trueBody": {
													"id": 1431,
													"nodeType": "Block",
													"src": "40528:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "40549:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1424,
															"id": 1430,
															"nodeType": "Return",
															"src": "40542:12:0"
														}
													]
												}
											},
											{
												"assignments": [
													1434
												],
												"declarations": [
													{
														"constant": false,
														"id": 1434,
														"mutability": "mutable",
														"name": "retval",
														"nameLocation": "40581:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1455,
														"src": "40574:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"typeName": {
															"id": 1433,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "40574:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1445,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1439,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "40650:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40650:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1441,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "40676:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1442,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "40696:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1443,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "40716:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1436,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "40607:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1435,
																"name": "IERC1363Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "40590:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1363Receiver_$1208_$",
																	"typeString": "type(contract IERC1363Receiver)"
																}
															},
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40590:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1363Receiver_$1208",
																"typeString": "contract IERC1363Receiver"
															}
														},
														"id": 1438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onTransferReceived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1207,
														"src": "40590:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40590:140:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40574:156:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1446,
																"name": "retval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1434,
																"src": "40748:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1448,
																				"name": "recipient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1416,
																				"src": "40787:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1447,
																			"name": "IERC1363Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1208,
																			"src": "40770:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1363Receiver_$1208_$",
																				"typeString": "type(contract IERC1363Receiver)"
																			}
																		},
																		"id": 1449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "40770:27:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363Receiver_$1208",
																			"typeString": "contract IERC1363Receiver"
																		}
																	},
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onTransferReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1207,
																	"src": "40770:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "40770:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "40748:77:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1453,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "40747:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1424,
												"id": 1454,
												"nodeType": "Return",
												"src": "40740:86:0"
											}
										]
									},
									"documentation": {
										"id": 1412,
										"nodeType": "StructuredDocumentation",
										"src": "39769:544:0",
										"text": " @dev Internal function to invoke `onTransferReceived` on a target address\n  The call is not executed if the target address is not a contract\n @param sender address Representing the previous owner of the given token value\n @param recipient address Target address that will receive the tokens\n @param amount uint256 The amount mount of tokens to be transferred\n @param data bytes Optional data to send along with the call\n @return whether the call correctly returned the expected magic value"
									},
									"id": 1456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAndCallTransfer",
									"nameLocation": "40327:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "40366:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "40358:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40358:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "40390:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "40382:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40382:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "40417:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "40409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "40446:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "40433:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1419,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "40433:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40348:108:0"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "40483:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1422,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40483:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40482:6:0"
									},
									"scope": 1499,
									"src": "40318:515:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1497,
										"nodeType": "Block",
										"src": "41427:304:0",
										"statements": [
											{
												"condition": {
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "41441:21:0",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1468,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1459,
																"src": "41442:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 804,
															"src": "41442:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 1470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "41442:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1475,
												"nodeType": "IfStatement",
												"src": "41437:64:0",
												"trueBody": {
													"id": 1474,
													"nodeType": "Block",
													"src": "41464:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "41485:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1467,
															"id": 1473,
															"nodeType": "Return",
															"src": "41478:12:0"
														}
													]
												}
											},
											{
												"assignments": [
													1477
												],
												"declarations": [
													{
														"constant": false,
														"id": 1477,
														"mutability": "mutable",
														"name": "retval",
														"nameLocation": "41517:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1497,
														"src": "41510:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"typeName": {
															"id": 1476,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "41510:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1487,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1482,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "41583:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41583:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1484,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "41609:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1485,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "41629:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1479,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1459,
																	"src": "41542:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1478,
																"name": "IERC1363Spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1223,
																"src": "41526:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1363Spender_$1223_$",
																	"typeString": "type(contract IERC1363Spender)"
																}
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41526:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1363Spender_$1223",
																"typeString": "contract IERC1363Spender"
															}
														},
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onApprovalReceived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1222,
														"src": "41526:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41526:117:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41510:133:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1488,
																"name": "retval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1477,
																"src": "41661:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1490,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1459,
																				"src": "41687:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1489,
																			"name": "IERC1363Spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1223,
																			"src": "41671:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1363Spender_$1223_$",
																				"typeString": "type(contract IERC1363Spender)"
																			}
																		},
																		"id": 1491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "41671:24:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363Spender_$1223",
																			"typeString": "contract IERC1363Spender"
																		}
																	},
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onApprovalReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1222,
																	"src": "41671:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "41671:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "41661:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1495,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "41660:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1467,
												"id": 1496,
												"nodeType": "Return",
												"src": "41653:71:0"
											}
										]
									},
									"documentation": {
										"id": 1457,
										"nodeType": "StructuredDocumentation",
										"src": "40839:439:0",
										"text": " @dev Internal function to invoke `onApprovalReceived` on a target address\n  The call is not executed if the target address is not a contract\n @param spender address The address which will spend the funds\n @param amount uint256 The amount of tokens to be spent\n @param data bytes Optional data to send along with the call\n @return whether the call correctly returned the expected magic value"
									},
									"id": 1498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAndCallApprove",
									"nameLocation": "41292:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "41330:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "41322:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41322:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "41355:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "41347:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41347:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "41384:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "41371:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1462,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "41371:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41312:82:0"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "41421:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1465,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41421:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41420:6:0"
									},
									"scope": 1499,
									"src": "41283:448:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2456,
							"src": "35470:6263:0",
							"usedErrors": []
						},
						{
							"id": 1500,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41788:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1502,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "42337:7:0"
									},
									"id": 1503,
									"nodeType": "InheritanceSpecifier",
									"src": "42337:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1501,
								"nodeType": "StructuredDocumentation",
								"src": "41813:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1601,
							"linearizedBaseContracts": [
								1601,
								121
							],
							"name": "Ownable",
							"nameLocation": "42326:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1505,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "42367:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1601,
									"src": "42351:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1504,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "42351:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 1511,
									"name": "OwnershipTransferred",
									"nameLocation": "42386:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "42432:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "42416:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42416:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "42471:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "42455:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42455:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42406:79:0"
									},
									"src": "42380:106:0"
								},
								{
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "42602:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1516,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "42622:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42622:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1515,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "42612:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42612:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1519,
												"nodeType": "ExpressionStatement",
												"src": "42612:23:0"
											}
										]
									},
									"documentation": {
										"id": 1512,
										"nodeType": "StructuredDocumentation",
										"src": "42492:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1521,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42599:2:0"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42602:0:0"
									},
									"scope": 1601,
									"src": "42588:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1529,
										"nodeType": "Block",
										"src": "42773:30:0",
										"statements": [
											{
												"expression": {
													"id": 1527,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1505,
													"src": "42790:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1526,
												"id": 1528,
												"nodeType": "Return",
												"src": "42783:13:0"
											}
										]
									},
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "42648:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "42727:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42732:2:0"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "42764:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42764:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42763:9:0"
									},
									"scope": 1601,
									"src": "42718:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1543,
										"nodeType": "Block",
										"src": "42912:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1534,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1530,
																	"src": "42930:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42930:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1536,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "42941:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42941:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "42930:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42955:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1533,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "42922:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42922:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1541,
												"nodeType": "ExpressionStatement",
												"src": "42922:68:0"
											},
											{
												"id": 1542,
												"nodeType": "PlaceholderStatement",
												"src": "43000:1:0"
											}
										]
									},
									"documentation": {
										"id": 1531,
										"nodeType": "StructuredDocumentation",
										"src": "42809:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1544,
									"name": "onlyOwner",
									"nameLocation": "42900:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42909:2:0"
									},
									"src": "42891:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1557,
										"nodeType": "Block",
										"src": "43404:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43432:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "43424:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1551,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "43424:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43424:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1550,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "43414:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43414:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "43414:21:0"
											}
										]
									},
									"documentation": {
										"id": 1545,
										"nodeType": "StructuredDocumentation",
										"src": "43014:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1558,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1548,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1547,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1544,
												"src": "43394:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "43394:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "43359:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43376:2:0"
									},
									"returnParameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43404:0:0"
									},
									"scope": 1601,
									"src": "43350:92:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1580,
										"nodeType": "Block",
										"src": "43661:153:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1567,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1561,
																"src": "43692:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "43712:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "43704:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1568,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "43704:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43704:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "43692:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43728:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1566,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "43671:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43671:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1575,
												"nodeType": "ExpressionStatement",
												"src": "43671:107:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1577,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "43798:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1576,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "43788:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43788:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1579,
												"nodeType": "ExpressionStatement",
												"src": "43788:19:0"
											}
										]
									},
									"documentation": {
										"id": 1559,
										"nodeType": "StructuredDocumentation",
										"src": "43448:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1581,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1564,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1563,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1544,
												"src": "43651:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "43651:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "43600:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "43626:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "43618:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43617:18:0"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43661:0:0"
									},
									"scope": 1601,
									"src": "43591:223:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1599,
										"nodeType": "Block",
										"src": "43865:124:0",
										"statements": [
											{
												"assignments": [
													1587
												],
												"declarations": [
													{
														"constant": false,
														"id": 1587,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "43883:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1599,
														"src": "43875:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1586,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "43875:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1589,
												"initialValue": {
													"id": 1588,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1505,
													"src": "43894:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "43875:25:0"
											},
											{
												"expression": {
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1590,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "43910:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1591,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "43919:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "43910:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1593,
												"nodeType": "ExpressionStatement",
												"src": "43910:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1595,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "43963:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1596,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "43973:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1594,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1511,
														"src": "43942:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43942:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1598,
												"nodeType": "EmitStatement",
												"src": "43937:45:0"
											}
										]
									},
									"id": 1600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOwner",
									"nameLocation": "43829:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "43847:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "43839:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43839:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43838:18:0"
									},
									"returnParameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43865:0:0"
									},
									"scope": 1601,
									"src": "43820:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2456,
							"src": "42308:1683:0",
							"usedErrors": []
						},
						{
							"id": 1602,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "44048:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1604,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1601,
										"src": "44194:7:0"
									},
									"id": 1605,
									"nodeType": "InheritanceSpecifier",
									"src": "44194:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1603,
								"nodeType": "StructuredDocumentation",
								"src": "44073:95:0",
								"text": " @title TokenRecover\n @dev Allows owner to recover any ERC20 sent into the contract"
							},
							"fullyImplemented": true,
							"id": 1626,
							"linearizedBaseContracts": [
								1626,
								1601,
								121
							],
							"name": "TokenRecover",
							"nameLocation": "44178:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1624,
										"nodeType": "Block",
										"src": "44564:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1619,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1530,
																"src": "44604:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44604:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1621,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1610,
															"src": "44613:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1616,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1608,
																	"src": "44581:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1615,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "44574:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44574:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 26,
														"src": "44574:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44574:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1623,
												"nodeType": "ExpressionStatement",
												"src": "44574:51:0"
											}
										]
									},
									"documentation": {
										"id": 1606,
										"nodeType": "StructuredDocumentation",
										"src": "44208:233:0",
										"text": " @dev Remember that only owner can call so be careful when use on contracts generated from other contracts.\n @param tokenAddress The token contract address\n @param tokenAmount Number of tokens to be sent"
									},
									"functionSelector": "8980f11f",
									"id": 1625,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1613,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1612,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1544,
												"src": "44550:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "44550:9:0"
										}
									],
									"name": "recoverERC20",
									"nameLocation": "44455:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "44476:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "44468:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44468:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "44498:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "44490:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44490:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44467:43:0"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44564:0:0"
									},
									"scope": 1626,
									"src": "44446:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2456,
							"src": "44169:465:0",
							"usedErrors": []
						},
						{
							"id": 1627,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "44697:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1629,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "44888:5:0"
									},
									"id": 1630,
									"nodeType": "InheritanceSpecifier",
									"src": "44888:5:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1628,
								"nodeType": "StructuredDocumentation",
								"src": "44722:130:0",
								"text": " @title ERC20Decimals\n @dev Implementation of the ERC20Decimals. Extension of {ERC20} that adds decimals storage slot."
							},
							"fullyImplemented": false,
							"id": 1653,
							"linearizedBaseContracts": [
								1653,
								663,
								100,
								77,
								121
							],
							"name": "ERC20Decimals",
							"nameLocation": "44871:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1632,
									"mutability": "immutable",
									"name": "_decimals",
									"nameLocation": "44924:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "44900:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1631,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "44900:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1642,
										"nodeType": "Block",
										"src": "45108:38:0",
										"statements": [
											{
												"expression": {
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1638,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1632,
														"src": "45118:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1639,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1635,
														"src": "45130:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "45118:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1641,
												"nodeType": "ExpressionStatement",
												"src": "45118:21:0"
											}
										]
									},
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "44940:134:0",
										"text": " @dev Sets the value of the `decimals`. This value is immutable, it can only be\n set once during construction."
									},
									"id": 1643,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "decimals_",
												"nameLocation": "45097:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "45091:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1634,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "45091:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45090:17:0"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45108:0:0"
									},
									"scope": 1653,
									"src": "45079:67:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										192
									],
									"body": {
										"id": 1651,
										"nodeType": "Block",
										"src": "45217:33:0",
										"statements": [
											{
												"expression": {
													"id": 1649,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1632,
													"src": "45234:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1648,
												"id": 1650,
												"nodeType": "Return",
												"src": "45227:16:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "45161:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1645,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "45192:8:0"
									},
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45169:2:0"
									},
									"returnParameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "45210:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1646,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "45210:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45209:7:0"
									},
									"scope": 1653,
									"src": "45152:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2456,
							"src": "44853:399:0",
							"usedErrors": []
						},
						{
							"id": 1654,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45315:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1656,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "45504:5:0"
									},
									"id": 1657,
									"nodeType": "InheritanceSpecifier",
									"src": "45504:5:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1655,
								"nodeType": "StructuredDocumentation",
								"src": "45340:128:0",
								"text": " @title ERC20Mintable\n @dev Implementation of the ERC20Mintable. Extension of {ERC20} that adds a minting behaviour."
							},
							"fullyImplemented": false,
							"id": 1722,
							"linearizedBaseContracts": [
								1722,
								663,
								100,
								77,
								121
							],
							"name": "ERC20Mintable",
							"nameLocation": "45487:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1660,
									"mutability": "mutable",
									"name": "_mintingFinished",
									"nameLocation": "45569:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1722,
									"src": "45556:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1658,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "45556:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 1659,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "45588:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "45600:53:0",
										"text": " @dev Emitted during finish minting"
									},
									"id": 1663,
									"name": "MintFinished",
									"nameLocation": "45664:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45676:2:0"
									},
									"src": "45658:21:0"
								},
								{
									"body": {
										"id": 1673,
										"nodeType": "Block",
										"src": "45783:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "45801:17:0",
															"subExpression": {
																"id": 1667,
																"name": "_mintingFinished",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1660,
																"src": "45802:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332304d696e7461626c653a206d696e74696e672069732066696e6973686564",
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45820:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f0296ba1e0cd26c09d97cb12c7a2251bdeb7854af8141b03b7f1306fbe6b4984",
																"typeString": "literal_string \"ERC20Mintable: minting is finished\""
															},
															"value": "ERC20Mintable: minting is finished"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f0296ba1e0cd26c09d97cb12c7a2251bdeb7854af8141b03b7f1306fbe6b4984",
																"typeString": "literal_string \"ERC20Mintable: minting is finished\""
															}
														],
														"id": 1666,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "45793:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45793:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1671,
												"nodeType": "ExpressionStatement",
												"src": "45793:64:0"
											},
											{
												"id": 1672,
												"nodeType": "PlaceholderStatement",
												"src": "45867:1:0"
											}
										]
									},
									"documentation": {
										"id": 1664,
										"nodeType": "StructuredDocumentation",
										"src": "45685:74:0",
										"text": " @dev Tokens can be minted only before minting finished."
									},
									"id": 1674,
									"name": "canMint",
									"nameLocation": "45773:7:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45780:2:0"
									},
									"src": "45764:111:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1682,
										"nodeType": "Block",
										"src": "45999:40:0",
										"statements": [
											{
												"expression": {
													"id": 1680,
													"name": "_mintingFinished",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1660,
													"src": "46016:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1679,
												"id": 1681,
												"nodeType": "Return",
												"src": "46009:23:0"
											}
										]
									},
									"documentation": {
										"id": 1675,
										"nodeType": "StructuredDocumentation",
										"src": "45881:57:0",
										"text": " @return if minting is finished or not."
									},
									"functionSelector": "05d2035b",
									"id": 1683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintingFinished",
									"nameLocation": "45952:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45967:2:0"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "45993:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1677,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "45993:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45992:6:0"
									},
									"scope": 1722,
									"src": "45943:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1698,
										"nodeType": "Block",
										"src": "46405:39:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1694,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "46421:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1695,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1688,
															"src": "46430:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1693,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "46415:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46415:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1697,
												"nodeType": "ExpressionStatement",
												"src": "46415:22:0"
											}
										]
									},
									"documentation": {
										"id": 1684,
										"nodeType": "StructuredDocumentation",
										"src": "46045:291:0",
										"text": " @dev Function to mint tokens.\n WARNING: it allows everyone to mint new tokens. Access controls MUST be defined in derived contracts.\n @param account The address that will receive the minted tokens\n @param amount The amount of tokens to mint"
									},
									"functionSelector": "40c10f19",
									"id": 1699,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1691,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1690,
												"name": "canMint",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1674,
												"src": "46397:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "46397:7:0"
										}
									],
									"name": "mint",
									"nameLocation": "46350:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "46363:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "46355:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46355:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "46380:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "46372:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46372:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46354:33:0"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46405:0:0"
									},
									"scope": 1722,
									"src": "46341:103:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "46672:33:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1705,
														"name": "_finishMinting",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1721,
														"src": "46682:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46682:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1707,
												"nodeType": "ExpressionStatement",
												"src": "46682:16:0"
											}
										]
									},
									"documentation": {
										"id": 1700,
										"nodeType": "StructuredDocumentation",
										"src": "46450:175:0",
										"text": " @dev Function to stop minting new tokens.\n WARNING: it allows everyone to finish minting. Access controls MUST be defined in derived contracts."
									},
									"functionSelector": "7d64bcb4",
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1703,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1702,
												"name": "canMint",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1674,
												"src": "46664:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "46664:7:0"
										}
									],
									"name": "finishMinting",
									"nameLocation": "46639:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46652:2:0"
									},
									"returnParameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46672:0:0"
									},
									"scope": 1722,
									"src": "46630:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1720,
										"nodeType": "Block",
										"src": "46819:70:0",
										"statements": [
											{
												"expression": {
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1713,
														"name": "_mintingFinished",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "46829:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "46848:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "46829:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1716,
												"nodeType": "ExpressionStatement",
												"src": "46829:23:0"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1717,
														"name": "MintFinished",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1663,
														"src": "46868:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46868:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1719,
												"nodeType": "EmitStatement",
												"src": "46863:19:0"
											}
										]
									},
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "46711:60:0",
										"text": " @dev Function to stop minting new tokens."
									},
									"id": 1721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_finishMinting",
									"nameLocation": "46785:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46799:2:0"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46819:0:0"
									},
									"scope": 1722,
									"src": "46776:113:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2456,
							"src": "45469:1422:0",
							"usedErrors": []
						},
						{
							"id": 1723,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46953:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1724,
								"nodeType": "StructuredDocumentation",
								"src": "46978:89:0",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 1794,
							"linearizedBaseContracts": [
								1794
							],
							"name": "IAccessControl",
							"nameLocation": "47078:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "47099:292:0",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"id": 1733,
									"name": "RoleAdminChanged",
									"nameLocation": "47402:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "47444:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "47428:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1726,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "47428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "47474:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "47458:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1728,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "47458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "47517:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "47501:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1730,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "47501:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47418:117:0"
									},
									"src": "47396:140:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "47542:212:0",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"id": 1742,
									"name": "RoleGranted",
									"nameLocation": "47765:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "47802:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "47786:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1735,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "47786:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "47832:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "47816:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47816:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "47865:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "47849:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47849:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47776:101:0"
									},
									"src": "47759:119:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1743,
										"nodeType": "StructuredDocumentation",
										"src": "47884:275:0",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"id": 1751,
									"name": "RoleRevoked",
									"nameLocation": "48170:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "48207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "48191:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1744,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "48191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "48237:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "48221:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1749,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "48270:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "48254:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48254:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48181:101:0"
									},
									"src": "48164:119:0"
								},
								{
									"documentation": {
										"id": 1752,
										"nodeType": "StructuredDocumentation",
										"src": "48289:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 1761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "48379:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "48395:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "48387:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1753,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "48387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "48409:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "48401:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48401:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48386:31:0"
									},
									"returnParameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "48465:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "48465:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48464:6:0"
									},
									"scope": 1794,
									"src": "48370:101:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1762,
										"nodeType": "StructuredDocumentation",
										"src": "48477:184:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 1769,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "48675:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "48696:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "48688:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1763,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "48688:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48687:14:0"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "48725:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1766,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "48725:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48724:9:0"
									},
									"scope": 1794,
									"src": "48666:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1770,
										"nodeType": "StructuredDocumentation",
										"src": "48740:239:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 1777,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "48993:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "49011:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "49003:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1771,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "49003:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "49025:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "49017:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49017:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49002:31:0"
									},
									"returnParameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49042:0:0"
									},
									"scope": 1794,
									"src": "48984:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1778,
										"nodeType": "StructuredDocumentation",
										"src": "49049:223:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 1785,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "49286:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "49305:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "49297:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1779,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "49297:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "49319:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "49311:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49311:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49296:31:0"
									},
									"returnParameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49336:0:0"
									},
									"scope": 1794,
									"src": "49277:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1786,
										"nodeType": "StructuredDocumentation",
										"src": "49343:480:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 1793,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "49837:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "49858:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "49850:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1787,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "49850:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "49872:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "49864:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49864:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49849:31:0"
									},
									"returnParameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49889:0:0"
									},
									"scope": 1794,
									"src": "49828:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2456,
							"src": "47068:2824:0",
							"usedErrors": []
						},
						{
							"id": 1795,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "49946:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1796,
								"nodeType": "StructuredDocumentation",
								"src": "49971:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1996,
							"linearizedBaseContracts": [
								1996
							],
							"name": "Strings",
							"nameLocation": "50014:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1799,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "50053:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1996,
									"src": "50028:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1797,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "50028:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1798,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "50068:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1877,
										"nodeType": "Block",
										"src": "50259:632:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1807,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1802,
														"src": "50461:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "50470:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "50461:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1813,
												"nodeType": "IfStatement",
												"src": "50457:51:0",
												"trueBody": {
													"id": 1812,
													"nodeType": "Block",
													"src": "50473:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50494:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1806,
															"id": 1811,
															"nodeType": "Return",
															"src": "50487:10:0"
														}
													]
												}
											},
											{
												"assignments": [
													1815
												],
												"declarations": [
													{
														"constant": false,
														"id": 1815,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "50525:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1877,
														"src": "50517:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1814,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "50517:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1817,
												"initialValue": {
													"id": 1816,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1802,
													"src": "50532:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50517:20:0"
											},
											{
												"assignments": [
													1819
												],
												"declarations": [
													{
														"constant": false,
														"id": 1819,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "50555:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1877,
														"src": "50547:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1818,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "50547:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1820,
												"nodeType": "VariableDeclarationStatement",
												"src": "50547:14:0"
											},
											{
												"body": {
													"id": 1831,
													"nodeType": "Block",
													"src": "50589:57:0",
													"statements": [
														{
															"expression": {
																"id": 1825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "50603:8:0",
																"subExpression": {
																	"id": 1824,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1819,
																	"src": "50603:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1826,
															"nodeType": "ExpressionStatement",
															"src": "50603:8:0"
														},
														{
															"expression": {
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1827,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1815,
																	"src": "50625:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50633:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "50625:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1830,
															"nodeType": "ExpressionStatement",
															"src": "50625:10:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1821,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1815,
														"src": "50578:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1822,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "50586:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "50578:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1832,
												"nodeType": "WhileStatement",
												"src": "50571:75:0"
											},
											{
												"assignments": [
													1834
												],
												"declarations": [
													{
														"constant": false,
														"id": 1834,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "50668:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1877,
														"src": "50655:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1833,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "50655:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1839,
												"initialValue": {
													"arguments": [
														{
															"id": 1837,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1819,
															"src": "50687:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1836,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "50677:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1835,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "50681:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50677:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50655:39:0"
											},
											{
												"body": {
													"id": 1870,
													"nodeType": "Block",
													"src": "50723:131:0",
													"statements": [
														{
															"expression": {
																"id": 1845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1843,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1819,
																	"src": "50737:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50747:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "50737:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1846,
															"nodeType": "ExpressionStatement",
															"src": "50737:11:0"
														},
														{
															"expression": {
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1847,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1834,
																		"src": "50762:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1849,
																	"indexExpression": {
																		"id": 1848,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1819,
																		"src": "50769:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "50762:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1861,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 1854,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "50792:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1859,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1857,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1802,
																									"src": "50805:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 1858,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "50813:2:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "50805:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1856,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "50797:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1855,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "50797:7:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1860,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "50797:19:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "50792:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1853,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "50786:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1852,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "50786:5:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "50786:31:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "50779:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1850,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "50779:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "50779:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "50762:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1865,
															"nodeType": "ExpressionStatement",
															"src": "50762:56:0"
														},
														{
															"expression": {
																"id": 1868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1866,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1802,
																	"src": "50832:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50841:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "50832:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1869,
															"nodeType": "ExpressionStatement",
															"src": "50832:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1840,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1802,
														"src": "50711:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1841,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "50720:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "50711:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1871,
												"nodeType": "WhileStatement",
												"src": "50704:150:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1874,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "50877:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1873,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "50870:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1872,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "50870:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50870:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1806,
												"id": 1876,
												"nodeType": "Return",
												"src": "50863:21:0"
											}
										]
									},
									"documentation": {
										"id": 1800,
										"nodeType": "StructuredDocumentation",
										"src": "50093:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "50197:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "50214:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "50206:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50205:15:0"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "50244:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1804,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "50244:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50243:15:0"
									},
									"scope": 1996,
									"src": "50188:703:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1918,
										"nodeType": "Block",
										"src": "51070:255:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1886,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1881,
														"src": "51084:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1887,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "51093:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "51084:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1892,
												"nodeType": "IfStatement",
												"src": "51080:54:0",
												"trueBody": {
													"id": 1891,
													"nodeType": "Block",
													"src": "51096:38:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 1889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "51117:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 1885,
															"id": 1890,
															"nodeType": "Return",
															"src": "51110:13:0"
														}
													]
												}
											},
											{
												"assignments": [
													1894
												],
												"declarations": [
													{
														"constant": false,
														"id": 1894,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "51151:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1918,
														"src": "51143:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1893,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "51143:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1896,
												"initialValue": {
													"id": 1895,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1881,
													"src": "51158:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51143:20:0"
											},
											{
												"assignments": [
													1898
												],
												"declarations": [
													{
														"constant": false,
														"id": 1898,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "51181:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1918,
														"src": "51173:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1897,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "51173:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1900,
												"initialValue": {
													"hexValue": "30",
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "51190:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51173:18:0"
											},
											{
												"body": {
													"id": 1911,
													"nodeType": "Block",
													"src": "51219:57:0",
													"statements": [
														{
															"expression": {
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "51233:8:0",
																"subExpression": {
																	"id": 1904,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1898,
																	"src": "51233:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1906,
															"nodeType": "ExpressionStatement",
															"src": "51233:8:0"
														},
														{
															"expression": {
																"id": 1909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1907,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1894,
																	"src": "51255:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51264:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "51255:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1910,
															"nodeType": "ExpressionStatement",
															"src": "51255:10:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1901,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "51208:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1902,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "51216:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "51208:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1912,
												"nodeType": "WhileStatement",
												"src": "51201:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1914,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "51304:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1915,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1898,
															"src": "51311:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1913,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1919,
															1995
														],
														"referencedDeclaration": 1995,
														"src": "51292:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51292:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1885,
												"id": 1917,
												"nodeType": "Return",
												"src": "51285:33:0"
											}
										]
									},
									"documentation": {
										"id": 1879,
										"nodeType": "StructuredDocumentation",
										"src": "50897:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "51005:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "51025:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "51017:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51017:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51016:15:0"
									},
									"returnParameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "51055:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1883,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "51055:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51054:15:0"
									},
									"scope": 1996,
									"src": "50996:329:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1994,
										"nodeType": "Block",
										"src": "51566:351:0",
										"statements": [
											{
												"assignments": [
													1930
												],
												"declarations": [
													{
														"constant": false,
														"id": 1930,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "51589:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1994,
														"src": "51576:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1929,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "51576:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1939,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51608:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1934,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1924,
																	"src": "51612:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "51608:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "51621:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "51608:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1932,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "51598:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1931,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "51602:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51598:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51576:47:0"
											},
											{
												"expression": {
													"id": 1944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1940,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1930,
															"src": "51633:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1942,
														"indexExpression": {
															"hexValue": "30",
															"id": 1941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51640:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "51633:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1943,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "51645:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "51633:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1945,
												"nodeType": "ExpressionStatement",
												"src": "51633:15:0"
											},
											{
												"expression": {
													"id": 1950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1946,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1930,
															"src": "51658:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1948,
														"indexExpression": {
															"hexValue": "31",
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51665:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "51658:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1949,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "51670:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "51658:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1951,
												"nodeType": "ExpressionStatement",
												"src": "51658:15:0"
											},
											{
												"body": {
													"id": 1980,
													"nodeType": "Block",
													"src": "51728:87:0",
													"statements": [
														{
															"expression": {
																"id": 1974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1966,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1930,
																		"src": "51742:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1968,
																	"indexExpression": {
																		"id": 1967,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1953,
																		"src": "51749:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "51742:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1969,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1799,
																		"src": "51754:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1973,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1970,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1922,
																			"src": "51767:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "51775:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "51767:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "51754:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "51742:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1975,
															"nodeType": "ExpressionStatement",
															"src": "51742:37:0"
														},
														{
															"expression": {
																"id": 1978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1976,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1922,
																	"src": "51793:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51803:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "51793:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1979,
															"nodeType": "ExpressionStatement",
															"src": "51793:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1960,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1953,
														"src": "51716:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "51720:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "51716:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1981,
												"initializationExpression": {
													"assignments": [
														1953
													],
													"declarations": [
														{
															"constant": false,
															"id": 1953,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "51696:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1981,
															"src": "51688:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1952,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "51688:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1959,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "51700:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1955,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1924,
																"src": "51704:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "51700:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51713:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "51700:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "51688:26:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "51723:3:0",
														"subExpression": {
															"id": 1963,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "51725:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1965,
													"nodeType": "ExpressionStatement",
													"src": "51723:3:0"
												},
												"nodeType": "ForStatement",
												"src": "51683:132:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1983,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1922,
																"src": "51832:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "51841:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "51832:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51844:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1982,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "51824:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51824:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1988,
												"nodeType": "ExpressionStatement",
												"src": "51824:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1991,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1930,
															"src": "51903:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "51896:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1989,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "51896:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51896:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1928,
												"id": 1993,
												"nodeType": "Return",
												"src": "51889:21:0"
											}
										]
									},
									"documentation": {
										"id": 1920,
										"nodeType": "StructuredDocumentation",
										"src": "51331:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "51457:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "51477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "51469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51469:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "51492:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "51484:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51468:31:0"
									},
									"returnParameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "51547:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1926,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "51547:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51546:15:0"
									},
									"scope": 1996,
									"src": "51448:469:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2456,
							"src": "50006:1913:0",
							"usedErrors": []
						},
						{
							"id": 1997,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "51980:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1999,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "53575:7:0"
									},
									"id": 2000,
									"nodeType": "InheritanceSpecifier",
									"src": "53575:7:0"
								},
								{
									"baseName": {
										"id": 2001,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1794,
										"src": "53584:14:0"
									},
									"id": 2002,
									"nodeType": "InheritanceSpecifier",
									"src": "53584:14:0"
								},
								{
									"baseName": {
										"id": 2003,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1114,
										"src": "53600:6:0"
									},
									"id": 2004,
									"nodeType": "InheritanceSpecifier",
									"src": "53600:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1998,
								"nodeType": "StructuredDocumentation",
								"src": "52005:1534:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 2298,
							"linearizedBaseContracts": [
								2298,
								1114,
								1092,
								1794,
								121
							],
							"name": "AccessControl",
							"nameLocation": "53558:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 2011,
									"members": [
										{
											"constant": false,
											"id": 2008,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "53664:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 2011,
											"src": "53639:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 2007,
												"keyType": {
													"id": 2005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "53639:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 2006,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "53658:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2010,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "53689:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 2011,
											"src": "53681:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2009,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "53681:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "53620:8:0",
									"nodeType": "StructDefinition",
									"scope": 2298,
									"src": "53613:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2016,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "53748:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 2298,
									"src": "53711:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$2011_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 2015,
										"keyType": {
											"id": 2012,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "53719:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "53711:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$2011_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 2014,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2013,
												"name": "RoleData",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2011,
												"src": "53730:8:0"
											},
											"referencedDeclaration": 2011,
											"src": "53730:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$2011_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 2019,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "53785:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 2298,
									"src": "53761:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2017,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "53761:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 2018,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "53806:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2031,
										"nodeType": "Block",
										"src": "54229:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2025,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2022,
															"src": "54250:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2026,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "54256:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "54256:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2024,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2116,
														"src": "54239:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 2028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54239:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2029,
												"nodeType": "ExpressionStatement",
												"src": "54239:30:0"
											},
											{
												"id": 2030,
												"nodeType": "PlaceholderStatement",
												"src": "54279:1:0"
											}
										]
									},
									"documentation": {
										"id": 2020,
										"nodeType": "StructuredDocumentation",
										"src": "53817:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 2032,
									"name": "onlyRole",
									"nameLocation": "54206:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "54223:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "54215:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2021,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "54215:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54214:14:0"
									},
									"src": "54197:90:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1113
									],
									"body": {
										"id": 2053,
										"nodeType": "Block",
										"src": "54489:135:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 2046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2041,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2035,
															"src": "54518:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2043,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1794,
																		"src": "54538:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1794_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1794_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 2042,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "54533:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54533:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$1794",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "54533:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "54518:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 2049,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2035,
																"src": "54605:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 2047,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "54581:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$2298_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1113,
															"src": "54581:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 2050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "54581:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "54518:99:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2040,
												"id": 2052,
												"nodeType": "Return",
												"src": "54499:118:0"
											}
										]
									},
									"documentation": {
										"id": 2033,
										"nodeType": "StructuredDocumentation",
										"src": "54293:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "54363:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2037,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "54453:8:0"
									},
									"parameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "54388:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "54381:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2034,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "54381:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54380:20:0"
									},
									"returnParameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "54479:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2038,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "54479:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54478:6:0"
									},
									"scope": 2298,
									"src": "54354:270:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1761
									],
									"body": {
										"id": 2072,
										"nodeType": "Block",
										"src": "54831:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 2065,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2016,
																"src": "54848:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$2011_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 2067,
															"indexExpression": {
																"id": 2066,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2057,
																"src": "54855:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "54848:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$2011_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 2068,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2008,
														"src": "54848:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2070,
													"indexExpression": {
														"id": 2069,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2059,
														"src": "54869:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "54848:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2064,
												"id": 2071,
												"nodeType": "Return",
												"src": "54841:36:0"
											}
										]
									},
									"documentation": {
										"id": 2055,
										"nodeType": "StructuredDocumentation",
										"src": "54630:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 2073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "54720:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2061,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "54795:8:0"
									},
									"parameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "54736:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "54728:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2056,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "54728:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "54750:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "54742:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54742:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54727:31:0"
									},
									"returnParameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "54821:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2062,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "54821:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54820:6:0"
									},
									"scope": 2298,
									"src": "54711:173:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2115,
										"nodeType": "Block",
										"src": "55230:419:0",
										"statements": [
											{
												"condition": {
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "55244:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 2082,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "55253:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 2083,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2078,
																"src": "55259:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2081,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2073,
															"src": "55245:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 2084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "55245:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2114,
												"nodeType": "IfStatement",
												"src": "55240:403:0",
												"trueBody": {
													"id": 2113,
													"nodeType": "Block",
													"src": "55269:374:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 2091,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "55377:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 2096,
																										"name": "account",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2078,
																										"src": "55456:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2095,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "55448:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint160_$",
																										"typeString": "type(uint160)"
																									},
																									"typeName": {
																										"id": 2094,
																										"name": "uint160",
																										"nodeType": "ElementaryTypeName",
																										"src": "55448:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 2097,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "55448:16:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								}
																							},
																							{
																								"hexValue": "3230",
																								"id": 2098,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "55466:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								},
																								"value": "20"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								},
																								{
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								}
																							],
																							"expression": {
																								"id": 2092,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1996,
																								"src": "55428:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1996_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 2093,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1995,
																							"src": "55428:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 2099,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "55428:41:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 2100,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "55495:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 2105,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2076,
																										"src": "55568:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 2104,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "55560:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 2103,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "55560:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 2106,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "55560:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 2107,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "55575:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 2101,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1996,
																								"src": "55540:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1996_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 2102,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1995,
																							"src": "55540:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 2108,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "55540:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 2089,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "55335:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 2090,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "55335:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 2109,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "55335:265:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 2088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "55307:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 2087,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "55307:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "55307:311:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2086,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "55283:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55283:349:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2112,
															"nodeType": "ExpressionStatement",
															"src": "55283:349:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2074,
										"nodeType": "StructuredDocumentation",
										"src": "54890:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 2116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "55174:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "55193:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "55185:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2075,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "55185:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "55207:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "55199:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55199:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55184:31:0"
									},
									"returnParameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55230:0:0"
									},
									"scope": 2298,
									"src": "55165:484:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1769
									],
									"body": {
										"id": 2130,
										"nodeType": "Block",
										"src": "55905:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 2125,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "55922:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$2011_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 2127,
														"indexExpression": {
															"id": 2126,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2119,
															"src": "55929:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "55922:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$2011_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 2128,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2010,
													"src": "55922:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2124,
												"id": 2129,
												"nodeType": "Return",
												"src": "55915:29:0"
											}
										]
									},
									"documentation": {
										"id": 2117,
										"nodeType": "StructuredDocumentation",
										"src": "55655:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 2131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "55839:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2121,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "55878:8:0"
									},
									"parameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "55860:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "55852:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2118,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "55852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55851:14:0"
									},
									"returnParameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "55896:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2122,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "55896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55895:9:0"
									},
									"scope": 2298,
									"src": "55830:121:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1777
									],
									"body": {
										"id": 2150,
										"nodeType": "Block",
										"src": "56340:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2146,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2134,
															"src": "56361:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2147,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "56367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2145,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2267,
														"src": "56350:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56350:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2149,
												"nodeType": "ExpressionStatement",
												"src": "56350:25:0"
											}
										]
									},
									"documentation": {
										"id": 2132,
										"nodeType": "StructuredDocumentation",
										"src": "55957:239:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 2151,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 2141,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2134,
															"src": "56329:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2140,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2131,
														"src": "56316:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 2142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56316:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2143,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2139,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2032,
												"src": "56307:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "56307:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "56210:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2138,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "56290:8:0"
									},
									"parameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "56228:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "56220:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2133,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "56220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "56242:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "56234:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56234:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56219:31:0"
									},
									"returnParameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56340:0:0"
									},
									"scope": 2298,
									"src": "56201:181:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1785
									],
									"body": {
										"id": 2170,
										"nodeType": "Block",
										"src": "56756:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2166,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2154,
															"src": "56778:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2167,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2156,
															"src": "56784:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2165,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2297,
														"src": "56766:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56766:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2169,
												"nodeType": "ExpressionStatement",
												"src": "56766:26:0"
											}
										]
									},
									"documentation": {
										"id": 2152,
										"nodeType": "StructuredDocumentation",
										"src": "56388:223:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 2171,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 2161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2154,
															"src": "56745:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2160,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2131,
														"src": "56732:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 2162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56732:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2163,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2159,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2032,
												"src": "56723:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "56723:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "56625:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2158,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "56706:8:0"
									},
									"parameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "56644:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "56636:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2153,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "56636:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "56658:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "56650:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56650:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56635:31:0"
									},
									"returnParameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56756:0:0"
									},
									"scope": 2298,
									"src": "56616:183:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1793
									],
									"body": {
										"id": 2193,
										"nodeType": "Block",
										"src": "57395:171:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2181,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2176,
																"src": "57426:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2182,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "57437:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57437:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "57426:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "57463:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 2180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "57405:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57405:117:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2187,
												"nodeType": "ExpressionStatement",
												"src": "57405:117:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2189,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2174,
															"src": "57545:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2190,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "57551:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2188,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2297,
														"src": "57533:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57533:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2192,
												"nodeType": "ExpressionStatement",
												"src": "57533:26:0"
											}
										]
									},
									"documentation": {
										"id": 2172,
										"nodeType": "StructuredDocumentation",
										"src": "56805:480:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 2194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "57299:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2178,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "57382:8:0"
									},
									"parameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "57320:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "57312:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2173,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "57312:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "57334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "57326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57311:31:0"
									},
									"returnParameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57395:0:0"
									},
									"scope": 2298,
									"src": "57290:276:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2207,
										"nodeType": "Block",
										"src": "58199:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2203,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2197,
															"src": "58220:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2204,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2199,
															"src": "58226:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2202,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2267,
														"src": "58209:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58209:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2206,
												"nodeType": "ExpressionStatement",
												"src": "58209:25:0"
											}
										]
									},
									"documentation": {
										"id": 2195,
										"nodeType": "StructuredDocumentation",
										"src": "57572:554:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ===="
									},
									"id": 2208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "58140:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "58159:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "58151:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2196,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "58151:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "58173:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "58165:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58165:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58150:31:0"
									},
									"returnParameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58199:0:0"
									},
									"scope": 2298,
									"src": "58131:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2235,
										"nodeType": "Block",
										"src": "58439:174:0",
										"statements": [
											{
												"assignments": [
													2217
												],
												"declarations": [
													{
														"constant": false,
														"id": 2217,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "58457:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 2235,
														"src": "58449:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2216,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "58449:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2221,
												"initialValue": {
													"arguments": [
														{
															"id": 2219,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2211,
															"src": "58490:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2218,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2131,
														"src": "58477:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 2220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58477:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58449:46:0"
											},
											{
												"expression": {
													"id": 2227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2222,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2016,
																"src": "58505:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$2011_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 2224,
															"indexExpression": {
																"id": 2223,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2211,
																"src": "58512:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "58505:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$2011_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 2225,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2010,
														"src": "58505:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2226,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "58530:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "58505:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2228,
												"nodeType": "ExpressionStatement",
												"src": "58505:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2230,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2211,
															"src": "58571:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2231,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2217,
															"src": "58577:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2232,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "58596:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2229,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "58554:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 2233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58554:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2234,
												"nodeType": "EmitStatement",
												"src": "58549:57:0"
											}
										]
									},
									"documentation": {
										"id": 2209,
										"nodeType": "StructuredDocumentation",
										"src": "58247:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 2236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "58375:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "58397:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "58389:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2210,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "58389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "58411:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "58403:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2212,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "58403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58388:33:0"
									},
									"returnParameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58439:0:0"
									},
									"scope": 2298,
									"src": "58366:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2266,
										"nodeType": "Block",
										"src": "58678:165:0",
										"statements": [
											{
												"condition": {
													"id": 2247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "58692:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 2244,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2238,
																"src": "58701:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 2245,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2240,
																"src": "58707:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2243,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2073,
															"src": "58693:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 2246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "58693:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2265,
												"nodeType": "IfStatement",
												"src": "58688:149:0",
												"trueBody": {
													"id": 2264,
													"nodeType": "Block",
													"src": "58717:120:0",
													"statements": [
														{
															"expression": {
																"id": 2255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2248,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2016,
																				"src": "58731:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$2011_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 2250,
																			"indexExpression": {
																				"id": 2249,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2238,
																				"src": "58738:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "58731:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$2011_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 2251,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2008,
																		"src": "58731:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2253,
																	"indexExpression": {
																		"id": 2252,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2240,
																		"src": "58752:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "58731:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 2254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "58763:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "58731:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2256,
															"nodeType": "ExpressionStatement",
															"src": "58731:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2258,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2238,
																		"src": "58798:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2259,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2240,
																		"src": "58804:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2260,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "58813:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "58813:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2257,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1742,
																	"src": "58786:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 2262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "58786:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2263,
															"nodeType": "EmitStatement",
															"src": "58781:45:0"
														}
													]
												}
											}
										]
									},
									"id": 2267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "58628:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "58647:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "58639:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2237,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "58639:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "58661:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "58653:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58638:31:0"
									},
									"returnParameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58678:0:0"
									},
									"scope": 2298,
									"src": "58619:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2296,
										"nodeType": "Block",
										"src": "58909:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 2275,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2269,
															"src": "58931:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2276,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2271,
															"src": "58937:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2274,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2073,
														"src": "58923:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 2277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58923:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2295,
												"nodeType": "IfStatement",
												"src": "58919:149:0",
												"trueBody": {
													"id": 2294,
													"nodeType": "Block",
													"src": "58947:121:0",
													"statements": [
														{
															"expression": {
																"id": 2285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2278,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2016,
																				"src": "58961:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$2011_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 2280,
																			"indexExpression": {
																				"id": 2279,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2269,
																				"src": "58968:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "58961:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$2011_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 2281,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2008,
																		"src": "58961:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2283,
																	"indexExpression": {
																		"id": 2282,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2271,
																		"src": "58982:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "58961:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 2284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "58993:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "58961:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2286,
															"nodeType": "ExpressionStatement",
															"src": "58961:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2288,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2269,
																		"src": "59029:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2289,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2271,
																		"src": "59035:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2290,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "59044:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "59044:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2287,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1751,
																	"src": "59017:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 2292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59017:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2293,
															"nodeType": "EmitStatement",
															"src": "59012:45:0"
														}
													]
												}
											}
										]
									},
									"id": 2297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "58858:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "58878:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "58870:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2268,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "58870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "58892:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "58884:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58884:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58869:31:0"
									},
									"returnParameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58909:0:0"
									},
									"scope": 2298,
									"src": "58849:225:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2456,
							"src": "53540:5536:0",
							"usedErrors": []
						},
						{
							"id": 2299,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "59115:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2300,
										"name": "AccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2298,
										"src": "59158:13:0"
									},
									"id": 2301,
									"nodeType": "InheritanceSpecifier",
									"src": "59158:13:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2336,
							"linearizedBaseContracts": [
								2336,
								2298,
								1114,
								1092,
								1794,
								121
							],
							"name": "Roles",
							"nameLocation": "59149:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 2306,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "59202:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2336,
									"src": "59178:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2302,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "59178:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e544552",
												"id": 2304,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "59226:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_f0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc9",
													"typeString": "literal_string \"MINTER\""
												},
												"value": "MINTER"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_f0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc9",
													"typeString": "literal_string \"MINTER\""
												}
											],
											"id": 2303,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "59216:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2305,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "59216:19:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2321,
										"nodeType": "Block",
										"src": "59256:108:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2310,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2019,
															"src": "59277:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2311,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "59297:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59297:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2309,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2208,
														"src": "59266:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59266:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2314,
												"nodeType": "ExpressionStatement",
												"src": "59266:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2316,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2306,
															"src": "59331:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2317,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "59344:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59344:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2315,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2208,
														"src": "59320:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59320:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2320,
												"nodeType": "ExpressionStatement",
												"src": "59320:37:0"
											}
										]
									},
									"id": 2322,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59253:2:0"
									},
									"returnParameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59256:0:0"
									},
									"scope": 2336,
									"src": "59242:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2334,
										"nodeType": "Block",
										"src": "59392:152:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2326,
																	"name": "MINTER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2306,
																	"src": "59431:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2327,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "59444:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "59444:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2325,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2073,
																"src": "59423:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 2329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59423:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f6c65733a2063616c6c657220646f6573206e6f74206861766520746865204d494e54455220726f6c65",
															"id": 2330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "59471:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d4eac389b100ca6a7240e4a1075be8a5e69fbe89e551e43c6fef394240e24fc",
																"typeString": "literal_string \"Roles: caller does not have the MINTER role\""
															},
															"value": "Roles: caller does not have the MINTER role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d4eac389b100ca6a7240e4a1075be8a5e69fbe89e551e43c6fef394240e24fc",
																"typeString": "literal_string \"Roles: caller does not have the MINTER role\""
															}
														],
														"id": 2324,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "59402:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59402:124:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2332,
												"nodeType": "ExpressionStatement",
												"src": "59402:124:0"
											},
											{
												"id": 2333,
												"nodeType": "PlaceholderStatement",
												"src": "59536:1:0"
											}
										]
									},
									"id": 2335,
									"name": "onlyMinter",
									"nameLocation": "59379:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59389:2:0"
									},
									"src": "59370:174:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2456,
							"src": "59140:406:0",
							"usedErrors": []
						},
						{
							"id": 2337,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "59598:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2339,
										"name": "ERC20Decimals",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1653,
										"src": "59729:13:0"
									},
									"id": 2340,
									"nodeType": "InheritanceSpecifier",
									"src": "59729:13:0"
								},
								{
									"baseName": {
										"id": 2341,
										"name": "ERC20Capped",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "59748:11:0"
									},
									"id": 2342,
									"nodeType": "InheritanceSpecifier",
									"src": "59748:11:0"
								},
								{
									"baseName": {
										"id": 2343,
										"name": "ERC20Mintable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1722,
										"src": "59765:13:0"
									},
									"id": 2344,
									"nodeType": "InheritanceSpecifier",
									"src": "59765:13:0"
								},
								{
									"baseName": {
										"id": 2345,
										"name": "ERC20Burnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 722,
										"src": "59784:13:0"
									},
									"id": 2346,
									"nodeType": "InheritanceSpecifier",
									"src": "59784:13:0"
								},
								{
									"baseName": {
										"id": 2347,
										"name": "ERC1363",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1499,
										"src": "59803:7:0"
									},
									"id": 2348,
									"nodeType": "InheritanceSpecifier",
									"src": "59803:7:0"
								},
								{
									"baseName": {
										"id": 2349,
										"name": "TokenRecover",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1626,
										"src": "59816:12:0"
									},
									"id": 2350,
									"nodeType": "InheritanceSpecifier",
									"src": "59816:12:0"
								},
								{
									"baseName": {
										"id": 2351,
										"name": "Roles",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2336,
										"src": "59834:5:0"
									},
									"id": 2352,
									"nodeType": "InheritanceSpecifier",
									"src": "59834:5:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2338,
								"nodeType": "StructuredDocumentation",
								"src": "59623:75:0",
								"text": " @title PowerfulERC20\n @dev Implementation of the PowerfulERC20"
							},
							"fullyImplemented": true,
							"id": 2455,
							"linearizedBaseContracts": [
								2455,
								2336,
								2298,
								1626,
								1601,
								1499,
								1114,
								1191,
								1092,
								1794,
								722,
								1722,
								785,
								1653,
								663,
								100,
								77,
								121
							],
							"name": "PowerfulERC20",
							"nameLocation": "59708:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2390,
										"nodeType": "Block",
										"src": "60077:267:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2376,
																"name": "initialBalance_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2362,
																"src": "60232:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2377,
																"name": "cap_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2360,
																"src": "60251:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "60232:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332304361707065643a20636170206578636565646564",
															"id": 2379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "60257:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f",
																"typeString": "literal_string \"ERC20Capped: cap exceeded\""
															},
															"value": "ERC20Capped: cap exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f",
																"typeString": "literal_string \"ERC20Capped: cap exceeded\""
															}
														],
														"id": 2375,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "60224:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60224:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2381,
												"nodeType": "ExpressionStatement",
												"src": "60224:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2385,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "60307:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "60307:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2387,
															"name": "initialBalance_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2362,
															"src": "60321:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2382,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "60295:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$663_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 2384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 523,
														"src": "60295:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60295:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2389,
												"nodeType": "ExpressionStatement",
												"src": "60295:42:0"
											}
										]
									},
									"id": 2391,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2365,
													"name": "name_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2354,
													"src": "60018:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 2366,
													"name": "symbol_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2356,
													"src": "60025:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2367,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2364,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 663,
												"src": "60012:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "60012:21:0"
										},
										{
											"arguments": [
												{
													"id": 2369,
													"name": "decimals_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2358,
													"src": "60048:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												}
											],
											"id": 2370,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2368,
												"name": "ERC20Decimals",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1653,
												"src": "60034:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "60034:24:0"
										},
										{
											"arguments": [
												{
													"id": 2372,
													"name": "cap_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2360,
													"src": "60071:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2373,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2371,
												"name": "ERC20Capped",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 785,
												"src": "60059:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "60059:17:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "59881:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "59867:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2353,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "59867:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "59910:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "59896:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2355,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "59896:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "decimals_",
												"nameLocation": "59933:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "59927:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "59927:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "cap_",
												"nameLocation": "59960:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "59952:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "initialBalance_",
												"nameLocation": "59982:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "59974:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59974:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59857:146:0"
									},
									"returnParameters": {
										"id": 2374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60077:0:0"
									},
									"scope": 2455,
									"src": "59846:498:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										192,
										1652
									],
									"body": {
										"id": 2403,
										"nodeType": "Block",
										"src": "60481:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2399,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "60498:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_PowerfulERC20_$2455_$",
																"typeString": "type(contract super PowerfulERC20)"
															}
														},
														"id": 2400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1652,
														"src": "60498:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
															"typeString": "function () view returns (uint8)"
														}
													},
													"id": 2401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60498:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 2398,
												"id": 2402,
												"nodeType": "Return",
												"src": "60491:23:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 2404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "60359:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2395,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2393,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 663,
												"src": "60431:5:0"
											},
											{
												"id": 2394,
												"name": "ERC20Decimals",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1653,
												"src": "60438:13:0"
											}
										],
										"src": "60422:30:0"
									},
									"parameters": {
										"id": 2392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60367:2:0"
									},
									"returnParameters": {
										"id": 2398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "60470:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2396,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "60470:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60469:7:0"
									},
									"scope": 2455,
									"src": "60350:171:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1258,
										2054
									],
									"body": {
										"id": 2419,
										"nodeType": "Block",
										"src": "60686:60:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2416,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2406,
															"src": "60727:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 2414,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "60703:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_PowerfulERC20_$2455_$",
																"typeString": "type(contract super PowerfulERC20)"
															}
														},
														"id": 2415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2054,
														"src": "60703:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 2417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60703:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2413,
												"id": 2418,
												"nodeType": "Return",
												"src": "60696:43:0"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 2420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "60536:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2410,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2408,
												"name": "AccessControl",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2298,
												"src": "60635:13:0"
											},
											{
												"id": 2409,
												"name": "ERC1363",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1499,
												"src": "60650:7:0"
											}
										],
										"src": "60626:32:0"
									},
									"parameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "60561:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2420,
												"src": "60554:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2405,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "60554:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60553:20:0"
									},
									"returnParameters": {
										"id": 2413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2420,
												"src": "60676:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2411,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "60676:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60675:6:0"
									},
									"scope": 2455,
									"src": "60527:219:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										523,
										784
									],
									"body": {
										"id": 2440,
										"nodeType": "Block",
										"src": "61153:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2436,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2423,
															"src": "61175:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2437,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2425,
															"src": "61184:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2433,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "61163:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_PowerfulERC20_$2455_$",
																"typeString": "type(contract super PowerfulERC20)"
															}
														},
														"id": 2435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 784,
														"src": "61163:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61163:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2439,
												"nodeType": "ExpressionStatement",
												"src": "61163:28:0"
											}
										]
									},
									"documentation": {
										"id": 2421,
										"nodeType": "StructuredDocumentation",
										"src": "60752:271:0",
										"text": " @dev Function to mint tokens.\n NOTE: restricting access to addresses with MINTER role. See {ERC20Mintable-mint}.\n @param account The address that will receive the minted tokens\n @param amount The amount of tokens to mint"
									},
									"id": 2441,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2431,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2430,
												"name": "onlyMinter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2335,
												"src": "61138:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "61138:10:0"
										}
									],
									"name": "_mint",
									"nameLocation": "61037:5:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2429,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2427,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 663,
												"src": "61110:5:0"
											},
											{
												"id": 2428,
												"name": "ERC20Capped",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 785,
												"src": "61117:11:0"
											}
										],
										"src": "61101:28:0"
									},
									"parameters": {
										"id": 2426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "61051:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "61043:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "61043:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "61068:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "61060:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61042:33:0"
									},
									"returnParameters": {
										"id": 2432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61153:0:0"
									},
									"scope": 2455,
									"src": "61028:170:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1721
									],
									"body": {
										"id": 2453,
										"nodeType": "Block",
										"src": "61412:39:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2448,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "61422:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_PowerfulERC20_$2455_$",
																"typeString": "type(contract super PowerfulERC20)"
															}
														},
														"id": 2450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_finishMinting",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1721,
														"src": "61422:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61422:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2452,
												"nodeType": "ExpressionStatement",
												"src": "61422:22:0"
											}
										]
									},
									"documentation": {
										"id": 2442,
										"nodeType": "StructuredDocumentation",
										"src": "61204:149:0",
										"text": " @dev Function to stop minting new tokens.\n NOTE: restricting access to owner only. See {ERC20Mintable-finishMinting}."
									},
									"id": 2454,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2446,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2445,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1544,
												"src": "61402:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "61402:9:0"
										}
									],
									"name": "_finishMinting",
									"nameLocation": "61367:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2444,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "61393:8:0"
									},
									"parameters": {
										"id": 2443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61381:2:0"
									},
									"returnParameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61412:0:0"
									},
									"scope": 2455,
									"src": "61358:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2456,
							"src": "59699:1754:0",
							"usedErrors": []
						}
					],
					"src": "90:61363:0"
				},
				"id": 0
			}
		}
	}
}